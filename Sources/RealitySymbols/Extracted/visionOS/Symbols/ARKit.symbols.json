{
  "metadata": {
    "formatVersion": {
      "major": 0,
      "minor": 6,
      "patch": 0
    },
    "generator": "Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)"
  },
  "module": {
    "name": "ARKit",
    "platform": {
      "architecture": "arm64",
      "vendor": "apple",
      "operatingSystem": {
        "name": "xros",
        "minimumVersion": {
          "major": 1,
          "minor": 0
        }
      }
    }
  },
  "symbols": [
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO21indexFingerMetacarpalyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "indexFingerMetacarpal"
      ],
      "names": {
        "title": "HandSkeleton.JointName.indexFingerMetacarpal",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "indexFingerMetacarpal"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The index finger metacarpal joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "indexFingerMetacarpal"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO12undeterminedyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "undetermined"
      ],
      "names": {
        "title": "PlaneAnchor.Classification.undetermined",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "undetermined"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Plane classification has not yet been determined."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "undetermined"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit14GeometrySourceV6offsetSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometrySource",
        "offset"
      ],
      "names": {
        "title": "offset",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "offset"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the offset (in bytes) from the beginning of the buffer."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "offset"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV5countSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "count"
      ],
      "names": {
        "title": "count",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "count"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the number of primitives in the buffer."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "count"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence"
      ],
      "names": {
        "title": "AnchorUpdateSequence",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "AnchorUpdateSequence"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "AnchorUpdateSequence"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A sequence of updated anchors."
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 0
          }
        ],
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "AnchorUpdateSequence"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": "> "
        },
        {
          "kind": "keyword",
          "spelling": "where"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Anchor",
          "preciseIdentifier": "s:5ARKit6AnchorP"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV8GeometryV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "Geometry"
      ],
      "names": {
        "title": "MeshAnchor.Geometry",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Geometry"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Geometry"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A three-dimensional shape that represents the geometry of a mesh."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Geometry"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO12notAvailableyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "notAvailable"
      ],
      "names": {
        "title": "PlaneAnchor.Classification.notAvailable",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "notAvailable"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Plane classification is currently unavailable."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "notAvailable"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO8thumbTipyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "thumbTip"
      ],
      "names": {
        "title": "HandSkeleton.JointName.thumbTip",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "thumbTip"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The thumb tip joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "thumbTip"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV8GeometryV5facesAA0D7ElementVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "Geometry",
        "faces"
      ],
      "names": {
        "title": "faces",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "faces"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "GeometryElement",
            "preciseIdentifier": "s:5ARKit15GeometryElementV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the faces of the mesh."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "faces"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "GeometryElement",
          "preciseIdentifier": "s:5ARKit15GeometryElementV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit11ImageAnchorV2IDa",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageAnchor",
        "ID"
      ],
      "names": {
        "title": "ImageAnchor.ID",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "ID"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ID"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "A type representing the stable identity of the entity associated with"
          },
          {
            "text": "an instance."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ID"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "filter(_:)"
      ],
      "names": {
        "title": "filter(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "filter"
          },
          {
            "kind": "text",
            "spelling": "(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncFilterSequence",
            "preciseIdentifier": "s:12_Concurrency19AsyncFilterSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that contains, in order, the elements of"
          },
          {
            "text": "the base sequence that satisfy the given predicate."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `filter(_:)` method returns `true` for even"
          },
          {
            "text": "values and `false` for odd values, thereby filtering out the odd values:"
          },
          {
            "text": ""
          },
          {
            "text": "    let stream = Counter(howHigh: 10)"
          },
          {
            "text": "        .filter { $0 % 2 == 0 }"
          },
          {
            "text": "    for await number in stream {"
          },
          {
            "text": "        print(number, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"2 4 6 8 10 \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter isIncluded: A closure that takes an element of the"
          },
          {
            "text": "  asynchronous sequence as its argument and returns a Boolean value"
          },
          {
            "text": "  that indicates whether to include the element in the filtered sequence."
          },
          {
            "text": "- Returns: An asynchronous sequence that contains, in order, the elements"
          },
          {
            "text": "  of the base sequence that satisfy the given predicate."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "isIncluded",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "isIncluded"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncFilterSequence",
            "preciseIdentifier": "s:12_Concurrency19AsyncFilterSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "filter"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "isIncluded"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncFilterSequence",
          "preciseIdentifier": "s:12_Concurrency19AsyncFilterSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC6eventsAC6EventsVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "events"
      ],
      "names": {
        "title": "events",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "events"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Events",
            "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A sequence of events that have occurred on this session."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "events"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Events",
          "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO7unknownyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "unknown"
      ],
      "names": {
        "title": "PlaneAnchor.Classification.unknown",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "unknown"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Plane classification is not any of the known classes."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "unknown"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO20thumbIntermediateTipyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "thumbIntermediateTip"
      ],
      "names": {
        "title": "HandSkeleton.JointName.thumbIntermediateTip",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "thumbIntermediateTip"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The thumb intermediate tip joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "thumbIntermediateTip"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11ImageAnchorV010originFromC9TransformSo13simd_float4x4avp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageAnchor",
        "originFromAnchorTransform"
      ],
      "names": {
        "title": "originFromAnchorTransform",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "originFromAnchorTransform"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "simd_float4x4",
            "preciseIdentifier": "c:@SA@simd_float4x4"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The transform from the image anchor to the origin coordinate system."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "originFromAnchorTransform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "simd_float4x4",
          "preciseIdentifier": "c:@SA@simd_float4x4"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_image_tracking_provider",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_image_tracking_provider"
      ],
      "names": {
        "title": "OS_ar_image_tracking_provider",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_image_tracking_provider"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_image_tracking_provider"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_image_tracking_provider"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "OS_ar_data_provider",
          "preciseIdentifier": "c:objc(pl)OS_ar_data_provider"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO21thumbIntermediateBaseyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "thumbIntermediateBase"
      ],
      "names": {
        "title": "HandSkeleton.JointName.thumbIntermediateBase",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "thumbIntermediateBase"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The thumb intermediate base joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "thumbIntermediateBase"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "filter(_:)"
      ],
      "names": {
        "title": "filter(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "filter"
          },
          {
            "kind": "text",
            "spelling": "(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncFilterSequence",
            "preciseIdentifier": "s:12_Concurrency19AsyncFilterSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that contains, in order, the elements of"
          },
          {
            "text": "the base sequence that satisfy the given predicate."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `filter(_:)` method returns `true` for even"
          },
          {
            "text": "values and `false` for odd values, thereby filtering out the odd values:"
          },
          {
            "text": ""
          },
          {
            "text": "    let stream = Counter(howHigh: 10)"
          },
          {
            "text": "        .filter { $0 % 2 == 0 }"
          },
          {
            "text": "    for await number in stream {"
          },
          {
            "text": "        print(number, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"2 4 6 8 10 \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter isIncluded: A closure that takes an element of the"
          },
          {
            "text": "  asynchronous sequence as its argument and returns a Boolean value"
          },
          {
            "text": "  that indicates whether to include the element in the filtered sequence."
          },
          {
            "text": "- Returns: An asynchronous sequence that contains, in order, the elements"
          },
          {
            "text": "  of the base sequence that satisfy the given predicate."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "isIncluded",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "isIncluded"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncFilterSequence",
            "preciseIdentifier": "s:12_Concurrency19AsyncFilterSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "filter"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "isIncluded"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncFilterSequence",
          "preciseIdentifier": "s:12_Concurrency19AsyncFilterSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit0A7SessionC5ErrorV4CodeO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "Code",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events"
      ],
      "names": {
        "title": "ARKitSession.Events",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Events"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Events"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A sequence of events."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Events"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV8geometryAC8GeometryVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "geometry"
      ],
      "names": {
        "title": "geometry",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "geometry"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "MeshAnchor",
            "preciseIdentifier": "s:5ARKit10MeshAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Geometry",
            "preciseIdentifier": "s:5ARKit10MeshAnchorV8GeometryV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the geometry of the mesh in the anchor's coordinate system."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "geometry"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "MeshAnchor",
          "preciseIdentifier": "s:5ARKit10MeshAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Geometry",
          "preciseIdentifier": "s:5ARKit10MeshAnchorV8GeometryV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit20AnchorUpdateSequenceV13AsyncIteratora",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "AsyncIterator"
      ],
      "names": {
        "title": "AnchorUpdateSequence.AsyncIterator",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "AsyncIterator"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "AsyncIterator"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "The type of asynchronous iterator that produces elements of this"
          },
          {
            "text": "asynchronous sequence."
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 0
          }
        ],
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "AsyncIterator"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdateSequence",
          "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": ">."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Iterator",
          "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV8IteratorV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO12thumbKnuckleyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "thumbKnuckle"
      ],
      "names": {
        "title": "HandSkeleton.JointName.thumbKnuckle",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "thumbKnuckle"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The thumb knuckle joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "thumbKnuckle"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV13bytesPerIndexSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "bytesPerIndex"
      ],
      "names": {
        "title": "bytesPerIndex",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "bytesPerIndex"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the number of bytes that represent an index value."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "bytesPerIndex"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV6anchorAA0B6AnchorVSgvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "anchor"
      ],
      "names": {
        "title": "anchor",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "let"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "anchor"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "WorldAnchor",
            "preciseIdentifier": "s:5ARKit11WorldAnchorV"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The anchor for which this error occurred (if any)."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "let"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "anchor"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "WorldAnchor",
          "preciseIdentifier": "s:5ARKit11WorldAnchorV"
        },
        {
          "kind": "text",
          "spelling": "?"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO5wristyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "wrist"
      ],
      "names": {
        "title": "HandSkeleton.JointName.wrist",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "wrist"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The wrist joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "wrist"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV8GeometryV15classificationsAA0D6SourceVSgvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "Geometry",
        "classifications"
      ],
      "names": {
        "title": "classifications",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "classifications"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "GeometrySource",
            "preciseIdentifier": "s:5ARKit14GeometrySourceV"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the classification for each face of the mesh."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "classifications"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "GeometrySource",
          "preciseIdentifier": "s:5ARKit14GeometrySourceV"
        },
        {
          "kind": "text",
          "spelling": "? { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit14GeometrySourceV6strideSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometrySource",
        "stride"
      ],
      "names": {
        "title": "stride",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "stride"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the number of bytes from a vector to the next one in the buffer."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "stride"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV8geometryAC8GeometryVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "geometry"
      ],
      "names": {
        "title": "geometry",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "geometry"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "PlaneAnchor",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Geometry",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV8GeometryV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the geometry of the plane in the anchor's coordinate system."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "geometry"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "PlaneAnchor",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Geometry",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV8GeometryV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11ImageAnchorV20estimatedScaleFactorSfvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageAnchor",
        "estimatedScaleFactor"
      ],
      "names": {
        "title": "estimatedScaleFactor",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "estimatedScaleFactor"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Float",
            "preciseIdentifier": "s:Sf"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The estimated scale factor between the image's physical size and provided size."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "estimatedScaleFactor"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Float",
          "preciseIdentifier": "s:Sf"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC19AuthorizationStatusO13notDeterminedyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationStatus",
        "notDetermined"
      ],
      "names": {
        "title": "ARKitSession.AuthorizationStatus.notDetermined",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "notDetermined"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The user has not yet granted permission."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "notDetermined"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "compactMap(_:)"
      ],
      "names": {
        "title": "compactMap(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "compactMap"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": ">(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": "?) -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncCompactMapSequence",
            "preciseIdentifier": "s:12_Concurrency23AsyncCompactMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that maps the given closure over the"
          },
          {
            "text": "asynchronous sequence’s elements, omitting results that don't return a"
          },
          {
            "text": "value."
          },
          {
            "text": ""
          },
          {
            "text": "Use the `compactMap(_:)` method to transform every element received from"
          },
          {
            "text": "a base asynchronous sequence, while also discarding any `nil` results"
          },
          {
            "text": "from the closure. Typically, you use this to transform from one type of"
          },
          {
            "text": "element to another."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `5`. The closure provided to the `compactMap(_:)`"
          },
          {
            "text": "method takes each `Int` and looks up a corresponding `String` from a"
          },
          {
            "text": "`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"
          },
          {
            "text": "returns `nil` in this case, which `compactMap(_:)` omits from the"
          },
          {
            "text": "transformed asynchronous sequence."
          },
          {
            "text": ""
          },
          {
            "text": "    let romanNumeralDict: [Int: String] ="
          },
          {
            "text": "        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"
          },
          {
            "text": "        "
          },
          {
            "text": "    let stream = Counter(howHigh: 5)"
          },
          {
            "text": "        .compactMap { romanNumeralDict[$0] }"
          },
          {
            "text": "    for await numeral in stream {"
          },
          {
            "text": "        print(numeral, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"I II III V \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter transform: A mapping closure. `transform` accepts an element"
          },
          {
            "text": "  of this sequence as its parameter and returns a transformed value of the"
          },
          {
            "text": "  same or of a different type."
          },
          {
            "text": "- Returns: An asynchronous sequence that contains, in order, the"
          },
          {
            "text": "  non-`nil` elements produced by the `transform` closure."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "transform",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "transform"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "ElementOfResult"
              },
              {
                "kind": "text",
                "spelling": "?"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncCompactMapSequence",
            "preciseIdentifier": "s:12_Concurrency23AsyncCompactMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "ElementOfResult",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "compactMap"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "ElementOfResult"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "transform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ElementOfResult"
        },
        {
          "kind": "text",
          "spelling": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncCompactMapSequence",
          "preciseIdentifier": "s:12_Concurrency23AsyncCompactMapSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ElementOfResult"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_anchor",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_anchor"
      ],
      "names": {
        "title": "OS_ar_anchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_anchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_anchor"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_anchor"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:s5ErrorP10FoundationE20localizedDescriptionSSvp::SYNTHESIZED::s:5ARKit0A7SessionC5ErrorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "localizedDescription"
      ],
      "names": {
        "title": "localizedDescription",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "localizedDescription"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "Foundation",
        "lines": [
          {
            "text": "Retrieve the localized description for this error."
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "localizedDescription"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 10
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 2,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 8,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 9,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate"
      ],
      "names": {
        "title": "AnchorUpdate",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "AnchorUpdate"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "AnchorUpdate"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "An update for an anchor with a timestamp & event which caused the update."
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 0
          }
        ],
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "AnchorUpdate"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": "> "
        },
        {
          "kind": "keyword",
          "spelling": "where"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Anchor",
          "preciseIdentifier": "s:5ARKit6AnchorP"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_world_tracking_provider",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_world_tracking_provider"
      ],
      "names": {
        "title": "OS_ar_world_tracking_provider",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_world_tracking_provider"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_world_tracking_provider"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_world_tracking_provider"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "OS_ar_data_provider",
          "preciseIdentifier": "c:objc(pl)OS_ar_data_provider"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit14ReferenceImageV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ReferenceImage",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this reference image."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV9PrimitiveO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "Primitive"
      ],
      "names": {
        "title": "GeometryElement.Primitive",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Primitive"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Primitive"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Enumeration of possible geometry primitive types."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Primitive"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV4codeAE4CodeOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "code"
      ],
      "names": {
        "title": "code",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "code"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "WorldTrackingProvider",
            "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Error",
            "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Code",
            "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The error code."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "code"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "WorldTrackingProvider",
          "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Error",
          "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Code",
          "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV8GeometryV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "Geometry",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this geometry."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_world_tracking_configuration",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_world_tracking_configuration"
      ],
      "names": {
        "title": "OS_ar_world_tracking_configuration",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_world_tracking_configuration"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_world_tracking_configuration"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_world_tracking_configuration"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.init",
        "displayName": "Initializer"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionCACycfc",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "init()"
      ],
      "names": {
        "title": "init()",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "convenience"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "init"
          },
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Create a new session."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "convenience"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "init"
        },
        {
          "kind": "text",
          "spelling": "()"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC19AuthorizationStatusO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationStatus",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of AuthorizationStatus"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit14GeometrySourceV19componentsPerVectorSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometrySource",
        "componentsPerVector"
      ],
      "names": {
        "title": "componentsPerVector",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "componentsPerVector"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the number of scalar components in each vector."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "componentsPerVector"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_mesh_anchor",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_mesh_anchor"
      ],
      "names": {
        "title": "OS_ar_mesh_anchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_mesh_anchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_mesh_anchor"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_mesh_anchor"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "OS_ar_anchor",
          "preciseIdentifier": "c:objc(pl)OS_ar_anchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "compactMap(_:)"
      ],
      "names": {
        "title": "compactMap(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "compactMap"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": ">(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": "?) -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncCompactMapSequence",
            "preciseIdentifier": "s:12_Concurrency23AsyncCompactMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that maps the given closure over the"
          },
          {
            "text": "asynchronous sequence’s elements, omitting results that don't return a"
          },
          {
            "text": "value."
          },
          {
            "text": ""
          },
          {
            "text": "Use the `compactMap(_:)` method to transform every element received from"
          },
          {
            "text": "a base asynchronous sequence, while also discarding any `nil` results"
          },
          {
            "text": "from the closure. Typically, you use this to transform from one type of"
          },
          {
            "text": "element to another."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `5`. The closure provided to the `compactMap(_:)`"
          },
          {
            "text": "method takes each `Int` and looks up a corresponding `String` from a"
          },
          {
            "text": "`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"
          },
          {
            "text": "returns `nil` in this case, which `compactMap(_:)` omits from the"
          },
          {
            "text": "transformed asynchronous sequence."
          },
          {
            "text": ""
          },
          {
            "text": "    let romanNumeralDict: [Int: String] ="
          },
          {
            "text": "        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"
          },
          {
            "text": "        "
          },
          {
            "text": "    let stream = Counter(howHigh: 5)"
          },
          {
            "text": "        .compactMap { romanNumeralDict[$0] }"
          },
          {
            "text": "    for await numeral in stream {"
          },
          {
            "text": "        print(numeral, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"I II III V \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter transform: A mapping closure. `transform` accepts an element"
          },
          {
            "text": "  of this sequence as its parameter and returns a transformed value of the"
          },
          {
            "text": "  same or of a different type."
          },
          {
            "text": "- Returns: An asynchronous sequence that contains, in order, the"
          },
          {
            "text": "  non-`nil` elements produced by the `transform` closure."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "transform",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "transform"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "ElementOfResult"
              },
              {
                "kind": "text",
                "spelling": "?"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncCompactMapSequence",
            "preciseIdentifier": "s:12_Concurrency23AsyncCompactMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "ElementOfResult",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "compactMap"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "ElementOfResult"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "transform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ElementOfResult"
        },
        {
          "kind": "text",
          "spelling": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncCompactMapSequence",
          "preciseIdentifier": "s:12_Concurrency23AsyncCompactMapSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ElementOfResult"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit14GeometrySourceV6formatSo15MTLVertexFormatVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometrySource",
        "format"
      ],
      "names": {
        "title": "format",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "format"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "MTLVertexFormat",
            "preciseIdentifier": "c:@E@MTLVertexFormat"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the type of per-vector data in the buffer."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "format"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "MTLVertexFormat",
          "preciseIdentifier": "c:@E@MTLVertexFormat"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC19AuthorizationStatusO6deniedyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationStatus",
        "denied"
      ],
      "names": {
        "title": "ARKitSession.AuthorizationStatus.denied",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "denied"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The user has explicitly denied permission."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "denied"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC19AuthorizationStatusO7allowedyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationStatus",
        "allowed"
      ],
      "names": {
        "title": "ARKitSession.AuthorizationStatus.allowed",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "allowed"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The user has explicitly granted permission."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "allowed"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV8GeometryV12meshVerticesAA0D6SourceVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Geometry",
        "meshVertices"
      ],
      "names": {
        "title": "meshVertices",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "meshVertices"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "GeometrySource",
            "preciseIdentifier": "s:5ARKit14GeometrySourceV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The vertices of the plane mesh."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "meshVertices"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "GeometrySource",
          "preciseIdentifier": "s:5ARKit14GeometrySourceV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit11ImageAnchorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageAnchor"
      ],
      "names": {
        "title": "ImageAnchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "ImageAnchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ImageAnchor"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Represents a tracked image."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ImageAnchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit12DataProviderP22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProvider",
        "requiredAuthorizations"
      ],
      "names": {
        "title": "requiredAuthorizations",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "requiredAuthorizations"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The authorization type(s) required by this data provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "requiredAuthorizations"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": "] { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit14GeometrySourceV5countSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometrySource",
        "count"
      ],
      "names": {
        "title": "count",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "count"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the number of vectors in the source."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "count"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC17AuthorizationTypeO2eeoiySbAE_AEtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationType",
        "==(_:_:)"
      ],
      "names": {
        "title": "==(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "=="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Returns a Boolean value indicating whether two values are equal."
          },
          {
            "text": ""
          },
          {
            "text": "Equality is the inverse of inequality. For any values `a` and `b`,"
          },
          {
            "text": "`a == b` implies that `a != b` is `false`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - lhs: A value to compare."
          },
          {
            "text": "  - rhs: Another value to compare."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "a",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "a"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "ARKitSession",
                "preciseIdentifier": "s:5ARKit0A7SessionC"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "AuthorizationType",
                "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
              }
            ]
          },
          {
            "name": "b",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "b"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "ARKitSession",
                "preciseIdentifier": "s:5ARKit0A7SessionC"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "AuthorizationType",
                "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "=="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "a"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "b"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21ImageTrackingProviderC5stateAA04DataD5StateOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageTrackingProvider",
        "state"
      ],
      "names": {
        "title": "state",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "state"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DataProviderState",
            "preciseIdentifier": "s:5ARKit17DataProviderStateO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The state of this image tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "state"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DataProviderState",
          "preciseIdentifier": "s:5ARKit17DataProviderStateO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV9AlignmentO9hashValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Alignment",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The hash value."
          },
          {
            "text": ""
          },
          {
            "text": "Hash values are not guaranteed to be equal across different executions of"
          },
          {
            "text": "your program. Do not save hash values to use during a future execution."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: `hashValue` is deprecated as a `Hashable` requirement. To"
          },
          {
            "text": "  conform to `Hashable`, implement the `hash(into:)` requirement instead."
          },
          {
            "text": "  The compiler provides an implementation for `hashValue` for you."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11ImageAnchorV09referenceB0AA09ReferenceB0Vvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageAnchor",
        "referenceImage"
      ],
      "names": {
        "title": "referenceImage",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "referenceImage"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ReferenceImage",
            "preciseIdentifier": "s:5ARKit14ReferenceImageV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The reference image which this anchor corresponds to."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "referenceImage"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ReferenceImage",
          "preciseIdentifier": "s:5ARKit14ReferenceImageV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV16errorDescriptionSSSgvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "errorDescription"
      ],
      "names": {
        "title": "errorDescription",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "errorDescription"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A localized message describing what error occurred."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "errorDescription"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": "? { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5EventO24dataProviderStateChangedyAESayAA04DataE0_pG_AA0heF0OAC5ErrorVSgtcAEmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Event",
        "dataProviderStateChanged(dataProviders:newState:error:)"
      ],
      "names": {
        "title": "ARKitSession.Event.dataProviderStateChanged(dataProviders:newState:error:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "dataProviderStateChanged"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "dataProviders"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DataProvider",
            "preciseIdentifier": "s:5ARKit12DataProviderP"
          },
          {
            "kind": "text",
            "spelling": "], "
          },
          {
            "kind": "externalParam",
            "spelling": "newState"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DataProviderState",
            "preciseIdentifier": "s:5ARKit17DataProviderStateO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "externalParam",
            "spelling": "error"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Error",
            "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV"
          },
          {
            "kind": "text",
            "spelling": "?)"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Data provider state changed."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - dataProviders: The data providers whose state has changed"
          },
          {
            "text": "  - newState: The new data provider state"
          },
          {
            "text": "  - error: The error that occurred (if any)."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "dataProviderStateChanged"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "dataProviders"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DataProvider",
          "preciseIdentifier": "s:5ARKit12DataProviderP"
        },
        {
          "kind": "text",
          "spelling": "], "
        },
        {
          "kind": "externalParam",
          "spelling": "newState"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DataProviderState",
          "preciseIdentifier": "s:5ARKit17DataProviderStateO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "externalParam",
          "spelling": "error"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Error",
          "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV"
        },
        {
          "kind": "text",
          "spelling": "?)"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit0A7SessionC17AuthorizationTypeO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationType",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit0A7SessionC19AuthorizationStatusO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationStatus",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.var",
        "displayName": "Global Variable"
      },
      "identifier": {
        "precise": "c:@macro@AR_OBJECT_USE_OBJC",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AR_OBJECT_USE_OBJC"
      ],
      "names": {
        "title": "AR_OBJECT_USE_OBJC",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "AR_OBJECT_USE_OBJC"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int32",
            "preciseIdentifier": "s:s5Int32V"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "AR_OBJECT_USE_OBJC"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int32",
          "preciseIdentifier": "s:s5Int32V"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV9AlignmentO4hash4intoys6HasherVz_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Alignment",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Hashes the essential components of this value by feeding them into the"
          },
          {
            "text": "given hasher."
          },
          {
            "text": ""
          },
          {
            "text": "Implement this method to conform to the `Hashable` protocol. The"
          },
          {
            "text": "components used for hashing must be the same as the components compared"
          },
          {
            "text": "in your type's `==` operator implementation. Call `hasher.combine(_:)`"
          },
          {
            "text": "with each of these components."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: In your implementation of `hash(into:)`,"
          },
          {
            "text": "  don't call `finalize()` on the `hasher` instance provided,"
          },
          {
            "text": "  or replace it with a different instance."
          },
          {
            "text": "  Doing so may become a compile-time error in the future."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter hasher: The hasher to use when combining the components"
          },
          {
            "text": "  of this instance."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit12DataProviderP11isSupportedSbvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProvider",
        "isSupported"
      ],
      "names": {
        "title": "isSupported",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "isSupported"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Determines whether this device supports this data provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "isSupported"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV5JointV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "Joint"
      ],
      "names": {
        "title": "HandSkeleton.Joint",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Joint"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Joint"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A joint in a hand skeleton."
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "ARKit",
        "typeKind": "swift.struct"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Joint"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5EventO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Event",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of ARKitSession.Event"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV9ChiralityO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "Chirality"
      ],
      "names": {
        "title": "HandAnchor.Chirality",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Chirality"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Chirality"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Enumeration to distinguish between left and right hands."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@frozen"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Chirality"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.init",
        "displayName": "Initializer"
      },
      "identifier": {
        "precise": "s:5ARKit14ReferenceImageV11pixelBuffer12physicalSize11orientationACSo11CVBufferRefa_So6CGSizeVSo26CGImagePropertyOrientationVtcfc",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ReferenceImage",
        "init(pixelBuffer:physicalSize:orientation:)"
      ],
      "names": {
        "title": "init(pixelBuffer:physicalSize:orientation:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "init"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "pixelBuffer"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "CVPixelBuffer",
            "preciseIdentifier": "c:@T@CVPixelBufferRef"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "externalParam",
            "spelling": "physicalSize"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "CGSize",
            "preciseIdentifier": "c:@S@CGSize"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "externalParam",
            "spelling": "orientation"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "CGImagePropertyOrientation",
            "preciseIdentifier": "c:@E@CGImagePropertyOrientation"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Initialize a reference image from a given pixel buffer."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - pixelBuffer: The pixel buffer"
          },
          {
            "text": "  - physicalSize: The size of the image in meters"
          },
          {
            "text": "  - orientation: The image orientation"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "init"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "pixelBuffer"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "CVPixelBuffer",
          "preciseIdentifier": "c:@T@CVPixelBufferRef"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "externalParam",
          "spelling": "physicalSize"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "CGSize",
          "preciseIdentifier": "c:@S@CGSize"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "externalParam",
          "spelling": "orientation"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "CGImagePropertyOrientation",
          "preciseIdentifier": "c:@E@CGImagePropertyOrientation"
        },
        {
          "kind": "text",
          "spelling": " = .up)"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Geometry",
        "Extent"
      ],
      "names": {
        "title": "PlaneAnchor.Geometry.Extent",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Extent"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Extent"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Extent"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.init",
        "displayName": "Initializer"
      },
      "identifier": {
        "precise": "s:5ARKit21ImageTrackingProviderC15referenceImagesACSayAA09ReferenceB0VG_tcfc",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageTrackingProvider",
        "init(referenceImages:)"
      ],
      "names": {
        "title": "init(referenceImages:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "init"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "referenceImages"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ReferenceImage",
            "preciseIdentifier": "s:5ARKit14ReferenceImageV"
          },
          {
            "kind": "text",
            "spelling": "])"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Create an image tracking provider."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - referenceImages: The reference images to look for."
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: The image tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "init"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "referenceImages"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ReferenceImage",
          "preciseIdentifier": "s:5ARKit14ReferenceImageV"
        },
        {
          "kind": "text",
          "spelling": "])"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "Code",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_geometry_element",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_geometry_element"
      ],
      "names": {
        "title": "OS_ar_geometry_element",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_geometry_element"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_geometry_element"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_geometry_element"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_mesh_anchors",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_mesh_anchors"
      ],
      "names": {
        "title": "OS_ar_mesh_anchors",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_mesh_anchors"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_mesh_anchors"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_mesh_anchors"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11ImageAnchorV9isTrackedSbvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageAnchor",
        "isTracked"
      ],
      "names": {
        "title": "isTracked",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "isTracked"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Whether this image anchor is currently tracked or not."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "isTracked"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC17AuthorizationTypeO9hashValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationType",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The hash value."
          },
          {
            "text": ""
          },
          {
            "text": "Hash values are not guaranteed to be equal across different executions of"
          },
          {
            "text": "your program. Do not save hash values to use during a future execution."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: `hashValue` is deprecated as a `Hashable` requirement. To"
          },
          {
            "text": "  conform to `Hashable`, implement the `hash(into:)` requirement instead."
          },
          {
            "text": "  The compiler provides an implementation for `hashValue` for you."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5EventO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Event"
      ],
      "names": {
        "title": "ARKitSession.Event",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Event"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Event"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Enumeration of possible session events."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Event"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV9AlignmentO2eeoiySbAE_AEtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Alignment",
        "==(_:_:)"
      ],
      "names": {
        "title": "==(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "=="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "PlaneAnchor",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Alignment",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV9AlignmentO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "PlaneAnchor",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Alignment",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV9AlignmentO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Returns a Boolean value indicating whether two values are equal."
          },
          {
            "text": ""
          },
          {
            "text": "Equality is the inverse of inequality. For any values `a` and `b`,"
          },
          {
            "text": "`a == b` implies that `a != b` is `false`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - lhs: A value to compare."
          },
          {
            "text": "  - rhs: Another value to compare."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "a",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "a"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "PlaneAnchor",
                "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Alignment",
                "preciseIdentifier": "s:5ARKit11PlaneAnchorV9AlignmentO"
              }
            ]
          },
          {
            "name": "b",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "b"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "PlaneAnchor",
                "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Alignment",
                "preciseIdentifier": "s:5ARKit11PlaneAnchorV9AlignmentO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "=="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "a"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "PlaneAnchor",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Alignment",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV9AlignmentO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "b"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "PlaneAnchor",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Alignment",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV9AlignmentO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11ImageAnchorV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageAnchor",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:5ARKit10MeshAnchorV0B14ClassificationO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "swiftGenerics": {
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "Self",
            "rhs": "Hashable",
            "rhsPrecise": "s:SH"
          },
          {
            "kind": "conformance",
            "lhs": "Self.RawValue",
            "rhs": "Hashable",
            "rhsPrecise": "s:SH"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol",
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "Self",
            "rhs": "Hashable",
            "rhsPrecise": "s:SH"
          },
          {
            "kind": "conformance",
            "lhs": "Self.RawValue",
            "rhs": "Hashable",
            "rhsPrecise": "s:SH"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit14GeometrySourceV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometrySource",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this geometry source."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12DataProviderP5stateAA0bC5StateOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProvider",
        "state"
      ],
      "names": {
        "title": "state",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "state"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DataProviderState",
            "preciseIdentifier": "s:5ARKit17DataProviderStateO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The state of this data provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "state"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DataProviderState",
          "preciseIdentifier": "s:5ARKit17DataProviderStateO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC4stopyyF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "stop()"
      ],
      "names": {
        "title": "stop()",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "stop"
          },
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Stop all data providers running in this session."
          }
        ]
      },
      "functionSignature": {
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "stop"
        },
        {
          "kind": "text",
          "spelling": "()"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit14GeometrySourceV6bufferSo9MTLBuffer_pvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometrySource",
        "buffer"
      ],
      "names": {
        "title": "buffer",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "buffer"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "MTLBuffer",
            "preciseIdentifier": "c:objc(pl)MTLBuffer"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get a Metal buffer containing per-vector data for the source."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "buffer"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "MTLBuffer",
          "preciseIdentifier": "c:objc(pl)MTLBuffer"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC17AuthorizationTypeO4hash4intoys6HasherVz_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationType",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Hashes the essential components of this value by feeding them into the"
          },
          {
            "text": "given hasher."
          },
          {
            "text": ""
          },
          {
            "text": "Implement this method to conform to the `Hashable` protocol. The"
          },
          {
            "text": "components used for hashing must be the same as the components compared"
          },
          {
            "text": "in your type's `==` operator implementation. Call `hasher.combine(_:)`"
          },
          {
            "text": "with each of these components."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: In your implementation of `hash(into:)`,"
          },
          {
            "text": "  don't call `finalize()` on the `hasher` instance provided,"
          },
          {
            "text": "  or replace it with a different instance."
          },
          {
            "text": "  Doing so may become a compile-time error in the future."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter hasher: The hasher to use when combining the components"
          },
          {
            "text": "  of this instance."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV18recoverySuggestionSSSgvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "recoverySuggestion"
      ],
      "names": {
        "title": "recoverySuggestion",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "recoverySuggestion"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A localized message describing how one might recover from the failure."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "recoverySuggestion"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": "? { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit14ReferenceImageV12physicalSizeSo6CGSizeVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ReferenceImage",
        "physicalSize"
      ],
      "names": {
        "title": "physicalSize",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "physicalSize"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "CGSize",
            "preciseIdentifier": "c:@S@CGSize"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The physical size of the printed reference image, in meters."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "physicalSize"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "CGSize",
          "preciseIdentifier": "c:@S@CGSize"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.class",
        "displayName": "Class"
      },
      "identifier": {
        "precise": "s:5ARKit21ImageTrackingProviderC",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageTrackingProvider"
      ],
      "names": {
        "title": "ImageTrackingProvider",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "ImageTrackingProvider"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "class"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ImageTrackingProvider"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Provides the real time position of reference images in the user's environment."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "class"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ImageTrackingProvider"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification"
      ],
      "names": {
        "title": "PlaneAnchor.Classification",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Classification"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Classification"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Enumeration of possible plane classifications."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Classification"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV9PrimitiveO9hashValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "Primitive",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The hash value."
          },
          {
            "text": ""
          },
          {
            "text": "Hash values are not guaranteed to be equal across different executions of"
          },
          {
            "text": "your program. Do not save hash values to use during a future execution."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: `hashValue` is deprecated as a `Hashable` requirement. To"
          },
          {
            "text": "  conform to `Hashable`, implement the `hash(into:)` requirement instead."
          },
          {
            "text": "  The compiler provides an implementation for `hashValue` for you."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV13failureReasonSSSgvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "failureReason"
      ],
      "names": {
        "title": "failureReason",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "failureReason"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A localized message describing the reason for the failure."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "failureReason"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": "? { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC3runyySayAA12DataProvider_pGYaKF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "run(_:)"
      ],
      "names": {
        "title": "run(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "run"
          },
          {
            "kind": "text",
            "spelling": "(["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DataProvider",
            "preciseIdentifier": "s:5ARKit12DataProviderP"
          },
          {
            "kind": "text",
            "spelling": "]) "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Run a collection of data providers."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - dataProviders: The data providers to run."
          },
          {
            "text": ""
          },
          {
            "text": "- Throws: `ARKitSession.Error`"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "dataProviders",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "dataProviders"
              },
              {
                "kind": "text",
                "spelling": ": ["
              },
              {
                "kind": "typeIdentifier",
                "spelling": "DataProvider",
                "preciseIdentifier": "s:5ARKit12DataProviderP"
              },
              {
                "kind": "text",
                "spelling": "]"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "run"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "dataProviders"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DataProvider",
          "preciseIdentifier": "s:5ARKit12DataProviderP"
        },
        {
          "kind": "text",
          "spelling": "]) "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:5ARKit10MeshAnchorV0B14ClassificationO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol",
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "Self",
            "rhs": "Hashable",
            "rhsPrecise": "s:SH"
          },
          {
            "kind": "conformance",
            "lhs": "Self.RawValue",
            "rhs": "Hashable",
            "rhsPrecise": "s:SH"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName"
      ],
      "names": {
        "title": "HandSkeleton.JointName",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "JointName"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "JointName"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A collection of names for hand skeleton joints."
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "ARKit",
        "typeKind": "swift.struct"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "JointName"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5EventO20authorizationChangedyAeC17AuthorizationTypeO_AC0F6StatusOtcAEmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Event",
        "authorizationChanged(type:status:)"
      ],
      "names": {
        "title": "ARKitSession.Event.authorizationChanged(type:status:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "authorizationChanged"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "type"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "externalParam",
            "spelling": "status"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationStatus",
            "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Authorization changed."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - type: The authorization type which changed."
          },
          {
            "text": "  - status: The new status of this authorization."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "authorizationChanged"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "type"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "externalParam",
          "spelling": "status"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationStatus",
          "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "flatMap(_:)"
      ],
      "names": {
        "title": "flatMap(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "flatMap"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ">(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncFlatMapSequence",
            "preciseIdentifier": "s:12_Concurrency20AsyncFlatMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that concatenates the results of calling"
          },
          {
            "text": "the given transformation with each element of this sequence."
          },
          {
            "text": ""
          },
          {
            "text": "Use this method to receive a single-level asynchronous sequence when your"
          },
          {
            "text": "transformation produces an asynchronous sequence for each element."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `5`. The transforming closure takes the received `Int`"
          },
          {
            "text": "and returns a new `Counter` that counts that high. For example, when the"
          },
          {
            "text": "transform receives `3` from the base sequence, it creates a new `Counter`"
          },
          {
            "text": "that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"
          },
          {
            "text": "\"flattens\" the resulting sequence-of-sequences into a single"
          },
          {
            "text": "`AsyncSequence`."
          },
          {
            "text": ""
          },
          {
            "text": "    let stream = Counter(howHigh: 5)"
          },
          {
            "text": "        .flatMap { Counter(howHigh: $0) }"
          },
          {
            "text": "    for await number in stream {"
          },
          {
            "text": "        print(number, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"1 1 2 1 2 3 1 2 3 4 1 2 3 4 5 \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter transform: A mapping closure. `transform` accepts an element"
          },
          {
            "text": "  of this sequence as its parameter and returns an `AsyncSequence`."
          },
          {
            "text": "- Returns: A single, flattened asynchronous sequence that contains all"
          },
          {
            "text": "  elements in all the asynchronous sequences produced by `transform`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "transform",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "transform"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "SegmentOfResult"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncFlatMapSequence",
            "preciseIdentifier": "s:12_Concurrency20AsyncFlatMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "SegmentOfResult",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "flatMap"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "transform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncFlatMapSequence",
          "preciseIdentifier": "s:12_Concurrency20AsyncFlatMapSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": "> "
        },
        {
          "kind": "keyword",
          "spelling": "where"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncSequence",
          "preciseIdentifier": "s:Sci"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV9alignmentAC9AlignmentOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "alignment"
      ],
      "names": {
        "title": "alignment",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "alignment"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "PlaneAnchor",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Alignment",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV9AlignmentO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the alignment of this plane."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "alignment"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "PlaneAnchor",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Alignment",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV9AlignmentO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV5jointyAC5JointVAC0E4NameOF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "joint(_:)"
      ],
      "names": {
        "title": "joint(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "joint"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandSkeleton",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "JointName",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandSkeleton",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Joint",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV5JointV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the joint of a given name."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - named: The joint name"
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: The joint"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "named",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "named"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "HandSkeleton",
                "preciseIdentifier": "s:5ARKit12HandSkeletonV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "JointName",
                "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "HandSkeleton",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Joint",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV5JointV"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "joint"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "named"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandSkeleton",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "JointName",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandSkeleton",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Joint",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV5JointV"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this world tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12DeviceAnchorV010originFromC9TransformSo13simd_float4x4avp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DeviceAnchor",
        "originFromAnchorTransform"
      ],
      "names": {
        "title": "originFromAnchorTransform",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "originFromAnchorTransform"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "simd_float4x4",
            "preciseIdentifier": "c:@SA@simd_float4x4"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The transform from the device anchor to the origin coordinate system."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "originFromAnchorTransform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "simd_float4x4",
          "preciseIdentifier": "c:@SA@simd_float4x4"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "s:5ARKit12DataProviderP",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProvider"
      ],
      "names": {
        "title": "DataProvider",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "DataProvider"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "DataProvider"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A data provider is an interface for receiving data from ARKit."
          },
          {
            "text": ""
          },
          {
            "text": "Most data providers offer an async sequence which you can iterate over to receive data (updated anchors)."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "DataProvider"
        },
        {
          "kind": "text",
          "spelling": " : AnyObject, "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "CustomStringConvertible",
          "preciseIdentifier": "s:s23CustomStringConvertibleP"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Sendable",
          "preciseIdentifier": "s:s8SendableP"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV9AlignmentO10horizontalyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Alignment",
        "horizontal"
      ],
      "names": {
        "title": "PlaneAnchor.Alignment.horizontal",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "horizontal"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Planes orthogonal to the gravity vector."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "horizontal"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit27SceneReconstructionProviderC4ModeO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "Mode",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV4CodeO9hashValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "Code",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The hash value."
          },
          {
            "text": ""
          },
          {
            "text": "Hash values are not guaranteed to be equal across different executions of"
          },
          {
            "text": "your program. Do not save hash values to use during a future execution."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: `hashValue` is deprecated as a `Hashable` requirement. To"
          },
          {
            "text": "  conform to `Hashable`, implement the `hash(into:)` requirement instead."
          },
          {
            "text": "  The compiler provides an implementation for `hashValue` for you."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement"
      ],
      "names": {
        "title": "GeometryElement",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "GeometryElement"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "GeometryElement"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A container for index data, such as vertex indices of a face."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "GeometryElement"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC4ModeO14classificationyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "Mode",
        "classification"
      ],
      "names": {
        "title": "SceneReconstructionProvider.Mode.classification",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "classification"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Scene reconstruction generates a classification for each face"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "classification"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "prefix(while:)"
      ],
      "names": {
        "title": "prefix(while:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "prefix"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "while"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncPrefixWhileSequence",
            "preciseIdentifier": "s:12_Concurrency24AsyncPrefixWhileSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns an asynchronous sequence, containing the initial, consecutive"
          },
          {
            "text": "elements of the base sequence that satisfy the given predicate."
          },
          {
            "text": ""
          },
          {
            "text": "Use `prefix(while:)` to produce values while elements from the base"
          },
          {
            "text": "sequence meet a condition you specify. The modified sequence ends when"
          },
          {
            "text": "the predicate closure returns `false`."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `prefix(while:)` method causes the modified"
          },
          {
            "text": "sequence to pass along values so long as they aren’t divisible by `2` and"
          },
          {
            "text": "`3`. Upon reaching `6`, the sequence ends:"
          },
          {
            "text": ""
          },
          {
            "text": "    let stream = Counter(howHigh: 10)"
          },
          {
            "text": "        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"
          },
          {
            "text": "    for try await number in stream {"
          },
          {
            "text": "        print(number, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"1 2 3 4 5 \""
          },
          {
            "text": "    "
          },
          {
            "text": "- Parameter predicate: A closure that takes an element as a parameter and"
          },
          {
            "text": "  returns a Boolean value indicating whether the element should be"
          },
          {
            "text": "  included in the modified sequence."
          },
          {
            "text": "- Returns: An asynchronous sequence of the initial, consecutive"
          },
          {
            "text": "  elements that satisfy `predicate`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "while",
            "internalName": "predicate",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "predicate"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncPrefixWhileSequence",
            "preciseIdentifier": "s:12_Concurrency24AsyncPrefixWhileSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "prefix"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "while"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "predicate"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncPrefixWhileSequence",
          "preciseIdentifier": "s:12_Concurrency24AsyncPrefixWhileSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV9AlignmentO8verticalyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Alignment",
        "vertical"
      ],
      "names": {
        "title": "PlaneAnchor.Alignment.vertical",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "vertical"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Planes parallel to the gravity vector."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "vertical"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC5stateAA04DataD5StateOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "state"
      ],
      "names": {
        "title": "state",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "state"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DataProviderState",
            "preciseIdentifier": "s:5ARKit17DataProviderStateO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The state of this scene reconstruction provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "state"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DataProviderState",
          "preciseIdentifier": "s:5ARKit17DataProviderStateO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC4ModeO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "Mode",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of SceneReconstructionProvider.Mode"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit12DeviceAnchorV2IDa",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DeviceAnchor",
        "ID"
      ],
      "names": {
        "title": "DeviceAnchor.ID",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "ID"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ID"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "A type representing the stable identity of the entity associated with"
          },
          {
            "text": "an instance."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ID"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV9AlignmentO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Alignment",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of PlaneAnchor.Alignment"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV9ChiralityO5rightyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "Chirality",
        "right"
      ],
      "names": {
        "title": "HandAnchor.Chirality.right",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "right"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The right hand."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "right"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14classificationAC14ClassificationOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "classification"
      ],
      "names": {
        "title": "classification",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "classification"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "PlaneAnchor",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Classification",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV14ClassificationO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the classification of this plane."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "classification"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "PlaneAnchor",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Classification",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV14ClassificationO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "flatMap(_:)"
      ],
      "names": {
        "title": "flatMap(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "flatMap"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ">(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncFlatMapSequence",
            "preciseIdentifier": "s:12_Concurrency20AsyncFlatMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that concatenates the results of calling"
          },
          {
            "text": "the given transformation with each element of this sequence."
          },
          {
            "text": ""
          },
          {
            "text": "Use this method to receive a single-level asynchronous sequence when your"
          },
          {
            "text": "transformation produces an asynchronous sequence for each element."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `5`. The transforming closure takes the received `Int`"
          },
          {
            "text": "and returns a new `Counter` that counts that high. For example, when the"
          },
          {
            "text": "transform receives `3` from the base sequence, it creates a new `Counter`"
          },
          {
            "text": "that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"
          },
          {
            "text": "\"flattens\" the resulting sequence-of-sequences into a single"
          },
          {
            "text": "`AsyncSequence`."
          },
          {
            "text": ""
          },
          {
            "text": "    let stream = Counter(howHigh: 5)"
          },
          {
            "text": "        .flatMap { Counter(howHigh: $0) }"
          },
          {
            "text": "    for await number in stream {"
          },
          {
            "text": "        print(number, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"1 1 2 1 2 3 1 2 3 4 1 2 3 4 5 \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter transform: A mapping closure. `transform` accepts an element"
          },
          {
            "text": "  of this sequence as its parameter and returns an `AsyncSequence`."
          },
          {
            "text": "- Returns: A single, flattened asynchronous sequence that contains all"
          },
          {
            "text": "  elements in all the asynchronous sequences produced by `transform`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "transform",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "transform"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "SegmentOfResult"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncFlatMapSequence",
            "preciseIdentifier": "s:12_Concurrency20AsyncFlatMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "SegmentOfResult",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "flatMap"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "transform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncFlatMapSequence",
          "preciseIdentifier": "s:12_Concurrency20AsyncFlatMapSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": "> "
        },
        {
          "kind": "keyword",
          "spelling": "where"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncSequence",
          "preciseIdentifier": "s:Sci"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit12AnchorUpdateV5EventO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "Event",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV9ChiralityO4leftyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "Chirality",
        "left"
      ],
      "names": {
        "title": "HandAnchor.Chirality.left",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "left"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The left hand."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "left"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV11neutralPoseACvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "neutralPose"
      ],
      "names": {
        "title": "neutralPose",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "neutralPose"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandSkeleton",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the skeleton of a hand in a neutral pose."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "neutralPose"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandSkeleton",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC13anchorUpdatesAA20AnchorUpdateSequenceVyAA0bG0VGvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "anchorUpdates"
      ],
      "names": {
        "title": "anchorUpdates",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "anchorUpdates"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorUpdateSequence",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "WorldAnchor",
            "preciseIdentifier": "s:5ARKit11WorldAnchorV"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "An async sequence of all anchor updates. It is triggered whenever there are updates to world anchors. That includes persisted world anchors from previous runs of the app."
          },
          {
            "text": ""
          },
          {
            "text": "Note: This handler will also be called for persisted world anchors from previous runs of the app, once the device"
          },
          {
            "text": "has successfully relocalized to the anchor's environment. World anchors persist across device restarts until they"
          },
          {
            "text": "are explicitly removed. Identify the anchors you want to react to by calling `.id`."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "anchorUpdates"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdateSequence",
          "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "WorldAnchor",
          "preciseIdentifier": "s:5ARKit11WorldAnchorV"
        },
        {
          "kind": "text",
          "spelling": "> { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV9ChiralityO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "Chirality",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of HandAnchor.Chirality"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "prefix(while:)"
      ],
      "names": {
        "title": "prefix(while:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "prefix"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "while"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncPrefixWhileSequence",
            "preciseIdentifier": "s:12_Concurrency24AsyncPrefixWhileSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns an asynchronous sequence, containing the initial, consecutive"
          },
          {
            "text": "elements of the base sequence that satisfy the given predicate."
          },
          {
            "text": ""
          },
          {
            "text": "Use `prefix(while:)` to produce values while elements from the base"
          },
          {
            "text": "sequence meet a condition you specify. The modified sequence ends when"
          },
          {
            "text": "the predicate closure returns `false`."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `prefix(while:)` method causes the modified"
          },
          {
            "text": "sequence to pass along values so long as they aren’t divisible by `2` and"
          },
          {
            "text": "`3`. Upon reaching `6`, the sequence ends:"
          },
          {
            "text": ""
          },
          {
            "text": "    let stream = Counter(howHigh: 10)"
          },
          {
            "text": "        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"
          },
          {
            "text": "    for try await number in stream {"
          },
          {
            "text": "        print(number, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"1 2 3 4 5 \""
          },
          {
            "text": "    "
          },
          {
            "text": "- Parameter predicate: A closure that takes an element as a parameter and"
          },
          {
            "text": "  returns a Boolean value indicating whether the element should be"
          },
          {
            "text": "  included in the modified sequence."
          },
          {
            "text": "- Returns: An asynchronous sequence of the initial, consecutive"
          },
          {
            "text": "  elements that satisfy `predicate`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "while",
            "internalName": "predicate",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "predicate"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncPrefixWhileSequence",
            "preciseIdentifier": "s:12_Concurrency24AsyncPrefixWhileSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "prefix"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "while"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "predicate"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncPrefixWhileSequence",
          "preciseIdentifier": "s:12_Concurrency24AsyncPrefixWhileSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_trackable_anchor",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_trackable_anchor"
      ],
      "names": {
        "title": "OS_ar_trackable_anchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_trackable_anchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_trackable_anchor"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_trackable_anchor"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "OS_ar_anchor",
          "preciseIdentifier": "c:objc(pl)OS_ar_anchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit14GeometrySourceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometrySource"
      ],
      "names": {
        "title": "GeometrySource",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "GeometrySource"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "GeometrySource"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A container for vector data of a geometry."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "GeometrySource"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.init",
        "displayName": "Initializer"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC5modesACSayAC4ModeOG_tcfc",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "init(modes:)"
      ],
      "names": {
        "title": "init(modes:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "init"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "modes"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SceneReconstructionProvider",
            "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Mode",
            "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC4ModeO"
          },
          {
            "kind": "text",
            "spelling": "])"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Create a scene reconstruction provider."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - modes: The scene reconstruction modes to use. By default, a mesh with no classification is reconstructed."
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: The scene reconstruction provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "init"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "modes"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SceneReconstructionProvider",
          "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Mode",
          "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC4ModeO"
        },
        {
          "kind": "text",
          "spelling": "] = [])"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC4ModeO2eeoiySbAE_AEtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "Mode",
        "==(_:_:)"
      ],
      "names": {
        "title": "==(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "=="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SceneReconstructionProvider",
            "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Mode",
            "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC4ModeO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SceneReconstructionProvider",
            "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Mode",
            "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC4ModeO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Returns a Boolean value indicating whether two values are equal."
          },
          {
            "text": ""
          },
          {
            "text": "Equality is the inverse of inequality. For any values `a` and `b`,"
          },
          {
            "text": "`a == b` implies that `a != b` is `false`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - lhs: A value to compare."
          },
          {
            "text": "  - rhs: Another value to compare."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "a",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "a"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "SceneReconstructionProvider",
                "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Mode",
                "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC4ModeO"
              }
            ]
          },
          {
            "name": "b",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "b"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "SceneReconstructionProvider",
                "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Mode",
                "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC4ModeO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "=="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "a"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SceneReconstructionProvider",
          "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Mode",
          "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC4ModeO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "b"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SceneReconstructionProvider",
          "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Mode",
          "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC4ModeO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9allJointsSayAC5JointVGvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "allJoints"
      ],
      "names": {
        "title": "allJoints",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "allJoints"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandSkeleton",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Joint",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV5JointV"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "All joints of this skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "allJoints"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandSkeleton",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Joint",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV5JointV"
        },
        {
          "kind": "text",
          "spelling": "] { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_plane_extent",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_plane_extent"
      ],
      "names": {
        "title": "OS_ar_plane_extent",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_plane_extent"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_plane_extent"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_plane_extent"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.class",
        "displayName": "Class"
      },
      "identifier": {
        "precise": "s:5ARKit20HandTrackingProviderC",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandTrackingProvider"
      ],
      "names": {
        "title": "HandTrackingProvider",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "HandTrackingProvider"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "class"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "HandTrackingProvider"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Provides you with data about the user's hands."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "class"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "HandTrackingProvider"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV9AlignmentO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Alignment"
      ],
      "names": {
        "title": "PlaneAnchor.Alignment",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Alignment"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Alignment"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Enumeration of possible alignments of a detected plane."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Alignment"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV8GeometryV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Geometry"
      ],
      "names": {
        "title": "PlaneAnchor.Geometry",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Geometry"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Geometry"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Geometry of a plane."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Geometry"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV5JointV9isTrackedSbvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "Joint",
        "isTracked"
      ],
      "names": {
        "title": "isTracked",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "isTracked"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The tracking status of this joint."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "isTracked"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "first(where:)"
      ],
      "names": {
        "title": "first(where:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "first"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "where"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns the first element of the sequence that satisfies the given"
          },
          {
            "text": "predicate."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `first(where:)` method returns the first"
          },
          {
            "text": "member of the sequence that's evenly divisible by both `2` and `3`."
          },
          {
            "text": ""
          },
          {
            "text": "    let divisibleBy2And3 = await Counter(howHigh: 10)"
          },
          {
            "text": "        .first { $0 % 2 == 0 && $0 % 3 == 0 }"
          },
          {
            "text": "    print(divisibleBy2And3 ?? \"none\")"
          },
          {
            "text": "    // Prints \"6\""
          },
          {
            "text": ""
          },
          {
            "text": "The predicate executes each time the asynchronous sequence produces an"
          },
          {
            "text": "element, until either the predicate finds a match or the sequence ends."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter predicate: A closure that takes an element of the asynchronous"
          },
          {
            "text": " sequence as its argument and returns a Boolean value that indicates"
          },
          {
            "text": " whether the element is a match."
          },
          {
            "text": "- Returns: The first element of the sequence that satisfies `predicate`,"
          },
          {
            "text": "  or `nil` if there is no element that satisfies `predicate`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "where",
            "internalName": "predicate",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "predicate"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "first"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "where"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "predicate"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": "?"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO8RawValuea",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "RawValue"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.RawValue",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "RawValue"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "RawValue"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The raw type that can be used to represent all values of the conforming"
          },
          {
            "text": "type."
          },
          {
            "text": ""
          },
          {
            "text": "Every distinct value of the conforming type has a corresponding unique"
          },
          {
            "text": "value of the `RawValue` type, but there may be values of the `RawValue`"
          },
          {
            "text": "type that don't have a corresponding value of the conforming type."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "RawValue"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSInteger",
          "preciseIdentifier": "c:@T@NSInteger"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV4CodeO2eeoiySbAG_AGtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "Code",
        "==(_:_:)"
      ],
      "names": {
        "title": "==(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "=="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Error",
            "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Code",
            "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV4CodeO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Error",
            "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Code",
            "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV4CodeO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Returns a Boolean value indicating whether two values are equal."
          },
          {
            "text": ""
          },
          {
            "text": "Equality is the inverse of inequality. For any values `a` and `b`,"
          },
          {
            "text": "`a == b` implies that `a != b` is `false`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - lhs: A value to compare."
          },
          {
            "text": "  - rhs: Another value to compare."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "a",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "a"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "ARKitSession",
                "preciseIdentifier": "s:5ARKit0A7SessionC"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Error",
                "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Code",
                "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV4CodeO"
              }
            ]
          },
          {
            "name": "b",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "b"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "ARKitSession",
                "preciseIdentifier": "s:5ARKit0A7SessionC"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Error",
                "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Code",
                "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV4CodeO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "=="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "a"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Error",
          "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Code",
          "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV4CodeO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "b"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Error",
          "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Code",
          "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV4CodeO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC5modesSayAC4ModeOGvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "modes"
      ],
      "names": {
        "title": "modes",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "let"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "modes"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SceneReconstructionProvider",
            "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Mode",
            "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC4ModeO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The scene reconstruction modes set on this scene reconstruction provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "let"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "modes"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SceneReconstructionProvider",
          "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Mode",
          "preciseIdentifier": "s:5ARKit27SceneReconstructionProviderC4ModeO"
        },
        {
          "kind": "text",
          "spelling": "]"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "flatMap(_:)"
      ],
      "names": {
        "title": "flatMap(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "flatMap"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ">(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncThrowingFlatMapSequence",
            "preciseIdentifier": "s:12_Concurrency28AsyncThrowingFlatMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that concatenates the results of calling"
          },
          {
            "text": "the given error-throwing transformation with each element of this"
          },
          {
            "text": "sequence."
          },
          {
            "text": ""
          },
          {
            "text": "Use this method to receive a single-level asynchronous sequence when your"
          },
          {
            "text": "transformation produces an asynchronous sequence for each element."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `5`. The transforming closure takes the received `Int`"
          },
          {
            "text": "and returns a new `Counter` that counts that high. For example, when the"
          },
          {
            "text": "transform receives `3` from the base sequence, it creates a new `Counter`"
          },
          {
            "text": "that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"
          },
          {
            "text": "\"flattens\" the resulting sequence-of-sequences into a single"
          },
          {
            "text": "`AsyncSequence`. However, when the closure receives `4`, it throws an"
          },
          {
            "text": "error, terminating the sequence."
          },
          {
            "text": ""
          },
          {
            "text": "    do {"
          },
          {
            "text": "        let stream = Counter(howHigh: 5)"
          },
          {
            "text": "            .flatMap { (value) -> Counter in"
          },
          {
            "text": "                if value == 4 {"
          },
          {
            "text": "                    throw MyError()"
          },
          {
            "text": "                }"
          },
          {
            "text": "                return Counter(howHigh: value)"
          },
          {
            "text": "            }"
          },
          {
            "text": "        for try await number in stream {"
          },
          {
            "text": "            print(number, terminator: \" \")"
          },
          {
            "text": "        }"
          },
          {
            "text": "    } catch {"
          },
          {
            "text": "        print(error)"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"1 1 2 1 2 3 MyError() \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter transform: An error-throwing mapping closure. `transform`"
          },
          {
            "text": "  accepts an element of this sequence as its parameter and returns an"
          },
          {
            "text": "  `AsyncSequence`. If `transform` throws an error, the sequence ends."
          },
          {
            "text": "- Returns: A single, flattened asynchronous sequence that contains all"
          },
          {
            "text": "  elements in all the asynchronous sequences produced by `transform`. The"
          },
          {
            "text": "  sequence ends either when the last sequence created from the last"
          },
          {
            "text": "  element from base sequence ends, or when `transform` throws an error."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "transform",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "transform"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "SegmentOfResult"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncThrowingFlatMapSequence",
            "preciseIdentifier": "s:12_Concurrency28AsyncThrowingFlatMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "SegmentOfResult",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "flatMap"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "transform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncThrowingFlatMapSequence",
          "preciseIdentifier": "s:12_Concurrency28AsyncThrowingFlatMapSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": "> "
        },
        {
          "kind": "keyword",
          "spelling": "where"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncSequence",
          "preciseIdentifier": "s:Sci"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV5JointV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "Joint",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this joint."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_error",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_error"
      ],
      "names": {
        "title": "OS_ar_error",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_error"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_error"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_error"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV9ChiralityO2eeoiySbAE_AEtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "Chirality",
        "==(_:_:)"
      ],
      "names": {
        "title": "==(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "=="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandAnchor",
            "preciseIdentifier": "s:5ARKit10HandAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Chirality",
            "preciseIdentifier": "s:5ARKit10HandAnchorV9ChiralityO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandAnchor",
            "preciseIdentifier": "s:5ARKit10HandAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Chirality",
            "preciseIdentifier": "s:5ARKit10HandAnchorV9ChiralityO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Returns a Boolean value indicating whether two values are equal."
          },
          {
            "text": ""
          },
          {
            "text": "Equality is the inverse of inequality. For any values `a` and `b`,"
          },
          {
            "text": "`a == b` implies that `a != b` is `false`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - lhs: A value to compare."
          },
          {
            "text": "  - rhs: Another value to compare."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "a",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "a"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "HandAnchor",
                "preciseIdentifier": "s:5ARKit10HandAnchorV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Chirality",
                "preciseIdentifier": "s:5ARKit10HandAnchorV9ChiralityO"
              }
            ]
          },
          {
            "name": "b",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "b"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "HandAnchor",
                "preciseIdentifier": "s:5ARKit10HandAnchorV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Chirality",
                "preciseIdentifier": "s:5ARKit10HandAnchorV9ChiralityO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "=="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "a"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandAnchor",
          "preciseIdentifier": "s:5ARKit10HandAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Chirality",
          "preciseIdentifier": "s:5ARKit10HandAnchorV9ChiralityO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "b"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandAnchor",
          "preciseIdentifier": "s:5ARKit10HandAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Chirality",
          "preciseIdentifier": "s:5ARKit10HandAnchorV9ChiralityO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC4ModeO4hash4intoys6HasherVz_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "Mode",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Hashes the essential components of this value by feeding them into the"
          },
          {
            "text": "given hasher."
          },
          {
            "text": ""
          },
          {
            "text": "Implement this method to conform to the `Hashable` protocol. The"
          },
          {
            "text": "components used for hashing must be the same as the components compared"
          },
          {
            "text": "in your type's `==` operator implementation. Call `hasher.combine(_:)`"
          },
          {
            "text": "with each of these components."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: In your implementation of `hash(into:)`,"
          },
          {
            "text": "  don't call `finalize()` on the `hasher` instance provided,"
          },
          {
            "text": "  or replace it with a different instance."
          },
          {
            "text": "  Doing so may become a compile-time error in the future."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter hasher: The hasher to use when combining the components"
          },
          {
            "text": "  of this instance."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC17AuthorizationTypeO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationType",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of AuthorizationType"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.init",
        "displayName": "Initializer"
      },
      "identifier": {
        "precise": "s:5ARKit14ReferenceImageV7cgimage12physicalSize11orientationACSo10CGImageRefa_So6CGSizeVSo0H19PropertyOrientationVtcfc",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ReferenceImage",
        "init(cgimage:physicalSize:orientation:)"
      ],
      "names": {
        "title": "init(cgimage:physicalSize:orientation:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "init"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "cgimage"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "CGImage",
            "preciseIdentifier": "c:@T@CGImageRef"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "externalParam",
            "spelling": "physicalSize"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "CGSize",
            "preciseIdentifier": "c:@S@CGSize"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "externalParam",
            "spelling": "orientation"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "CGImagePropertyOrientation",
            "preciseIdentifier": "c:@E@CGImagePropertyOrientation"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Initialize a reference image from a given CGImage."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - cgimage: A CGImage"
          },
          {
            "text": "  - physicalSize: The size of the image in meters"
          },
          {
            "text": "  - orientation: The image orientation"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "init"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "cgimage"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "CGImage",
          "preciseIdentifier": "c:@T@CGImageRef"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "externalParam",
          "spelling": "physicalSize"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "CGSize",
          "preciseIdentifier": "c:@S@CGSize"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "externalParam",
          "spelling": "orientation"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "CGImagePropertyOrientation",
          "preciseIdentifier": "c:@E@CGImagePropertyOrientation"
        },
        {
          "kind": "text",
          "spelling": " = .up)"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this Skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "flatMap(_:)"
      ],
      "names": {
        "title": "flatMap(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "flatMap"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ">(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncThrowingFlatMapSequence",
            "preciseIdentifier": "s:12_Concurrency28AsyncThrowingFlatMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that concatenates the results of calling"
          },
          {
            "text": "the given error-throwing transformation with each element of this"
          },
          {
            "text": "sequence."
          },
          {
            "text": ""
          },
          {
            "text": "Use this method to receive a single-level asynchronous sequence when your"
          },
          {
            "text": "transformation produces an asynchronous sequence for each element."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `5`. The transforming closure takes the received `Int`"
          },
          {
            "text": "and returns a new `Counter` that counts that high. For example, when the"
          },
          {
            "text": "transform receives `3` from the base sequence, it creates a new `Counter`"
          },
          {
            "text": "that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"
          },
          {
            "text": "\"flattens\" the resulting sequence-of-sequences into a single"
          },
          {
            "text": "`AsyncSequence`. However, when the closure receives `4`, it throws an"
          },
          {
            "text": "error, terminating the sequence."
          },
          {
            "text": ""
          },
          {
            "text": "    do {"
          },
          {
            "text": "        let stream = Counter(howHigh: 5)"
          },
          {
            "text": "            .flatMap { (value) -> Counter in"
          },
          {
            "text": "                if value == 4 {"
          },
          {
            "text": "                    throw MyError()"
          },
          {
            "text": "                }"
          },
          {
            "text": "                return Counter(howHigh: value)"
          },
          {
            "text": "            }"
          },
          {
            "text": "        for try await number in stream {"
          },
          {
            "text": "            print(number, terminator: \" \")"
          },
          {
            "text": "        }"
          },
          {
            "text": "    } catch {"
          },
          {
            "text": "        print(error)"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"1 1 2 1 2 3 MyError() \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter transform: An error-throwing mapping closure. `transform`"
          },
          {
            "text": "  accepts an element of this sequence as its parameter and returns an"
          },
          {
            "text": "  `AsyncSequence`. If `transform` throws an error, the sequence ends."
          },
          {
            "text": "- Returns: A single, flattened asynchronous sequence that contains all"
          },
          {
            "text": "  elements in all the asynchronous sequences produced by `transform`. The"
          },
          {
            "text": "  sequence ends either when the last sequence created from the last"
          },
          {
            "text": "  element from base sequence ends, or when `transform` throws an error."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "transform",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "transform"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "SegmentOfResult"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncThrowingFlatMapSequence",
            "preciseIdentifier": "s:12_Concurrency28AsyncThrowingFlatMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "SegmentOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "SegmentOfResult",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "flatMap"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "transform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncThrowingFlatMapSequence",
          "preciseIdentifier": "s:12_Concurrency28AsyncThrowingFlatMapSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": "> "
        },
        {
          "kind": "keyword",
          "spelling": "where"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "SegmentOfResult"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncSequence",
          "preciseIdentifier": "s:Sci"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12DeviceAnchorV2id10Foundation4UUIDVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DeviceAnchor",
        "id"
      ],
      "names": {
        "title": "id",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "id"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "UUID",
            "preciseIdentifier": "s:10Foundation4UUIDV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The unique identifier of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "id"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor"
      ],
      "names": {
        "title": "HandAnchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "HandAnchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "HandAnchor"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Represents a hand of the user."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "HandAnchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "first(where:)"
      ],
      "names": {
        "title": "first(where:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "first"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "where"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns the first element of the sequence that satisfies the given"
          },
          {
            "text": "predicate."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `first(where:)` method returns the first"
          },
          {
            "text": "member of the sequence that's evenly divisible by both `2` and `3`."
          },
          {
            "text": ""
          },
          {
            "text": "    let divisibleBy2And3 = await Counter(howHigh: 10)"
          },
          {
            "text": "        .first { $0 % 2 == 0 && $0 % 3 == 0 }"
          },
          {
            "text": "    print(divisibleBy2And3 ?? \"none\")"
          },
          {
            "text": "    // Prints \"6\""
          },
          {
            "text": ""
          },
          {
            "text": "The predicate executes each time the asynchronous sequence produces an"
          },
          {
            "text": "element, until either the predicate finds a match or the sequence ends."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter predicate: A closure that takes an element of the asynchronous"
          },
          {
            "text": " sequence as its argument and returns a Boolean value that indicates"
          },
          {
            "text": " whether the element is a match."
          },
          {
            "text": "- Returns: The first element of the sequence that satisfies `predicate`,"
          },
          {
            "text": "  or `nil` if there is no element that satisfies `predicate`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "where",
            "internalName": "predicate",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "predicate"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "first"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "where"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "predicate"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": "?"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC17AuthorizationTypeO12handTrackingyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationType",
        "handTracking"
      ],
      "names": {
        "title": "ARKitSession.AuthorizationType.handTracking",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "handTracking"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Hand tracking."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "handTracking"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV4CodeO4hash4intoys6HasherVz_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "Code",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Hashes the essential components of this value by feeding them into the"
          },
          {
            "text": "given hasher."
          },
          {
            "text": ""
          },
          {
            "text": "Implement this method to conform to the `Hashable` protocol. The"
          },
          {
            "text": "components used for hashing must be the same as the components compared"
          },
          {
            "text": "in your type's `==` operator implementation. Call `hasher.combine(_:)`"
          },
          {
            "text": "with each of these components."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: In your implementation of `hash(into:)`,"
          },
          {
            "text": "  don't call `finalize()` on the `hasher` instance provided,"
          },
          {
            "text": "  or replace it with a different instance."
          },
          {
            "text": "  Doing so may become a compile-time error in the future."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter hasher: The hasher to use when combining the components"
          },
          {
            "text": "  of this instance."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC17AuthorizationTypeO12worldSensingyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationType",
        "worldSensing"
      ],
      "names": {
        "title": "ARKitSession.AuthorizationType.worldSensing",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "worldSensing"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "World sensing."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "worldSensing"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC4ModeO9hashValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "Mode",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The hash value."
          },
          {
            "text": ""
          },
          {
            "text": "Hash values are not guaranteed to be equal across different executions of"
          },
          {
            "text": "your program. Do not save hash values to use during a future execution."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: `hashValue` is deprecated as a `Hashable` requirement. To"
          },
          {
            "text": "  conform to `Hashable`, implement the `hash(into:)` requirement instead."
          },
          {
            "text": "  The compiler provides an implementation for `hashValue` for you."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_plane_geometry",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_plane_geometry"
      ],
      "names": {
        "title": "OS_ar_plane_geometry",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_plane_geometry"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_plane_geometry"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_plane_geometry"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV9ChiralityO4hash4intoys6HasherVz_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "Chirality",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Hashes the essential components of this value by feeding them into the"
          },
          {
            "text": "given hasher."
          },
          {
            "text": ""
          },
          {
            "text": "Implement this method to conform to the `Hashable` protocol. The"
          },
          {
            "text": "components used for hashing must be the same as the components compared"
          },
          {
            "text": "in your type's `==` operator implementation. Call `hasher.combine(_:)`"
          },
          {
            "text": "with each of these components."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: In your implementation of `hash(into:)`,"
          },
          {
            "text": "  don't call `finalize()` on the `hasher` instance provided,"
          },
          {
            "text": "  or replace it with a different instance."
          },
          {
            "text": "  Doing so may become a compile-time error in the future."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter hasher: The hasher to use when combining the components"
          },
          {
            "text": "  of this instance."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton"
      ],
      "names": {
        "title": "HandSkeleton",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "HandSkeleton"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "HandSkeleton"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "HandSkeleton"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this session."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV4CodeO23dataProviderFailedToRunyA2GmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "Code",
        "dataProviderFailedToRun"
      ],
      "names": {
        "title": "ARKitSession.Error.Code.dataProviderFailedToRun",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "dataProviderFailedToRun"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Data provider failed to run."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "dataProviderFailedToRun"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Geometry",
        "Extent",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this extent."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV4CodeO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "Code",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of the code."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "min(by:)"
      ],
      "names": {
        "title": "min(by:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "min"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "by"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns the minimum element in the asynchronous sequence, using the given"
          },
          {
            "text": "predicate as the comparison between elements."
          },
          {
            "text": ""
          },
          {
            "text": "Use this method when the asynchronous sequence's values don't conform"
          },
          {
            "text": "to `Comparable`, or when you want to apply a custom ordering to the"
          },
          {
            "text": "sequence."
          },
          {
            "text": ""
          },
          {
            "text": "The predicate must be a *strict weak ordering* over the elements. That is,"
          },
          {
            "text": "for any elements `a`, `b`, and `c`, the following conditions must hold:"
          },
          {
            "text": ""
          },
          {
            "text": "- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"
          },
          {
            "text": "- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"
          },
          {
            "text": "  both `true`, then `areInIncreasingOrder(a, c)` is also"
          },
          {
            "text": "  `true`. (Transitive comparability)"
          },
          {
            "text": "- Two elements are *incomparable* if neither is ordered before the other"
          },
          {
            "text": "  according to the predicate. If `a` and `b` are incomparable, and `b`"
          },
          {
            "text": "  and `c` are incomparable, then `a` and `c` are also incomparable."
          },
          {
            "text": "  (Transitive incomparability)"
          },
          {
            "text": ""
          },
          {
            "text": "The following example uses an enumeration of playing cards ranks, `Rank`,"
          },
          {
            "text": "which ranges from `ace` (low) to `king` (high). An asynchronous sequence"
          },
          {
            "text": "called `RankCounter` produces all elements of the array. The predicate"
          },
          {
            "text": "provided to the `min(by:)` method sorts ranks based on their `rawValue`:"
          },
          {
            "text": ""
          },
          {
            "text": "    enum Rank: Int {"
          },
          {
            "text": "        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"
          },
          {
            "text": "    }"
          },
          {
            "text": ""
          },
          {
            "text": "    let min = await RankCounter()"
          },
          {
            "text": "        .min { $0.rawValue < $1.rawValue }"
          },
          {
            "text": "    print(min ?? \"none\")"
          },
          {
            "text": "    // Prints \"ace\""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter areInIncreasingOrder: A predicate that returns `true` if its"
          },
          {
            "text": "  first argument should be ordered before its second argument; otherwise,"
          },
          {
            "text": "  `false`."
          },
          {
            "text": "- Returns: The sequence’s minimum element, according to"
          },
          {
            "text": "  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "by",
            "internalName": "areInIncreasingOrder",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "areInIncreasingOrder"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ", "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@warn_unqualified_access"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "min"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "by"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "areInIncreasingOrder"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": "?"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "map(_:)"
      ],
      "names": {
        "title": "map(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "map"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ">(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncThrowingMapSequence",
            "preciseIdentifier": "s:12_Concurrency24AsyncThrowingMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that maps the given error-throwing"
          },
          {
            "text": "closure over the asynchronous sequence’s elements."
          },
          {
            "text": ""
          },
          {
            "text": "Use the `map(_:)` method to transform every element received from a base"
          },
          {
            "text": "asynchronous sequence. Typically, you use this to transform from one type"
          },
          {
            "text": "of element to another."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `5`. The closure provided to the `map(_:)` method"
          },
          {
            "text": "takes each `Int` and looks up a corresponding `String` from a"
          },
          {
            "text": "`romanNumeralDict` dictionary. This means the outer `for await in` loop"
          },
          {
            "text": "iterates over `String` instances instead of the underlying `Int` values"
          },
          {
            "text": "that `Counter` produces. Also, the dictionary doesn't provide a key for"
          },
          {
            "text": "`4`, and the closure throws an error for any key it can't look up, so"
          },
          {
            "text": "receiving this value from `Counter` ends the modified sequence with an"
          },
          {
            "text": "error."
          },
          {
            "text": ""
          },
          {
            "text": "    let romanNumeralDict: [Int: String] ="
          },
          {
            "text": "        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"
          },
          {
            "text": ""
          },
          {
            "text": "    do {"
          },
          {
            "text": "        let stream = Counter(howHigh: 5)"
          },
          {
            "text": "            .map { (value) throws -> String in"
          },
          {
            "text": "                guard let roman = romanNumeralDict[value] else {"
          },
          {
            "text": "                    throw MyError()"
          },
          {
            "text": "                }"
          },
          {
            "text": "                return roman"
          },
          {
            "text": "            }"
          },
          {
            "text": "        for try await numeral in stream {"
          },
          {
            "text": "            print(numeral, terminator: \" \")"
          },
          {
            "text": "        }"
          },
          {
            "text": "    } catch {"
          },
          {
            "text": "        print(\"Error: \\(error)\")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"I II III Error: MyError() \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter transform: A mapping closure. `transform` accepts an element"
          },
          {
            "text": "  of this sequence as its parameter and returns a transformed value of the"
          },
          {
            "text": "  same or of a different type. `transform` can also throw an error, which"
          },
          {
            "text": "  ends the transformed sequence."
          },
          {
            "text": "- Returns: An asynchronous sequence that contains, in order, the elements"
          },
          {
            "text": "  produced by the `transform` closure."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "transform",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "transform"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Transformed"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncThrowingMapSequence",
            "preciseIdentifier": "s:12_Concurrency24AsyncThrowingMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "Transformed",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "map"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "Transformed"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "transform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Transformed"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncThrowingMapSequence",
          "preciseIdentifier": "s:12_Concurrency24AsyncThrowingMapSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Transformed"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC6EventsV17makeAsyncIteratorAE0F0VyF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "makeAsyncIterator()"
      ],
      "names": {
        "title": "makeAsyncIterator()",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "makeAsyncIterator"
          },
          {
            "kind": "text",
            "spelling": "() -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Events",
            "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Iterator",
            "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV8IteratorV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Creates an asynchronous iterator that produces `Event` elements on this asynchronous sequence."
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: An Iterator for `Events`"
          }
        ]
      },
      "functionSignature": {
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Events",
            "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Iterator",
            "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV8IteratorV"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "makeAsyncIterator"
        },
        {
          "kind": "text",
          "spelling": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Events",
          "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Iterator",
          "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV8IteratorV"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:s5ErrorP10FoundationE20localizedDescriptionSSvp::SYNTHESIZED::s:5ARKit21WorldTrackingProviderC5ErrorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "localizedDescription"
      ],
      "names": {
        "title": "localizedDescription",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "localizedDescription"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "Foundation",
        "lines": [
          {
            "text": "Retrieve the localized description for this error."
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "localizedDescription"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 10
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 2,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 8,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 9,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV9ChiralityO9hashValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "Chirality",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The hash value."
          },
          {
            "text": ""
          },
          {
            "text": "Hash values are not guaranteed to be equal across different executions of"
          },
          {
            "text": "your program. Do not save hash values to use during a future execution."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: `hashValue` is deprecated as a `Hashable` requirement. To"
          },
          {
            "text": "  conform to `Hashable`, implement the `hash(into:)` requirement instead."
          },
          {
            "text": "  The compiler provides an implementation for `hashValue` for you."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC6EventsV7Elementa",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "Element"
      ],
      "names": {
        "title": "ARKitSession.Events.Element",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Element"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Element"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The type of element produced by this asynchronous sequence: ARKitSession.Event."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Event",
          "preciseIdentifier": "s:5ARKit0A7SessionC5EventO"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor"
      ],
      "names": {
        "title": "PlaneAnchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "PlaneAnchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "PlaneAnchor"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Represents a horizontal or vertical surface in the user's environment."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "PlaneAnchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC20requestAuthorization3forSDyAC0D4TypeOAC0D6StatusOGSayAGG_tYaF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "requestAuthorization(for:)"
      ],
      "names": {
        "title": "requestAuthorization(for:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "requestAuthorization"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "for"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": "]) "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": " : "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationStatus",
            "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Request one or more authorizations."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - authorizationTypes: The types of authorization to request."
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: A dictionary containing one or more authorization results."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "for",
            "internalName": "authorizationTypes",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "authorizationTypes"
              },
              {
                "kind": "text",
                "spelling": ": ["
              },
              {
                "kind": "typeIdentifier",
                "spelling": "ARKitSession",
                "preciseIdentifier": "s:5ARKit0A7SessionC"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "AuthorizationType",
                "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
              },
              {
                "kind": "text",
                "spelling": "]"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": " : "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationStatus",
            "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "requestAuthorization"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "for"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "authorizationTypes"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": "]) "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationStatus",
          "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
        },
        {
          "kind": "text",
          "spelling": "]"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "prefix(_:)"
      ],
      "names": {
        "title": "prefix(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "prefix"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncPrefixSequence",
            "preciseIdentifier": "s:12_Concurrency19AsyncPrefixSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns an asynchronous sequence, up to the specified maximum length,"
          },
          {
            "text": "containing the initial elements of the base asynchronous sequence."
          },
          {
            "text": ""
          },
          {
            "text": "Use `prefix(_:)` to reduce the number of elements produced by the"
          },
          {
            "text": "asynchronous sequence."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `prefix(_:)` method causes the modified"
          },
          {
            "text": "sequence to pass through the first six values, then end."
          },
          {
            "text": ""
          },
          {
            "text": "    for await number in Counter(howHigh: 10).prefix(6) {"
          },
          {
            "text": "        print(number, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"1 2 3 4 5 6 \""
          },
          {
            "text": ""
          },
          {
            "text": "If the count passed to `prefix(_:)` exceeds the number of elements in the"
          },
          {
            "text": "base sequence, the result contains all of the elements in the sequence."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter count: The maximum number of elements to return. The value of"
          },
          {
            "text": "  `count` must be greater than or equal to zero."
          },
          {
            "text": "- Returns: An asynchronous sequence starting at the beginning of the"
          },
          {
            "text": "  base sequence with at most `count` elements."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "count",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "count"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Int",
                "preciseIdentifier": "s:Si"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncPrefixSequence",
            "preciseIdentifier": "s:12_Concurrency19AsyncPrefixSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "prefix"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "count"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncPrefixSequence",
          "preciseIdentifier": "s:12_Concurrency19AsyncPrefixSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV4CodeO25dataProviderNotAuthorizedyA2GmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "Code",
        "dataProviderNotAuthorized"
      ],
      "names": {
        "title": "ARKitSession.Error.Code.dataProviderNotAuthorized",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "dataProviderNotAuthorized"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Data provider is lacking one or more authorizations."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "dataProviderNotAuthorized"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "map(_:)"
      ],
      "names": {
        "title": "map(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "map"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ">(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncThrowingMapSequence",
            "preciseIdentifier": "s:12_Concurrency24AsyncThrowingMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that maps the given error-throwing"
          },
          {
            "text": "closure over the asynchronous sequence’s elements."
          },
          {
            "text": ""
          },
          {
            "text": "Use the `map(_:)` method to transform every element received from a base"
          },
          {
            "text": "asynchronous sequence. Typically, you use this to transform from one type"
          },
          {
            "text": "of element to another."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `5`. The closure provided to the `map(_:)` method"
          },
          {
            "text": "takes each `Int` and looks up a corresponding `String` from a"
          },
          {
            "text": "`romanNumeralDict` dictionary. This means the outer `for await in` loop"
          },
          {
            "text": "iterates over `String` instances instead of the underlying `Int` values"
          },
          {
            "text": "that `Counter` produces. Also, the dictionary doesn't provide a key for"
          },
          {
            "text": "`4`, and the closure throws an error for any key it can't look up, so"
          },
          {
            "text": "receiving this value from `Counter` ends the modified sequence with an"
          },
          {
            "text": "error."
          },
          {
            "text": ""
          },
          {
            "text": "    let romanNumeralDict: [Int: String] ="
          },
          {
            "text": "        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"
          },
          {
            "text": ""
          },
          {
            "text": "    do {"
          },
          {
            "text": "        let stream = Counter(howHigh: 5)"
          },
          {
            "text": "            .map { (value) throws -> String in"
          },
          {
            "text": "                guard let roman = romanNumeralDict[value] else {"
          },
          {
            "text": "                    throw MyError()"
          },
          {
            "text": "                }"
          },
          {
            "text": "                return roman"
          },
          {
            "text": "            }"
          },
          {
            "text": "        for try await numeral in stream {"
          },
          {
            "text": "            print(numeral, terminator: \" \")"
          },
          {
            "text": "        }"
          },
          {
            "text": "    } catch {"
          },
          {
            "text": "        print(\"Error: \\(error)\")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"I II III Error: MyError() \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter transform: A mapping closure. `transform` accepts an element"
          },
          {
            "text": "  of this sequence as its parameter and returns a transformed value of the"
          },
          {
            "text": "  same or of a different type. `transform` can also throw an error, which"
          },
          {
            "text": "  ends the transformed sequence."
          },
          {
            "text": "- Returns: An asynchronous sequence that contains, in order, the elements"
          },
          {
            "text": "  produced by the `transform` closure."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "transform",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "transform"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Transformed"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncThrowingMapSequence",
            "preciseIdentifier": "s:12_Concurrency24AsyncThrowingMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "Transformed",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "map"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "Transformed"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "transform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Transformed"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncThrowingMapSequence",
          "preciseIdentifier": "s:12_Concurrency24AsyncThrowingMapSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Transformed"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "min(by:)"
      ],
      "names": {
        "title": "min(by:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "min"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "by"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns the minimum element in the asynchronous sequence, using the given"
          },
          {
            "text": "predicate as the comparison between elements."
          },
          {
            "text": ""
          },
          {
            "text": "Use this method when the asynchronous sequence's values don't conform"
          },
          {
            "text": "to `Comparable`, or when you want to apply a custom ordering to the"
          },
          {
            "text": "sequence."
          },
          {
            "text": ""
          },
          {
            "text": "The predicate must be a *strict weak ordering* over the elements. That is,"
          },
          {
            "text": "for any elements `a`, `b`, and `c`, the following conditions must hold:"
          },
          {
            "text": ""
          },
          {
            "text": "- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"
          },
          {
            "text": "- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"
          },
          {
            "text": "  both `true`, then `areInIncreasingOrder(a, c)` is also"
          },
          {
            "text": "  `true`. (Transitive comparability)"
          },
          {
            "text": "- Two elements are *incomparable* if neither is ordered before the other"
          },
          {
            "text": "  according to the predicate. If `a` and `b` are incomparable, and `b`"
          },
          {
            "text": "  and `c` are incomparable, then `a` and `c` are also incomparable."
          },
          {
            "text": "  (Transitive incomparability)"
          },
          {
            "text": ""
          },
          {
            "text": "The following example uses an enumeration of playing cards ranks, `Rank`,"
          },
          {
            "text": "which ranges from `ace` (low) to `king` (high). An asynchronous sequence"
          },
          {
            "text": "called `RankCounter` produces all elements of the array. The predicate"
          },
          {
            "text": "provided to the `min(by:)` method sorts ranks based on their `rawValue`:"
          },
          {
            "text": ""
          },
          {
            "text": "    enum Rank: Int {"
          },
          {
            "text": "        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"
          },
          {
            "text": "    }"
          },
          {
            "text": ""
          },
          {
            "text": "    let min = await RankCounter()"
          },
          {
            "text": "        .min { $0.rawValue < $1.rawValue }"
          },
          {
            "text": "    print(min ?? \"none\")"
          },
          {
            "text": "    // Prints \"ace\""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter areInIncreasingOrder: A predicate that returns `true` if its"
          },
          {
            "text": "  first argument should be ordered before its second argument; otherwise,"
          },
          {
            "text": "  `false`."
          },
          {
            "text": "- Returns: The sequence’s minimum element, according to"
          },
          {
            "text": "  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "by",
            "internalName": "areInIncreasingOrder",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "areInIncreasingOrder"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ", "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@warn_unqualified_access"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "min"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "by"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "areInIncreasingOrder"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": "?"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.class",
        "displayName": "Class"
      },
      "identifier": {
        "precise": "s:5ARKit22PlaneDetectionProviderC",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneDetectionProvider"
      ],
      "names": {
        "title": "PlaneDetectionProvider",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "PlaneDetectionProvider"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "class"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "PlaneDetectionProvider"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Provides planes detected from the user's environment."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "class"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "PlaneDetectionProvider"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "prefix(_:)"
      ],
      "names": {
        "title": "prefix(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "prefix"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncPrefixSequence",
            "preciseIdentifier": "s:12_Concurrency19AsyncPrefixSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns an asynchronous sequence, up to the specified maximum length,"
          },
          {
            "text": "containing the initial elements of the base asynchronous sequence."
          },
          {
            "text": ""
          },
          {
            "text": "Use `prefix(_:)` to reduce the number of elements produced by the"
          },
          {
            "text": "asynchronous sequence."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `prefix(_:)` method causes the modified"
          },
          {
            "text": "sequence to pass through the first six values, then end."
          },
          {
            "text": ""
          },
          {
            "text": "    for await number in Counter(howHigh: 10).prefix(6) {"
          },
          {
            "text": "        print(number, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"1 2 3 4 5 6 \""
          },
          {
            "text": ""
          },
          {
            "text": "If the count passed to `prefix(_:)` exceeds the number of elements in the"
          },
          {
            "text": "base sequence, the result contains all of the elements in the sequence."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter count: The maximum number of elements to return. The value of"
          },
          {
            "text": "  `count` must be greater than or equal to zero."
          },
          {
            "text": "- Returns: An asynchronous sequence starting at the beginning of the"
          },
          {
            "text": "  base sequence with at most `count` elements."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "count",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "count"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Int",
                "preciseIdentifier": "s:Si"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncPrefixSequence",
            "preciseIdentifier": "s:12_Concurrency19AsyncPrefixSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "prefix"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "count"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncPrefixSequence",
          "preciseIdentifier": "s:12_Concurrency19AsyncPrefixSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor"
      ],
      "names": {
        "title": "MeshAnchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "MeshAnchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "MeshAnchor"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Represents a volume of space and the surfaces therein in the user's environment."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "MeshAnchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV5JointV010anchorFromD9TransformSo13simd_float4x4avp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "Joint",
        "anchorFromJointTransform"
      ],
      "names": {
        "title": "anchorFromJointTransform",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "anchorFromJointTransform"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "simd_float4x4",
            "preciseIdentifier": "c:@SA@simd_float4x4"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The transform from the joint to the hand anchor coordinate system."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "anchorFromJointTransform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "simd_float4x4",
          "preciseIdentifier": "c:@SA@simd_float4x4"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC18queryAuthorization3forSDyAC0D4TypeOAC0D6StatusOGSayAGG_tYaF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "queryAuthorization(for:)"
      ],
      "names": {
        "title": "queryAuthorization(for:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "queryAuthorization"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "for"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": "]) "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": " : "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationStatus",
            "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Query the current status of authorizations (without requesting them)."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - authorizationTypes: The types of authorization to query."
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: A dictionary containing one or more authorization results."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "for",
            "internalName": "authorizationTypes",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "authorizationTypes"
              },
              {
                "kind": "text",
                "spelling": ": ["
              },
              {
                "kind": "typeIdentifier",
                "spelling": "ARKitSession",
                "preciseIdentifier": "s:5ARKit0A7SessionC"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "AuthorizationType",
                "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
              },
              {
                "kind": "text",
                "spelling": "]"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": " : "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationStatus",
            "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "queryAuthorization"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "for"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "authorizationTypes"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": "]) "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationStatus",
          "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
        },
        {
          "kind": "text",
          "spelling": "]"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV2id10Foundation4UUIDVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "id"
      ],
      "names": {
        "title": "id",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "id"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "UUID",
            "preciseIdentifier": "s:10Foundation4UUIDV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The unique identifier of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "id"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_device_anchor",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_device_anchor"
      ],
      "names": {
        "title": "OS_ar_device_anchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_device_anchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_device_anchor"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_device_anchor"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "OS_ar_trackable_anchor",
          "preciseIdentifier": "c:objc(pl)OS_ar_trackable_anchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_image_tracking_configuration",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_image_tracking_configuration"
      ],
      "names": {
        "title": "OS_ar_image_tracking_configuration",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_image_tracking_configuration"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_image_tracking_configuration"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_image_tracking_configuration"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12DeviceAnchorV9isTrackedSbvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DeviceAnchor",
        "isTracked"
      ],
      "names": {
        "title": "isTracked",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "isTracked"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Whether this device anchor is currently tracked or not."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "isTracked"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.class",
        "displayName": "Class"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider"
      ],
      "names": {
        "title": "SceneReconstructionProvider",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "SceneReconstructionProvider"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "class"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "SceneReconstructionProvider"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Provides a three dimensional understanding of the user's environment."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "class"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "SceneReconstructionProvider"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit17DataProviderStateO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProviderState"
      ],
      "names": {
        "title": "DataProviderState",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "DataProviderState"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "DataProviderState"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The state of a data provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "DataProviderState"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit10MeshAnchorV0B14ClassificationO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV2IDa",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "ID"
      ],
      "names": {
        "title": "MeshAnchor.ID",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "ID"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ID"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "A type representing the stable identity of the entity associated with"
          },
          {
            "text": "an instance."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ID"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV12handSkeletonAA0bE0VSgvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "handSkeleton"
      ],
      "names": {
        "title": "handSkeleton",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "handSkeleton"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandSkeleton",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The skeleton of this hand."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "handSkeleton"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandSkeleton",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV"
        },
        {
          "kind": "text",
          "spelling": "? { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV010originFromC9TransformSo13simd_float4x4avp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "originFromAnchorTransform"
      ],
      "names": {
        "title": "originFromAnchorTransform",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "originFromAnchorTransform"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "simd_float4x4",
            "preciseIdentifier": "c:@SA@simd_float4x4"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The transform from the mesh anchor to the origin coordinate system."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "originFromAnchorTransform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "simd_float4x4",
          "preciseIdentifier": "c:@SA@simd_float4x4"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV6bufferSo9MTLBuffer_pvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "buffer"
      ],
      "names": {
        "title": "buffer",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "buffer"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "MTLBuffer",
            "preciseIdentifier": "c:objc(pl)MTLBuffer"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get a Metal buffer containing index data that defines the geometry."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "buffer"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "MTLBuffer",
          "preciseIdentifier": "c:objc(pl)MTLBuffer"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit11WorldAnchorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldAnchor"
      ],
      "names": {
        "title": "WorldAnchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "WorldAnchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "WorldAnchor"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Represents a fixed location in the user's environment."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "WorldAnchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit14ReferenceImageV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ReferenceImage"
      ],
      "names": {
        "title": "ReferenceImage",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "ReferenceImage"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ReferenceImage"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Represents an image to be tracked."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ReferenceImage"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV5JointV06parentD0AESgvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "Joint",
        "parentJoint"
      ],
      "names": {
        "title": "parentJoint",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "parentJoint"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandSkeleton",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Joint",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV5JointV"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The parent joint of this joint."
          },
          {
            "text": "Note: The root joint has no parent."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "parentJoint"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandSkeleton",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Joint",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV5JointV"
        },
        {
          "kind": "text",
          "spelling": "? { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12DeviceAnchorV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DeviceAnchor",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC6EventsV8IteratorV7Elementa",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "Iterator",
        "Element"
      ],
      "names": {
        "title": "ARKitSession.Events.Iterator.Element",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Element"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Element"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Events",
          "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element",
          "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV7Elementa"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_data_providers",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_data_providers"
      ],
      "names": {
        "title": "OS_ar_data_providers",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_data_providers"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_data_providers"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_data_providers"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_image_anchors",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_image_anchors"
      ],
      "names": {
        "title": "OS_ar_image_anchors",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_image_anchors"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_image_anchors"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_image_anchors"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC6EventsV8IteratorV4nextAC5EventOSgyYaF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "Iterator",
        "next()"
      ],
      "names": {
        "title": "next()",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "next"
          },
          {
            "kind": "text",
            "spelling": "() "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Events",
            "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element",
            "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV7Elementa"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Asynchronously retrieve the next Event."
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: The next Event if one has occured since the last call to this function."
          },
          {
            "text": "           Otherwise suspends the caller until a new Event has occured."
          },
          {
            "text": "           Returns `nil` (signals end of the sequence) if the session has been stopped."
          }
        ]
      },
      "functionSignature": {
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Events",
            "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element",
            "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV7Elementa"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "mutating"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "next"
        },
        {
          "kind": "text",
          "spelling": "() "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Events",
          "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element",
          "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV7Elementa"
        },
        {
          "kind": "text",
          "spelling": "?"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "s:5ARKit6AnchorP",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "Anchor"
      ],
      "names": {
        "title": "Anchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Anchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Anchor"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "An anchor represents a physical location and orientation in world space."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Anchor"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "CustomStringConvertible",
          "preciseIdentifier": "s:s23CustomStringConvertibleP"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Identifiable",
          "preciseIdentifier": "s:s12IdentifiableP"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Sendable",
          "preciseIdentifier": "s:s8SendableP"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV010originFromC9TransformSo13simd_float4x4avp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "originFromAnchorTransform"
      ],
      "names": {
        "title": "originFromAnchorTransform",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "originFromAnchorTransform"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "simd_float4x4",
            "preciseIdentifier": "c:@SA@simd_float4x4"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The transform from the hand's wrist to the origin coordinate system."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "originFromAnchorTransform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "simd_float4x4",
          "preciseIdentifier": "c:@SA@simd_float4x4"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.class",
        "displayName": "Class"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider"
      ],
      "names": {
        "title": "WorldTrackingProvider",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "WorldTrackingProvider"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "class"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "WorldTrackingProvider"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Provides placement of anchors in the user's environment and access to the device pose."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "class"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "WorldTrackingProvider"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV9isTrackedSbvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "isTracked"
      ],
      "names": {
        "title": "isTracked",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "isTracked"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Whether this hand anchor is currently tracked or not."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "isTracked"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO8rawValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "rawValue"
      ],
      "names": {
        "title": "rawValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "rawValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "NSInteger",
            "preciseIdentifier": "c:@T@NSInteger"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The corresponding value of the raw type."
          },
          {
            "text": ""
          },
          {
            "text": "A new instance initialized with `rawValue` will be equivalent to this"
          },
          {
            "text": "instance. For example:"
          },
          {
            "text": ""
          },
          {
            "text": "    enum PaperSize: String {"
          },
          {
            "text": "        case A4, A5, Letter, Legal"
          },
          {
            "text": "    }"
          },
          {
            "text": ""
          },
          {
            "text": "    let selectedSize = PaperSize.Letter"
          },
          {
            "text": "    print(selectedSize.rawValue)"
          },
          {
            "text": "    // Prints \"Letter\""
          },
          {
            "text": ""
          },
          {
            "text": "    print(selectedSize == PaperSize(rawValue: selectedSize.rawValue)!)"
          },
          {
            "text": "    // Prints \"true\""
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "rawValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSInteger",
          "preciseIdentifier": "c:@T@NSInteger"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV010originFromC9TransformSo13simd_float4x4avp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "originFromAnchorTransform"
      ],
      "names": {
        "title": "originFromAnchorTransform",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "originFromAnchorTransform"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "simd_float4x4",
            "preciseIdentifier": "c:@SA@simd_float4x4"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The transform from the plane anchor to the origin coordinate system."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "originFromAnchorTransform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "simd_float4x4",
          "preciseIdentifier": "c:@SA@simd_float4x4"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "dropFirst(_:)"
      ],
      "names": {
        "title": "dropFirst(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "dropFirst"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncDropFirstSequence",
            "preciseIdentifier": "s:12_Concurrency22AsyncDropFirstSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Omits a specified number of elements from the base asynchronous sequence,"
          },
          {
            "text": "then passes through all remaining elements."
          },
          {
            "text": ""
          },
          {
            "text": "Use `dropFirst(_:)` when you want to drop the first *n* elements from the"
          },
          {
            "text": "base sequence and pass through the remaining elements."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `dropFirst(_:)` method causes the modified"
          },
          {
            "text": "sequence to ignore the values `1` through `3`, and instead emit `4` through `10`:"
          },
          {
            "text": ""
          },
          {
            "text": "    for await number in Counter(howHigh: 10).dropFirst(3) {"
          },
          {
            "text": "        print(number, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"4 5 6 7 8 9 10 \""
          },
          {
            "text": ""
          },
          {
            "text": "If the number of elements to drop exceeds the number of elements in the"
          },
          {
            "text": "sequence, the result is an empty sequence."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter count: The number of elements to drop from the beginning of"
          },
          {
            "text": "  the sequence. `count` must be greater than or equal to zero."
          },
          {
            "text": "- Returns: An asynchronous sequence that drops the first `count`"
          },
          {
            "text": "  elements from the base sequence."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "count",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "count"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Int",
                "preciseIdentifier": "s:Si"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncDropFirstSequence",
            "preciseIdentifier": "s:12_Concurrency22AsyncDropFirstSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "dropFirst"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "count"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " = 1) -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncDropFirstSequence",
          "preciseIdentifier": "s:12_Concurrency22AsyncDropFirstSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "contains(where:)"
      ],
      "names": {
        "title": "contains(where:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "contains"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "where"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns a Boolean value that indicates whether the asynchronous sequence"
          },
          {
            "text": "contains an element that satisfies the given predicate."
          },
          {
            "text": ""
          },
          {
            "text": "You can use the predicate to check for an element of a type that doesn’t"
          },
          {
            "text": "conform to the `Equatable` protocol, or to find an element that satisfies"
          },
          {
            "text": "a general condition."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `contains(where:)` method checks to see"
          },
          {
            "text": "whether the sequence produces a value divisible by `3`:"
          },
          {
            "text": ""
          },
          {
            "text": "    let containsDivisibleByThree = await Counter(howHigh: 10)"
          },
          {
            "text": "        .contains { $0 % 3 == 0 }"
          },
          {
            "text": "    print(containsDivisibleByThree)"
          },
          {
            "text": "    // Prints \"true\""
          },
          {
            "text": ""
          },
          {
            "text": "The predicate executes each time the asynchronous sequence produces an"
          },
          {
            "text": "element, until either the predicate finds a match or the sequence ends."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter predicate: A closure that takes an element of the asynchronous"
          },
          {
            "text": "  sequence as its argument and returns a Boolean value that indicates"
          },
          {
            "text": "  whether the passed element represents a match."
          },
          {
            "text": "- Returns: `true` if the sequence contains an element that satisfies"
          },
          {
            "text": "  predicate; otherwise, `false`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "where",
            "internalName": "predicate",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "predicate"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "contains"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "where"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "predicate"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV9primitiveAC9PrimitiveOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "primitive"
      ],
      "names": {
        "title": "primitive",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "primitive"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "GeometryElement",
            "preciseIdentifier": "s:5ARKit15GeometryElementV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Primitive",
            "preciseIdentifier": "s:5ARKit15GeometryElementV9PrimitiveO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the type of the geometry element."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "primitive"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "GeometryElement",
          "preciseIdentifier": "s:5ARKit15GeometryElementV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Primitive",
          "preciseIdentifier": "s:5ARKit15GeometryElementV9PrimitiveO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this error."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit11WorldAnchorV2IDa",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldAnchor",
        "ID"
      ],
      "names": {
        "title": "WorldAnchor.ID",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "ID"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ID"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "A type representing the stable identity of the entity associated with"
          },
          {
            "text": "an instance."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ID"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "compactMap(_:)"
      ],
      "names": {
        "title": "compactMap(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "compactMap"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": ">(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": "?) -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncThrowingCompactMapSequence",
            "preciseIdentifier": "s:12_Concurrency31AsyncThrowingCompactMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that maps an error-throwing closure over"
          },
          {
            "text": "the base sequence’s elements, omitting results that don't return a value."
          },
          {
            "text": ""
          },
          {
            "text": "Use the `compactMap(_:)` method to transform every element received from"
          },
          {
            "text": "a base asynchronous sequence, while also discarding any `nil` results"
          },
          {
            "text": "from the closure. Typically, you use this to transform from one type of"
          },
          {
            "text": "element to another."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `5`. The closure provided to the `compactMap(_:)`"
          },
          {
            "text": "method takes each `Int` and looks up a corresponding `String` from a"
          },
          {
            "text": "`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"
          },
          {
            "text": "returns `nil` in this case, which `compactMap(_:)` omits from the"
          },
          {
            "text": "transformed asynchronous sequence. When the value is `5`, the closure"
          },
          {
            "text": "throws `MyError`, terminating the sequence."
          },
          {
            "text": ""
          },
          {
            "text": "    let romanNumeralDict: [Int: String] ="
          },
          {
            "text": "        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"
          },
          {
            "text": ""
          },
          {
            "text": "    do {"
          },
          {
            "text": "        let stream = Counter(howHigh: 5)"
          },
          {
            "text": "            .compactMap { (value) throws -> String? in"
          },
          {
            "text": "                if value == 5 {"
          },
          {
            "text": "                    throw MyError()"
          },
          {
            "text": "                }"
          },
          {
            "text": "                return romanNumeralDict[value]"
          },
          {
            "text": "            }"
          },
          {
            "text": "        for try await numeral in stream {"
          },
          {
            "text": "            print(numeral, terminator: \" \")"
          },
          {
            "text": "        }"
          },
          {
            "text": "    } catch {"
          },
          {
            "text": "        print(\"Error: \\(error)\")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"I II III Error: MyError() \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter transform: An error-throwing mapping closure. `transform`"
          },
          {
            "text": "  accepts an element of this sequence as its parameter and returns a"
          },
          {
            "text": "  transformed value of the same or of a different type. If `transform`"
          },
          {
            "text": "  throws an error, the sequence ends."
          },
          {
            "text": "- Returns: An asynchronous sequence that contains, in order, the"
          },
          {
            "text": "  non-`nil` elements produced by the `transform` closure. The sequence"
          },
          {
            "text": "  ends either when the base sequence ends or when `transform` throws an"
          },
          {
            "text": "  error."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "transform",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "transform"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "ElementOfResult"
              },
              {
                "kind": "text",
                "spelling": "?"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncThrowingCompactMapSequence",
            "preciseIdentifier": "s:12_Concurrency31AsyncThrowingCompactMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "ElementOfResult",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "compactMap"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "ElementOfResult"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "transform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ElementOfResult"
        },
        {
          "kind": "text",
          "spelling": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncThrowingCompactMapSequence",
          "preciseIdentifier": "s:12_Concurrency31AsyncThrowingCompactMapSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ElementOfResult"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit17DataProviderStateO6pausedyA2CmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProviderState",
        "paused"
      ],
      "names": {
        "title": "DataProviderState.paused",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "paused"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The data provider is paused."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "paused"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit6AnchorP010originFromB9TransformSo13simd_float4x4avp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "Anchor",
        "originFromAnchorTransform"
      ],
      "names": {
        "title": "originFromAnchorTransform",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "originFromAnchorTransform"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "simd_float4x4",
            "preciseIdentifier": "c:@SA@simd_float4x4"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The transform from the anchor to the origin coordinate system."
          },
          {
            "text": "Note: In other words, the position + orientation of this anchor in the origin coordinate system."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "originFromAnchorTransform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "simd_float4x4",
          "preciseIdentifier": "c:@SA@simd_float4x4"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "dropFirst(_:)"
      ],
      "names": {
        "title": "dropFirst(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "dropFirst"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncDropFirstSequence",
            "preciseIdentifier": "s:12_Concurrency22AsyncDropFirstSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Omits a specified number of elements from the base asynchronous sequence,"
          },
          {
            "text": "then passes through all remaining elements."
          },
          {
            "text": ""
          },
          {
            "text": "Use `dropFirst(_:)` when you want to drop the first *n* elements from the"
          },
          {
            "text": "base sequence and pass through the remaining elements."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `dropFirst(_:)` method causes the modified"
          },
          {
            "text": "sequence to ignore the values `1` through `3`, and instead emit `4` through `10`:"
          },
          {
            "text": ""
          },
          {
            "text": "    for await number in Counter(howHigh: 10).dropFirst(3) {"
          },
          {
            "text": "        print(number, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"4 5 6 7 8 9 10 \""
          },
          {
            "text": ""
          },
          {
            "text": "If the number of elements to drop exceeds the number of elements in the"
          },
          {
            "text": "sequence, the result is an empty sequence."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter count: The number of elements to drop from the beginning of"
          },
          {
            "text": "  the sequence. `count` must be greater than or equal to zero."
          },
          {
            "text": "- Returns: An asynchronous sequence that drops the first `count`"
          },
          {
            "text": "  elements from the base sequence."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "count",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "count"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Int",
                "preciseIdentifier": "s:Si"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncDropFirstSequence",
            "preciseIdentifier": "s:12_Concurrency22AsyncDropFirstSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "dropFirst"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "count"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " = 1) -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncDropFirstSequence",
          "preciseIdentifier": "s:12_Concurrency22AsyncDropFirstSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC13anchorUpdatesAA20AnchorUpdateSequenceVyAA04MeshG0VGvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "anchorUpdates"
      ],
      "names": {
        "title": "anchorUpdates",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "anchorUpdates"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorUpdateSequence",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "MeshAnchor",
            "preciseIdentifier": "s:5ARKit10MeshAnchorV"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "An async sequence of all anchor updates."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "anchorUpdates"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdateSequence",
          "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "MeshAnchor",
          "preciseIdentifier": "s:5ARKit10MeshAnchorV"
        },
        {
          "kind": "text",
          "spelling": "> { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit11PlaneAnchorV14ClassificationO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV9chiralityAC9ChiralityOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "chirality"
      ],
      "names": {
        "title": "chirality",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "chirality"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandAnchor",
            "preciseIdentifier": "s:5ARKit10HandAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Chirality",
            "preciseIdentifier": "s:5ARKit10HandAnchorV9ChiralityO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The chirality of this hand."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "chirality"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandAnchor",
          "preciseIdentifier": "s:5ARKit10HandAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Chirality",
          "preciseIdentifier": "s:5ARKit10HandAnchorV9ChiralityO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11WorldAnchorV010originFromC9TransformSo13simd_float4x4avp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldAnchor",
        "originFromAnchorTransform"
      ],
      "names": {
        "title": "originFromAnchorTransform",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "originFromAnchorTransform"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "simd_float4x4",
            "preciseIdentifier": "c:@SA@simd_float4x4"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The transform from the world anchor to the origin coordinate system."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "originFromAnchorTransform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "simd_float4x4",
          "preciseIdentifier": "c:@SA@simd_float4x4"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV2IDa",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "ID"
      ],
      "names": {
        "title": "HandAnchor.ID",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "ID"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ID"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "A type representing the stable identity of the entity associated with"
          },
          {
            "text": "an instance."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ID"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "compactMap(_:)"
      ],
      "names": {
        "title": "compactMap(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "compactMap"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": ">(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": "?) -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncThrowingCompactMapSequence",
            "preciseIdentifier": "s:12_Concurrency31AsyncThrowingCompactMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that maps an error-throwing closure over"
          },
          {
            "text": "the base sequence’s elements, omitting results that don't return a value."
          },
          {
            "text": ""
          },
          {
            "text": "Use the `compactMap(_:)` method to transform every element received from"
          },
          {
            "text": "a base asynchronous sequence, while also discarding any `nil` results"
          },
          {
            "text": "from the closure. Typically, you use this to transform from one type of"
          },
          {
            "text": "element to another."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `5`. The closure provided to the `compactMap(_:)`"
          },
          {
            "text": "method takes each `Int` and looks up a corresponding `String` from a"
          },
          {
            "text": "`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"
          },
          {
            "text": "returns `nil` in this case, which `compactMap(_:)` omits from the"
          },
          {
            "text": "transformed asynchronous sequence. When the value is `5`, the closure"
          },
          {
            "text": "throws `MyError`, terminating the sequence."
          },
          {
            "text": ""
          },
          {
            "text": "    let romanNumeralDict: [Int: String] ="
          },
          {
            "text": "        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"
          },
          {
            "text": ""
          },
          {
            "text": "    do {"
          },
          {
            "text": "        let stream = Counter(howHigh: 5)"
          },
          {
            "text": "            .compactMap { (value) throws -> String? in"
          },
          {
            "text": "                if value == 5 {"
          },
          {
            "text": "                    throw MyError()"
          },
          {
            "text": "                }"
          },
          {
            "text": "                return romanNumeralDict[value]"
          },
          {
            "text": "            }"
          },
          {
            "text": "        for try await numeral in stream {"
          },
          {
            "text": "            print(numeral, terminator: \" \")"
          },
          {
            "text": "        }"
          },
          {
            "text": "    } catch {"
          },
          {
            "text": "        print(\"Error: \\(error)\")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"I II III Error: MyError() \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter transform: An error-throwing mapping closure. `transform`"
          },
          {
            "text": "  accepts an element of this sequence as its parameter and returns a"
          },
          {
            "text": "  transformed value of the same or of a different type. If `transform`"
          },
          {
            "text": "  throws an error, the sequence ends."
          },
          {
            "text": "- Returns: An asynchronous sequence that contains, in order, the"
          },
          {
            "text": "  non-`nil` elements produced by the `transform` closure. The sequence"
          },
          {
            "text": "  ends either when the base sequence ends or when `transform` throws an"
          },
          {
            "text": "  error."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "transform",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "transform"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "ElementOfResult"
              },
              {
                "kind": "text",
                "spelling": "?"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncThrowingCompactMapSequence",
            "preciseIdentifier": "s:12_Concurrency31AsyncThrowingCompactMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ElementOfResult"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "ElementOfResult",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "compactMap"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "ElementOfResult"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "transform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ElementOfResult"
        },
        {
          "kind": "text",
          "spelling": "?) -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncThrowingCompactMapSequence",
          "preciseIdentifier": "s:12_Concurrency31AsyncThrowingCompactMapSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ElementOfResult"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_plane_anchors",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_plane_anchors"
      ],
      "names": {
        "title": "OS_ar_plane_anchors",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_plane_anchors"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_plane_anchors"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_plane_anchors"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this geometry element."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "contains(where:)"
      ],
      "names": {
        "title": "contains(where:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "contains"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "where"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns a Boolean value that indicates whether the asynchronous sequence"
          },
          {
            "text": "contains an element that satisfies the given predicate."
          },
          {
            "text": ""
          },
          {
            "text": "You can use the predicate to check for an element of a type that doesn’t"
          },
          {
            "text": "conform to the `Equatable` protocol, or to find an element that satisfies"
          },
          {
            "text": "a general condition."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `contains(where:)` method checks to see"
          },
          {
            "text": "whether the sequence produces a value divisible by `3`:"
          },
          {
            "text": ""
          },
          {
            "text": "    let containsDivisibleByThree = await Counter(howHigh: 10)"
          },
          {
            "text": "        .contains { $0 % 3 == 0 }"
          },
          {
            "text": "    print(containsDivisibleByThree)"
          },
          {
            "text": "    // Prints \"true\""
          },
          {
            "text": ""
          },
          {
            "text": "The predicate executes each time the asynchronous sequence produces an"
          },
          {
            "text": "element, until either the predicate finds a match or the sequence ends."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter predicate: A closure that takes an element of the asynchronous"
          },
          {
            "text": "  sequence as its argument and returns a Boolean value that indicates"
          },
          {
            "text": "  whether the passed element represents a match."
          },
          {
            "text": "- Returns: `true` if the sequence contains an element that satisfies"
          },
          {
            "text": "  predicate; otherwise, `false`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "where",
            "internalName": "predicate",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "predicate"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "contains"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "where"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "predicate"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit17DataProviderStateO11initializedyA2CmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProviderState",
        "initialized"
      ],
      "names": {
        "title": "DataProviderState.initialized",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "initialized"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The data provider is initialized."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "initialized"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "allSatisfy(_:)"
      ],
      "names": {
        "title": "allSatisfy(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "allSatisfy"
          },
          {
            "kind": "text",
            "spelling": "(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns a Boolean value that indicates whether all elements produced by the"
          },
          {
            "text": "asynchronous sequence satisfy the given predicate."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"
          },
          {
            "text": "all elements produced by the sequence are less than `10`."
          },
          {
            "text": ""
          },
          {
            "text": "    let allLessThanTen = await Counter(howHigh: 10)"
          },
          {
            "text": "        .allSatisfy { $0 < 10 }"
          },
          {
            "text": "    print(allLessThanTen)"
          },
          {
            "text": "    // Prints \"false\""
          },
          {
            "text": ""
          },
          {
            "text": "The predicate executes each time the asynchronous sequence produces an"
          },
          {
            "text": "element, until either the predicate returns `false` or the sequence ends."
          },
          {
            "text": ""
          },
          {
            "text": "If the asynchronous sequence is empty, this method returns `true`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter predicate: A closure that takes an element of the asynchronous"
          },
          {
            "text": "  sequence as its argument and returns a Boolean value that indicates"
          },
          {
            "text": "  whether the passed element satisfies a condition."
          },
          {
            "text": "- Returns: `true` if the sequence contains only elements that satisfy"
          },
          {
            "text": "  `predicate`; otherwise, `false`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "predicate",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "predicate"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "allSatisfy"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "predicate"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC6EventsV8IteratorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "Iterator"
      ],
      "names": {
        "title": "ARKitSession.Events.Iterator",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Iterator"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Iterator"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "An iterator over a sequence of session events."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Iterator"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_image_anchor",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_image_anchor"
      ],
      "names": {
        "title": "OS_ar_image_anchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_image_anchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_image_anchor"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_image_anchor"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "OS_ar_trackable_anchor",
          "preciseIdentifier": "c:objc(pl)OS_ar_trackable_anchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO9hashValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "Code",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The hash value."
          },
          {
            "text": ""
          },
          {
            "text": "Hash values are not guaranteed to be equal across different executions of"
          },
          {
            "text": "your program. Do not save hash values to use during a future execution."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: `hashValue` is deprecated as a `Hashable` requirement. To"
          },
          {
            "text": "  conform to `Hashable`, implement the `hash(into:)` requirement instead."
          },
          {
            "text": "  The compiler provides an implementation for `hashValue` for you."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit12HandSkeletonV9JointNameO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "map(_:)"
      ],
      "names": {
        "title": "map(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "map"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ">(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncMapSequence",
            "preciseIdentifier": "s:12_Concurrency16AsyncMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that maps the given closure over the"
          },
          {
            "text": "asynchronous sequence’s elements."
          },
          {
            "text": ""
          },
          {
            "text": "Use the `map(_:)` method to transform every element received from a base"
          },
          {
            "text": "asynchronous sequence. Typically, you use this to transform from one type"
          },
          {
            "text": "of element to another."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `5`. The closure provided to the `map(_:)` method"
          },
          {
            "text": "takes each `Int` and looks up a corresponding `String` from a"
          },
          {
            "text": "`romanNumeralDict` dictionary. This means the outer `for await in` loop"
          },
          {
            "text": "iterates over `String` instances instead of the underlying `Int` values"
          },
          {
            "text": "that `Counter` produces:"
          },
          {
            "text": ""
          },
          {
            "text": "    let romanNumeralDict: [Int: String] ="
          },
          {
            "text": "        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"
          },
          {
            "text": ""
          },
          {
            "text": "    let stream = Counter(howHigh: 5)"
          },
          {
            "text": "        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"
          },
          {
            "text": "    for await numeral in stream {"
          },
          {
            "text": "        print(numeral, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"I II III (unknown) V \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter transform: A mapping closure. `transform` accepts an element"
          },
          {
            "text": "  of this sequence as its parameter and returns a transformed value of the"
          },
          {
            "text": "  same or of a different type."
          },
          {
            "text": "- Returns: An asynchronous sequence that contains, in order, the elements"
          },
          {
            "text": "  produced by the `transform` closure."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "transform",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "transform"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Transformed"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncMapSequence",
            "preciseIdentifier": "s:12_Concurrency16AsyncMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "Transformed",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "map"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "Transformed"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "transform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Transformed"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncMapSequence",
          "preciseIdentifier": "s:12_Concurrency16AsyncMapSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Transformed"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV2id10Foundation4UUIDVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "id"
      ],
      "names": {
        "title": "id",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "id"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "UUID",
            "preciseIdentifier": "s:10Foundation4UUIDV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The unique identifier of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "id"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC17AuthorizationTypeO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationType"
      ],
      "names": {
        "title": "ARKitSession.AuthorizationType",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "AuthorizationType"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "AuthorizationType"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Enumeration of all possible authorization types."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "AuthorizationType"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_scene_reconstruction_configuration",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_scene_reconstruction_configuration"
      ],
      "names": {
        "title": "OS_ar_scene_reconstruction_configuration",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_scene_reconstruction_configuration"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_scene_reconstruction_configuration"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_scene_reconstruction_configuration"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_mesh_geometry",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_mesh_geometry"
      ],
      "names": {
        "title": "OS_ar_mesh_geometry",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_mesh_geometry"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_mesh_geometry"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_mesh_geometry"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC19AuthorizationStatusO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationStatus"
      ],
      "names": {
        "title": "ARKitSession.AuthorizationStatus",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "AuthorizationStatus"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "AuthorizationStatus"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Enumeration of all possible authorization statuses."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "AuthorizationStatus"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error"
      ],
      "names": {
        "title": "WorldTrackingProvider.Error",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Error"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Error"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A world tracking error."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Error"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV4codeAE4CodeOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "code"
      ],
      "names": {
        "title": "code",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "code"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Error",
            "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Code",
            "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV4CodeO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The error code."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "code"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Error",
          "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Code",
          "preciseIdentifier": "s:5ARKit0A7SessionC5ErrorV4CodeO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV010anchorFromE9TransformSo13simd_float4x4avp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Geometry",
        "Extent",
        "anchorFromExtentTransform"
      ],
      "names": {
        "title": "anchorFromExtentTransform",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "anchorFromExtentTransform"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "simd_float4x4",
            "preciseIdentifier": "c:@SA@simd_float4x4"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the transform from the plane extent to the plane anchor’s coordinate system."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "anchorFromExtentTransform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "simd_float4x4",
          "preciseIdentifier": "c:@SA@simd_float4x4"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_plane_anchor",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_plane_anchor"
      ],
      "names": {
        "title": "OS_ar_plane_anchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_plane_anchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_plane_anchor"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_plane_anchor"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "OS_ar_anchor",
          "preciseIdentifier": "c:objc(pl)OS_ar_anchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit20HandTrackingProviderC11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandTrackingProvider",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this hand tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "requiredAuthorizations"
      ],
      "names": {
        "title": "requiredAuthorizations",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "requiredAuthorizations"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The authorization type(s) required by the scene reconstruction provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "requiredAuthorizations"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": "] { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "allSatisfy(_:)"
      ],
      "names": {
        "title": "allSatisfy(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "allSatisfy"
          },
          {
            "kind": "text",
            "spelling": "(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns a Boolean value that indicates whether all elements produced by the"
          },
          {
            "text": "asynchronous sequence satisfy the given predicate."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"
          },
          {
            "text": "all elements produced by the sequence are less than `10`."
          },
          {
            "text": ""
          },
          {
            "text": "    let allLessThanTen = await Counter(howHigh: 10)"
          },
          {
            "text": "        .allSatisfy { $0 < 10 }"
          },
          {
            "text": "    print(allLessThanTen)"
          },
          {
            "text": "    // Prints \"false\""
          },
          {
            "text": ""
          },
          {
            "text": "The predicate executes each time the asynchronous sequence produces an"
          },
          {
            "text": "element, until either the predicate returns `false` or the sequence ends."
          },
          {
            "text": ""
          },
          {
            "text": "If the asynchronous sequence is empty, this method returns `true`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter predicate: A closure that takes an element of the asynchronous"
          },
          {
            "text": "  sequence as its argument and returns a Boolean value that indicates"
          },
          {
            "text": "  whether the passed element satisfies a condition."
          },
          {
            "text": "- Returns: `true` if the sequence contains only elements that satisfy"
          },
          {
            "text": "  `predicate`; otherwise, `false`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "predicate",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "predicate"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "allSatisfy"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "predicate"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit10HandAnchorV9ChiralityO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "Chirality",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "Code"
      ],
      "names": {
        "title": "WorldTrackingProvider.Error.Code",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Code"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Code"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Enumeration of all possible world tracking error codes."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Code"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC6EventsV13AsyncIteratora",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "AsyncIterator"
      ],
      "names": {
        "title": "ARKitSession.Events.AsyncIterator",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "AsyncIterator"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "AsyncIterator"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "The type of asynchronous iterator that produces elements of this"
          },
          {
            "text": "asynchronous sequence."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "AsyncIterator"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Events",
          "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Iterator",
          "preciseIdentifier": "s:5ARKit0A7SessionC6EventsV8IteratorV"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "map(_:)"
      ],
      "names": {
        "title": "map(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "map"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ">(("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncMapSequence",
            "preciseIdentifier": "s:12_Concurrency16AsyncMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates an asynchronous sequence that maps the given closure over the"
          },
          {
            "text": "asynchronous sequence’s elements."
          },
          {
            "text": ""
          },
          {
            "text": "Use the `map(_:)` method to transform every element received from a base"
          },
          {
            "text": "asynchronous sequence. Typically, you use this to transform from one type"
          },
          {
            "text": "of element to another."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `5`. The closure provided to the `map(_:)` method"
          },
          {
            "text": "takes each `Int` and looks up a corresponding `String` from a"
          },
          {
            "text": "`romanNumeralDict` dictionary. This means the outer `for await in` loop"
          },
          {
            "text": "iterates over `String` instances instead of the underlying `Int` values"
          },
          {
            "text": "that `Counter` produces:"
          },
          {
            "text": ""
          },
          {
            "text": "    let romanNumeralDict: [Int: String] ="
          },
          {
            "text": "        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"
          },
          {
            "text": ""
          },
          {
            "text": "    let stream = Counter(howHigh: 5)"
          },
          {
            "text": "        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"
          },
          {
            "text": "    for await numeral in stream {"
          },
          {
            "text": "        print(numeral, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"I II III (unknown) V \""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter transform: A mapping closure. `transform` accepts an element"
          },
          {
            "text": "  of this sequence as its parameter and returns a transformed value of the"
          },
          {
            "text": "  same or of a different type."
          },
          {
            "text": "- Returns: An asynchronous sequence that contains, in order, the elements"
          },
          {
            "text": "  produced by the `transform` closure."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "transform",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "transform"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Transformed"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncMapSequence",
            "preciseIdentifier": "s:12_Concurrency16AsyncMapSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Transformed"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "Transformed",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "map"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "Transformed"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "transform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Transformed"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncMapSequence",
          "preciseIdentifier": "s:12_Concurrency16AsyncMapSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Transformed"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11WorldAnchorV2id10Foundation4UUIDVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldAnchor",
        "id"
      ],
      "names": {
        "title": "id",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "id"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "UUID",
            "preciseIdentifier": "s:10Foundation4UUIDV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The unique identifier of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "id"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit22PlaneDetectionProviderC11isSupportedSbvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneDetectionProvider",
        "isSupported"
      ],
      "names": {
        "title": "isSupported",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "isSupported"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Determines whether this device supports the plane detection provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "isSupported"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.init",
        "displayName": "Initializer"
      },
      "identifier": {
        "precise": "s:5ARKit11WorldAnchorV010originFromC9TransformACSo13simd_float4x4a_tcfc",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldAnchor",
        "init(originFromAnchorTransform:)"
      ],
      "names": {
        "title": "init(originFromAnchorTransform:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "init"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "originFromAnchorTransform"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "simd_float4x4",
            "preciseIdentifier": "c:@SA@simd_float4x4"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Initialize a world anchor with a transform."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - originFromAnchorTransform: The transform from the world anchor to the origin coordinate system."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "init"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "originFromAnchorTransform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "simd_float4x4",
          "preciseIdentifier": "c:@SA@simd_float4x4"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC17queryDeviceAnchor11atTimestampAA0fG0VSgSd_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "queryDeviceAnchor(atTimestamp:)"
      ],
      "names": {
        "title": "queryDeviceAnchor(atTimestamp:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "queryDeviceAnchor"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "atTimestamp"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "TimeInterval",
            "preciseIdentifier": "c:@T@NSTimeInterval"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DeviceAnchor",
            "preciseIdentifier": "s:5ARKit12DeviceAnchorV"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Query the device anchor at a given timestamp."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - timestamp: The timestamp for predicting the device anchor's transform. The timestamp should be provided as mach absolute time in seconds. For example, to"
          },
          {
            "text": "               get the current device anchor, provide `CACurrentMediaTime()` as the timestamp."
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: The device anchor, or nil if prediction failed."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "atTimestamp",
            "internalName": "timestamp",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "timestamp"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "TimeInterval",
                "preciseIdentifier": "c:@T@NSTimeInterval"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "DeviceAnchor",
            "preciseIdentifier": "s:5ARKit12DeviceAnchorV"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "queryDeviceAnchor"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "atTimestamp"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "timestamp"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "TimeInterval",
          "preciseIdentifier": "c:@T@NSTimeInterval"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DeviceAnchor",
          "preciseIdentifier": "s:5ARKit12DeviceAnchorV"
        },
        {
          "kind": "text",
          "spelling": "?"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV5EventO9hashValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "Event",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The hash value."
          },
          {
            "text": ""
          },
          {
            "text": "Hash values are not guaranteed to be equal across different executions of"
          },
          {
            "text": "your program. Do not save hash values to use during a future execution."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: `hashValue` is deprecated as a `Hashable` requirement. To"
          },
          {
            "text": "  conform to `Hashable`, implement the `hash(into:)` requirement instead."
          },
          {
            "text": "  The compiler provides an implementation for `hashValue` for you."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:5ARKit17DataProviderStateO2eeoiySbAC_ACtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProviderState",
        "==(_:_:)"
      ],
      "names": {
        "title": "==(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "=="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DataProviderState",
            "preciseIdentifier": "s:5ARKit17DataProviderStateO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DataProviderState",
            "preciseIdentifier": "s:5ARKit17DataProviderStateO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Returns a Boolean value indicating whether two values are equal."
          },
          {
            "text": ""
          },
          {
            "text": "Equality is the inverse of inequality. For any values `a` and `b`,"
          },
          {
            "text": "`a == b` implies that `a != b` is `false`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - lhs: A value to compare."
          },
          {
            "text": "  - rhs: Another value to compare."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "a",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "a"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "DataProviderState",
                "preciseIdentifier": "s:5ARKit17DataProviderStateO"
              }
            ]
          },
          {
            "name": "b",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "b"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "DataProviderState",
                "preciseIdentifier": "s:5ARKit17DataProviderStateO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "=="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "a"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DataProviderState",
          "preciseIdentifier": "s:5ARKit17DataProviderStateO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "b"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DataProviderState",
          "preciseIdentifier": "s:5ARKit17DataProviderStateO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.init",
        "displayName": "Initializer"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderCACycfc",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "init()"
      ],
      "names": {
        "title": "init()",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "init"
          },
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Create a world tracking provider."
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: The world tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "init"
        },
        {
          "kind": "text",
          "spelling": "()"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO4hash4intoys6HasherVz_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Hashes the essential components of this value by feeding them into the"
          },
          {
            "text": "given hasher."
          },
          {
            "text": ""
          },
          {
            "text": "Implement this method to conform to the `Hashable` protocol. The"
          },
          {
            "text": "components used for hashing must be the same as the components compared"
          },
          {
            "text": "in your type's `==` operator implementation. Call `hasher.combine(_:)`"
          },
          {
            "text": "with each of these components."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: In your implementation of `hash(into:)`,"
          },
          {
            "text": "  don't call `finalize()` on the `hasher` instance provided,"
          },
          {
            "text": "  or replace it with a different instance."
          },
          {
            "text": "  Doing so may become a compile-time error in the future."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter hasher: The hasher to use when combining the components"
          },
          {
            "text": "  of this instance."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit15GeometryElementV9PrimitiveO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "Primitive",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV12dataProviderAA04DataE0_pSgvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "dataProvider"
      ],
      "names": {
        "title": "dataProvider",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "let"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "dataProvider"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DataProvider",
            "preciseIdentifier": "s:5ARKit12DataProviderP"
          },
          {
            "kind": "text",
            "spelling": ")?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The data provider which encountered an error (if any)."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "let"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "dataProvider"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DataProvider",
          "preciseIdentifier": "s:5ARKit12DataProviderP"
        },
        {
          "kind": "text",
          "spelling": ")?"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO2eeoiySbAE_AEtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "==(_:_:)"
      ],
      "names": {
        "title": "==(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "=="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandSkeleton",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "JointName",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandSkeleton",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "JointName",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Returns a Boolean value indicating whether two values are equal."
          },
          {
            "text": ""
          },
          {
            "text": "Equality is the inverse of inequality. For any values `a` and `b`,"
          },
          {
            "text": "`a == b` implies that `a != b` is `false`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - lhs: A value to compare."
          },
          {
            "text": "  - rhs: Another value to compare."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "a",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "a"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "HandSkeleton",
                "preciseIdentifier": "s:5ARKit12HandSkeletonV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "JointName",
                "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
              }
            ]
          },
          {
            "name": "b",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "b"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "HandSkeleton",
                "preciseIdentifier": "s:5ARKit12HandSkeletonV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "JointName",
                "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "=="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "a"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandSkeleton",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "JointName",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "b"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandSkeleton",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "JointName",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO9hashValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The hash value."
          },
          {
            "text": ""
          },
          {
            "text": "Hash values are not guaranteed to be equal across different executions of"
          },
          {
            "text": "your program. Do not save hash values to use during a future execution."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: `hashValue` is deprecated as a `Hashable` requirement. To"
          },
          {
            "text": "  conform to `Hashable`, implement the `hash(into:)` requirement instead."
          },
          {
            "text": "  The compiler provides an implementation for `hashValue` for you."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.init",
        "displayName": "Initializer"
      },
      "identifier": {
        "precise": "s:5ARKit22PlaneDetectionProviderC10alignmentsACSayAA0B6AnchorV9AlignmentOG_tcfc",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneDetectionProvider",
        "init(alignments:)"
      ],
      "names": {
        "title": "init(alignments:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "init"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "alignments"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "PlaneAnchor",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Alignment",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV9AlignmentO"
          },
          {
            "kind": "text",
            "spelling": "])"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Create a plane detection provider."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - alignments: The alignments of planes to be detected. Defaults to detecting horizontal and vertical planes."
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: The plane detection provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "init"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "alignments"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "PlaneAnchor",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Alignment",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV9AlignmentO"
        },
        {
          "kind": "text",
          "spelling": "] = [.horizontal, .vertical])"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.class",
        "displayName": "Class"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession"
      ],
      "names": {
        "title": "ARKitSession",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "ARKitSession"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "class"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ARKitSession"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A session for running data providers."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "class"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ARKitSession"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11WorldAnchorV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldAnchor",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_pose",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_pose"
      ],
      "names": {
        "title": "OS_ar_pose",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_pose"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_pose"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_pose"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:10Foundation14LocalizedErrorPAAE10helpAnchorSSSgvp::SYNTHESIZED::s:5ARKit0A7SessionC5ErrorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "helpAnchor"
      ],
      "names": {
        "title": "helpAnchor",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "helpAnchor"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "Foundation",
        "lines": [
          {
            "text": "A localized message providing \"help\" text if the user requests help."
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Foundation",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "helpAnchor"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": "? { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 10
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 2,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 8,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 9,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit20HandTrackingProviderC13anchorUpdatesAA20AnchorUpdateSequenceVyAA0bG0VGvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandTrackingProvider",
        "anchorUpdates"
      ],
      "names": {
        "title": "anchorUpdates",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "anchorUpdates"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorUpdateSequence",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandAnchor",
            "preciseIdentifier": "s:5ARKit10HandAnchorV"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "An async sequence of all anchor updates."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "anchorUpdates"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdateSequence",
          "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandAnchor",
          "preciseIdentifier": "s:5ARKit10HandAnchorV"
        },
        {
          "kind": "text",
          "spelling": "> { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO4hash4intoys6HasherVz_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Hashes the essential components of this value by feeding them into the"
          },
          {
            "text": "given hasher."
          },
          {
            "text": ""
          },
          {
            "text": "Implement this method to conform to the `Hashable` protocol. The"
          },
          {
            "text": "components used for hashing must be the same as the components compared"
          },
          {
            "text": "in your type's `==` operator implementation. Call `hasher.combine(_:)`"
          },
          {
            "text": "with each of these components."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: In your implementation of `hash(into:)`,"
          },
          {
            "text": "  don't call `finalize()` on the `hasher` instance provided,"
          },
          {
            "text": "  or replace it with a different instance."
          },
          {
            "text": "  Doing so may become a compile-time error in the future."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter hasher: The hasher to use when combining the components"
          },
          {
            "text": "  of this instance."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit17DataProviderStateO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProviderState",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of the state."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV2IDa",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "ID"
      ],
      "names": {
        "title": "PlaneAnchor.ID",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "ID"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ID"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "A type representing the stable identity of the entity associated with"
          },
          {
            "text": "an instance."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ID"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11WorldAnchorV9isTrackedSbvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldAnchor",
        "isTracked"
      ],
      "names": {
        "title": "isTracked",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "isTracked"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Whether this world anchor is currently tracked or not."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "isTracked"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV5EventO2eeoiySbAEyx_G_AGtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "Event",
        "==(_:_:)"
      ],
      "names": {
        "title": "==(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "=="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorUpdate",
            "preciseIdentifier": "s:5ARKit12AnchorUpdateV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorType"
          },
          {
            "kind": "text",
            "spelling": ">."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Event",
            "preciseIdentifier": "s:5ARKit12AnchorUpdateV5EventO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorUpdate",
            "preciseIdentifier": "s:5ARKit12AnchorUpdateV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorType"
          },
          {
            "kind": "text",
            "spelling": ">."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Event",
            "preciseIdentifier": "s:5ARKit12AnchorUpdateV5EventO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Returns a Boolean value indicating whether two values are equal."
          },
          {
            "text": ""
          },
          {
            "text": "Equality is the inverse of inequality. For any values `a` and `b`,"
          },
          {
            "text": "`a == b` implies that `a != b` is `false`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - lhs: A value to compare."
          },
          {
            "text": "  - rhs: Another value to compare."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "a",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "a"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "AnchorUpdate",
                "preciseIdentifier": "s:5ARKit12AnchorUpdateV"
              },
              {
                "kind": "text",
                "spelling": "<"
              },
              {
                "kind": "typeIdentifier",
                "spelling": "AnchorType"
              },
              {
                "kind": "text",
                "spelling": ">."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Event",
                "preciseIdentifier": "s:5ARKit12AnchorUpdateV5EventO"
              }
            ]
          },
          {
            "name": "b",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "b"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "AnchorUpdate",
                "preciseIdentifier": "s:5ARKit12AnchorUpdateV"
              },
              {
                "kind": "text",
                "spelling": "<"
              },
              {
                "kind": "typeIdentifier",
                "spelling": "AnchorType"
              },
              {
                "kind": "text",
                "spelling": ">."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Event",
                "preciseIdentifier": "s:5ARKit12AnchorUpdateV5EventO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 0
          }
        ],
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "=="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "a"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdate",
          "preciseIdentifier": "s:5ARKit12AnchorUpdateV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": ">."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Event",
          "preciseIdentifier": "s:5ARKit12AnchorUpdateV5EventO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "b"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdate",
          "preciseIdentifier": "s:5ARKit12AnchorUpdateV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": ">."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Event",
          "preciseIdentifier": "s:5ARKit12AnchorUpdateV5EventO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.init",
        "displayName": "Initializer"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO8rawValueAESgSi_tcfc",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "init(rawValue:)"
      ],
      "names": {
        "title": "init(rawValue:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "init"
          },
          {
            "kind": "text",
            "spelling": "?("
          },
          {
            "kind": "externalParam",
            "spelling": "rawValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "NSInteger",
            "preciseIdentifier": "c:@T@NSInteger"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Creates a new instance with the specified raw value."
          },
          {
            "text": ""
          },
          {
            "text": "If there is no value of the type that corresponds with the specified raw"
          },
          {
            "text": "value, this initializer returns `nil`. For example:"
          },
          {
            "text": ""
          },
          {
            "text": "    enum PaperSize: String {"
          },
          {
            "text": "        case A4, A5, Letter, Legal"
          },
          {
            "text": "    }"
          },
          {
            "text": ""
          },
          {
            "text": "    print(PaperSize(rawValue: \"Legal\"))"
          },
          {
            "text": "    // Prints \"Optional(\"PaperSize.Legal\")\""
          },
          {
            "text": ""
          },
          {
            "text": "    print(PaperSize(rawValue: \"Tabloid\"))"
          },
          {
            "text": "    // Prints \"nil\""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter rawValue: The raw value to use for the new instance."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "init"
        },
        {
          "kind": "text",
          "spelling": "?("
        },
        {
          "kind": "externalParam",
          "spelling": "rawValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSInteger",
          "preciseIdentifier": "c:@T@NSInteger"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit22PlaneDetectionProviderC5stateAA04DataD5StateOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneDetectionProvider",
        "state"
      ],
      "names": {
        "title": "state",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "state"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DataProviderState",
            "preciseIdentifier": "s:5ARKit17DataProviderStateO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The state of this plane detection provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "state"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DataProviderState",
          "preciseIdentifier": "s:5ARKit17DataProviderStateO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit6AnchorP2id10Foundation4UUIDVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "Anchor",
        "id"
      ],
      "names": {
        "title": "id",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "id"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "UUID",
            "preciseIdentifier": "s:10Foundation4UUIDV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The unique identifier of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "id"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit17DataProviderStateO7runningyA2CmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProviderState",
        "running"
      ],
      "names": {
        "title": "DataProviderState.running",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "running"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The data provider is running."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "running"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "requiredAuthorizations"
      ],
      "names": {
        "title": "requiredAuthorizations",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "requiredAuthorizations"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The authorization type(s) required by the world tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "requiredAuthorizations"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": "] { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV18recoverySuggestionSSSgvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "recoverySuggestion"
      ],
      "names": {
        "title": "recoverySuggestion",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "recoverySuggestion"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A localized message describing how one might recover from the failure."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "recoverySuggestion"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": "? { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10HandAnchorV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandAnchor",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_reference_image",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_reference_image"
      ],
      "names": {
        "title": "OS_ar_reference_image",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_reference_image"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_reference_image"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_reference_image"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO8AllCasesa",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "AllCases"
      ],
      "names": {
        "title": "HandSkeleton.JointName.AllCases",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "AllCases"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "AllCases"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "A type that can represent a collection of all values of this type."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "AllCases"
        },
        {
          "kind": "text",
          "spelling": " = ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandSkeleton",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "JointName",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
        },
        {
          "kind": "text",
          "spelling": "]"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit17DataProviderStateO7stoppedyA2CmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProviderState",
        "stopped"
      ],
      "names": {
        "title": "DataProviderState.stopped",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "stopped"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The data provider has been stopped."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "stopped"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV5EventO4hash4intoys6HasherVz_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "Event",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Hashes the essential components of this value by feeding them into the"
          },
          {
            "text": "given hasher."
          },
          {
            "text": ""
          },
          {
            "text": "Implement this method to conform to the `Hashable` protocol. The"
          },
          {
            "text": "components used for hashing must be the same as the components compared"
          },
          {
            "text": "in your type's `==` operator implementation. Call `hasher.combine(_:)`"
          },
          {
            "text": "with each of these components."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: In your implementation of `hash(into:)`,"
          },
          {
            "text": "  don't call `finalize()` on the `hasher` instance provided,"
          },
          {
            "text": "  or replace it with a different instance."
          },
          {
            "text": "  Doing so may become a compile-time error in the future."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter hasher: The hasher to use when combining the components"
          },
          {
            "text": "  of this instance."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 0
          }
        ],
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC11isSupportedSbvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "isSupported"
      ],
      "names": {
        "title": "isSupported",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "isSupported"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Determines whether this device supports the world tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "isSupported"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV4CodeO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "Code"
      ],
      "names": {
        "title": "ARKitSession.Error.Code",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Code"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Code"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Enumeration of all session error codes."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Code"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO8allCasesSayAEGvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "allCases"
      ],
      "names": {
        "title": "allCases",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "allCases"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandSkeleton",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "JointName",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "A collection of all values of this type."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "allCases"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandSkeleton",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "JointName",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
        },
        {
          "kind": "text",
          "spelling": "] { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_reference_images",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_reference_images"
      ],
      "names": {
        "title": "OS_ar_reference_images",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_reference_images"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_reference_images"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_reference_images"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this scene reconstruction provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit20HandTrackingProviderC22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandTrackingProvider",
        "requiredAuthorizations"
      ],
      "names": {
        "title": "requiredAuthorizations",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "requiredAuthorizations"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The authorization type(s) required by the hand tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "requiredAuthorizations"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": "] { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO2eeoiySbAE_AEtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "==(_:_:)"
      ],
      "names": {
        "title": "==(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "=="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "PlaneAnchor",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Classification",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV14ClassificationO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "PlaneAnchor",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Classification",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV14ClassificationO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Returns a Boolean value indicating whether two values are equal."
          },
          {
            "text": ""
          },
          {
            "text": "Equality is the inverse of inequality. For any values `a` and `b`,"
          },
          {
            "text": "`a == b` implies that `a != b` is `false`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - lhs: A value to compare."
          },
          {
            "text": "  - rhs: Another value to compare."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "a",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "a"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "PlaneAnchor",
                "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Classification",
                "preciseIdentifier": "s:5ARKit11PlaneAnchorV14ClassificationO"
              }
            ]
          },
          {
            "name": "b",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "b"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "PlaneAnchor",
                "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Classification",
                "preciseIdentifier": "s:5ARKit11PlaneAnchorV14ClassificationO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "=="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "a"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "PlaneAnchor",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Classification",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV14ClassificationO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "b"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "PlaneAnchor",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Classification",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV14ClassificationO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_geometry_source",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_geometry_source"
      ],
      "names": {
        "title": "OS_ar_geometry_source",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_geometry_source"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_geometry_source"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_geometry_source"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO26ringFingerIntermediateBaseyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "ringFingerIntermediateBase"
      ],
      "names": {
        "title": "HandSkeleton.JointName.ringFingerIntermediateBase",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ringFingerIntermediateBase"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The ring finger intermediate base joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ringFingerIntermediateBase"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV5EventO5addedyAEyx_GAGmAA0B0RzlF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "Event",
        "added"
      ],
      "names": {
        "title": "AnchorUpdate.Event.added",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "added"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The anchor was added."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "added"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit20HandTrackingProviderC11isSupportedSbvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandTrackingProvider",
        "isSupported"
      ],
      "names": {
        "title": "isSupported",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "isSupported"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Determines whether this device supports the hand tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "isSupported"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV5EventO7updatedyAEyx_GAGmAA0B0RzlF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "Event",
        "updated"
      ],
      "names": {
        "title": "AnchorUpdate.Event.updated",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "updated"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The anchor was updated."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "updated"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit17DataProviderStateO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProviderState",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit22PlaneDetectionProviderC10alignmentsSayAA0B6AnchorV9AlignmentOGvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneDetectionProvider",
        "alignments"
      ],
      "names": {
        "title": "alignments",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "alignments"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "PlaneAnchor",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Alignment",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV9AlignmentO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The alignments of planes to be detected."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "alignments"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "PlaneAnchor",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Alignment",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV9AlignmentO"
        },
        {
          "kind": "text",
          "spelling": "] { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV9PrimitiveO2eeoiySbAE_AEtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "Primitive",
        "==(_:_:)"
      ],
      "names": {
        "title": "==(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "=="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "GeometryElement",
            "preciseIdentifier": "s:5ARKit15GeometryElementV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Primitive",
            "preciseIdentifier": "s:5ARKit15GeometryElementV9PrimitiveO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "GeometryElement",
            "preciseIdentifier": "s:5ARKit15GeometryElementV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Primitive",
            "preciseIdentifier": "s:5ARKit15GeometryElementV9PrimitiveO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Returns a Boolean value indicating whether two values are equal."
          },
          {
            "text": ""
          },
          {
            "text": "Equality is the inverse of inequality. For any values `a` and `b`,"
          },
          {
            "text": "`a == b` implies that `a != b` is `false`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - lhs: A value to compare."
          },
          {
            "text": "  - rhs: Another value to compare."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "a",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "a"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "GeometryElement",
                "preciseIdentifier": "s:5ARKit15GeometryElementV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Primitive",
                "preciseIdentifier": "s:5ARKit15GeometryElementV9PrimitiveO"
              }
            ]
          },
          {
            "name": "b",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "b"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "GeometryElement",
                "preciseIdentifier": "s:5ARKit15GeometryElementV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Primitive",
                "preciseIdentifier": "s:5ARKit15GeometryElementV9PrimitiveO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "=="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "a"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "GeometryElement",
          "preciseIdentifier": "s:5ARKit15GeometryElementV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Primitive",
          "preciseIdentifier": "s:5ARKit15GeometryElementV9PrimitiveO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "b"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "GeometryElement",
          "preciseIdentifier": "s:5ARKit15GeometryElementV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Primitive",
          "preciseIdentifier": "s:5ARKit15GeometryElementV9PrimitiveO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "max(by:)"
      ],
      "names": {
        "title": "max(by:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "max"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "by"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns the maximum element in the asynchronous sequence, using the given"
          },
          {
            "text": "predicate as the comparison between elements."
          },
          {
            "text": ""
          },
          {
            "text": "Use this method when the asynchronous sequence's values don't conform"
          },
          {
            "text": "to `Comparable`, or when you want to apply a custom ordering to the"
          },
          {
            "text": "sequence."
          },
          {
            "text": ""
          },
          {
            "text": "The predicate must be a *strict weak ordering* over the elements. That is,"
          },
          {
            "text": "for any elements `a`, `b`, and `c`, the following conditions must hold:"
          },
          {
            "text": ""
          },
          {
            "text": "- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"
          },
          {
            "text": "- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"
          },
          {
            "text": "  both `true`, then `areInIncreasingOrder(a, c)` is also"
          },
          {
            "text": "  `true`. (Transitive comparability)"
          },
          {
            "text": "- Two elements are *incomparable* if neither is ordered before the other"
          },
          {
            "text": "  according to the predicate. If `a` and `b` are incomparable, and `b`"
          },
          {
            "text": "  and `c` are incomparable, then `a` and `c` are also incomparable."
          },
          {
            "text": "  (Transitive incomparability)"
          },
          {
            "text": ""
          },
          {
            "text": "The following example uses an enumeration of playing cards ranks, `Rank`,"
          },
          {
            "text": "which ranges from `ace` (low) to `king` (high). An asynchronous sequence"
          },
          {
            "text": "called `RankCounter` produces all elements of the array. The predicate"
          },
          {
            "text": "provided to the `max(by:)` method sorts ranks based on their `rawValue`:"
          },
          {
            "text": ""
          },
          {
            "text": "    enum Rank: Int {"
          },
          {
            "text": "        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"
          },
          {
            "text": "    }"
          },
          {
            "text": ""
          },
          {
            "text": "    let max = await RankCounter()"
          },
          {
            "text": "        .max { $0.rawValue < $1.rawValue }"
          },
          {
            "text": "    print(max ?? \"none\")"
          },
          {
            "text": "    // Prints \"king\""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter areInIncreasingOrder: A predicate that returns `true` if its"
          },
          {
            "text": "  first argument should be ordered before its second argument; otherwise,"
          },
          {
            "text": "  `false`."
          },
          {
            "text": "- Returns: The sequence’s minimum element, according to"
          },
          {
            "text": "  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "by",
            "internalName": "areInIncreasingOrder",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "areInIncreasingOrder"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ", "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@warn_unqualified_access"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "max"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "by"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "areInIncreasingOrder"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": "?"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV5EventO7removedyAEyx_GAGmAA0B0RzlF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "Event",
        "removed"
      ],
      "names": {
        "title": "AnchorUpdate.Event.removed",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "removed"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The anchor was removed."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "removed"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "MeshClassification"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "MeshClassification"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A value describing the classification of a mesh face of a MeshAnchor.Geometry."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "MeshClassification"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV2id10Foundation4UUIDVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "id"
      ],
      "names": {
        "title": "id",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "id"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "UUID",
            "preciseIdentifier": "s:10Foundation4UUIDV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The unique identifier of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "id"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO25ringFingerIntermediateTipyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "ringFingerIntermediateTip"
      ],
      "names": {
        "title": "HandSkeleton.JointName.ringFingerIntermediateTip",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ringFingerIntermediateTip"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The ring finger intermediate tip joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ringFingerIntermediateTip"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit15TrackableAnchorP9isTrackedSbvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "TrackableAnchor",
        "isTracked"
      ],
      "names": {
        "title": "isTracked",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "isTracked"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Whether this anchor is currently tracked or not."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "isTracked"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC9addAnchoryyAA0bF0VYaKF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "addAnchor(_:)"
      ],
      "names": {
        "title": "addAnchor(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "addAnchor"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "WorldAnchor",
            "preciseIdentifier": "s:5ARKit11WorldAnchorV"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Add a world anchor to the world tracking provider. This anchor will be persisted across device restarts unless explicitly removed."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - worldAnchor: The world anchor to add."
          },
          {
            "text": ""
          },
          {
            "text": "- Throws: `WorldTrackingProvider.Error`"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "worldAnchor",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "worldAnchor"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "WorldAnchor",
                "preciseIdentifier": "s:5ARKit11WorldAnchorV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "addAnchor"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "worldAnchor"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "WorldAnchor",
          "preciseIdentifier": "s:5ARKit11WorldAnchorV"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV5EventO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "Event",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of AnchorUpdate.Event"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO13ringFingerTipyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "ringFingerTip"
      ],
      "names": {
        "title": "HandSkeleton.JointName.ringFingerTip",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ringFingerTip"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The ring finger tip joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ringFingerTip"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV8GeometryV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Geometry",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this geometry."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO22littleFingerMetacarpalyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "littleFingerMetacarpal"
      ],
      "names": {
        "title": "HandSkeleton.JointName.littleFingerMetacarpal",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "littleFingerMetacarpal"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The little finger metacarpal joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "littleFingerMetacarpal"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV13failureReasonSSSgvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "failureReason"
      ],
      "names": {
        "title": "failureReason",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "failureReason"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A localized message describing the reason for the failure."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "failureReason"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": "? { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit14ReferenceImageV4nameSSSgvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ReferenceImage",
        "name"
      ],
      "names": {
        "title": "name",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "name"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The name of the reference image."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "name"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": "? { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "set"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "max(by:)"
      ],
      "names": {
        "title": "max(by:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "max"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "by"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns the maximum element in the asynchronous sequence, using the given"
          },
          {
            "text": "predicate as the comparison between elements."
          },
          {
            "text": ""
          },
          {
            "text": "Use this method when the asynchronous sequence's values don't conform"
          },
          {
            "text": "to `Comparable`, or when you want to apply a custom ordering to the"
          },
          {
            "text": "sequence."
          },
          {
            "text": ""
          },
          {
            "text": "The predicate must be a *strict weak ordering* over the elements. That is,"
          },
          {
            "text": "for any elements `a`, `b`, and `c`, the following conditions must hold:"
          },
          {
            "text": ""
          },
          {
            "text": "- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"
          },
          {
            "text": "- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"
          },
          {
            "text": "  both `true`, then `areInIncreasingOrder(a, c)` is also"
          },
          {
            "text": "  `true`. (Transitive comparability)"
          },
          {
            "text": "- Two elements are *incomparable* if neither is ordered before the other"
          },
          {
            "text": "  according to the predicate. If `a` and `b` are incomparable, and `b`"
          },
          {
            "text": "  and `c` are incomparable, then `a` and `c` are also incomparable."
          },
          {
            "text": "  (Transitive incomparability)"
          },
          {
            "text": ""
          },
          {
            "text": "The following example uses an enumeration of playing cards ranks, `Rank`,"
          },
          {
            "text": "which ranges from `ace` (low) to `king` (high). An asynchronous sequence"
          },
          {
            "text": "called `RankCounter` produces all elements of the array. The predicate"
          },
          {
            "text": "provided to the `max(by:)` method sorts ranks based on their `rawValue`:"
          },
          {
            "text": ""
          },
          {
            "text": "    enum Rank: Int {"
          },
          {
            "text": "        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"
          },
          {
            "text": "    }"
          },
          {
            "text": ""
          },
          {
            "text": "    let max = await RankCounter()"
          },
          {
            "text": "        .max { $0.rawValue < $1.rawValue }"
          },
          {
            "text": "    print(max ?? \"none\")"
          },
          {
            "text": "    // Prints \"king\""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter areInIncreasingOrder: A predicate that returns `true` if its"
          },
          {
            "text": "  first argument should be ordered before its second argument; otherwise,"
          },
          {
            "text": "  `false`."
          },
          {
            "text": "- Returns: The sequence’s minimum element, according to"
          },
          {
            "text": "  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "by",
            "internalName": "areInIncreasingOrder",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "areInIncreasingOrder"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ", "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@warn_unqualified_access"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "max"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "by"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "areInIncreasingOrder"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": "?"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit22PlaneDetectionProviderC13anchorUpdatesAA20AnchorUpdateSequenceVyAA0bG0VGvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneDetectionProvider",
        "anchorUpdates"
      ],
      "names": {
        "title": "anchorUpdates",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "anchorUpdates"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorUpdateSequence",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "PlaneAnchor",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "An async sequence of all anchor updates."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "anchorUpdates"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdateSequence",
          "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "PlaneAnchor",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
        },
        {
          "kind": "text",
          "spelling": "> { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV9PrimitiveO4hash4intoys6HasherVz_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "Primitive",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Hashes the essential components of this value by feeding them into the"
          },
          {
            "text": "given hasher."
          },
          {
            "text": ""
          },
          {
            "text": "Implement this method to conform to the `Hashable` protocol. The"
          },
          {
            "text": "components used for hashing must be the same as the components compared"
          },
          {
            "text": "in your type's `==` operator implementation. Call `hasher.combine(_:)`"
          },
          {
            "text": "with each of these components."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: In your implementation of `hash(into:)`,"
          },
          {
            "text": "  don't call `finalize()` on the `hasher` instance provided,"
          },
          {
            "text": "  or replace it with a different instance."
          },
          {
            "text": "  Doing so may become a compile-time error in the future."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter hasher: The hasher to use when combining the components"
          },
          {
            "text": "  of this instance."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5stateAA04DataD5StateOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "state"
      ],
      "names": {
        "title": "state",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "state"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DataProviderState",
            "preciseIdentifier": "s:5ARKit17DataProviderStateO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The state of this world tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "state"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DataProviderState",
          "preciseIdentifier": "s:5ARKit17DataProviderStateO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_skeleton_definition",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_skeleton_definition"
      ],
      "names": {
        "title": "OS_ar_skeleton_definition",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_skeleton_definition"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_skeleton_definition"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_skeleton_definition"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21ImageTrackingProviderC13anchorUpdatesAA20AnchorUpdateSequenceVyAA0bG0VGvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageTrackingProvider",
        "anchorUpdates"
      ],
      "names": {
        "title": "anchorUpdates",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "anchorUpdates"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorUpdateSequence",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ImageAnchor",
            "preciseIdentifier": "s:5ARKit11ImageAnchorV"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "An async sequence of all anchor updates."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "anchorUpdates"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdateSequence",
          "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ImageAnchor",
          "preciseIdentifier": "s:5ARKit11ImageAnchorV"
        },
        {
          "kind": "text",
          "spelling": "> { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_hand_anchor",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_hand_anchor"
      ],
      "names": {
        "title": "OS_ar_hand_anchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_hand_anchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_hand_anchor"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_hand_anchor"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "OS_ar_trackable_anchor",
          "preciseIdentifier": "c:objc(pl)OS_ar_trackable_anchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO19littleFingerKnuckleyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "littleFingerKnuckle"
      ],
      "names": {
        "title": "HandSkeleton.JointName.littleFingerKnuckle",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "littleFingerKnuckle"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The little finger knuckle joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "littleFingerKnuckle"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV8GeometryV6extentAE6ExtentVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Geometry",
        "extent"
      ],
      "names": {
        "title": "extent",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "extent"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "PlaneAnchor",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Geometry",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV8GeometryV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Extent",
            "preciseIdentifier": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the extent of the plane geomery."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "extent"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "PlaneAnchor",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Geometry",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV8GeometryV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Extent",
          "preciseIdentifier": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.init",
        "displayName": "Initializer"
      },
      "identifier": {
        "precise": "s:5ARKit20HandTrackingProviderCACycfc",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandTrackingProvider",
        "init()"
      ],
      "names": {
        "title": "init()",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "init"
          },
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Create a hand tracking provider."
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: The hand tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "init"
        },
        {
          "kind": "text",
          "spelling": "()"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO28littleFingerIntermediateBaseyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "littleFingerIntermediateBase"
      ],
      "names": {
        "title": "HandSkeleton.JointName.littleFingerIntermediateBase",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "littleFingerIntermediateBase"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The little finger intermediate base joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "littleFingerIntermediateBase"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO5plantyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "plant"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.plant",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "plant"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "plant"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO27littleFingerIntermediateTipyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "littleFingerIntermediateTip"
      ],
      "names": {
        "title": "HandSkeleton.JointName.littleFingerIntermediateTip",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "littleFingerIntermediateTip"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The little finger intermediate tip joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "littleFingerIntermediateTip"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit21ImageTrackingProviderC11isSupportedSbvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageTrackingProvider",
        "isSupported"
      ],
      "names": {
        "title": "isSupported",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "isSupported"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Determines whether this device supports the image tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "isSupported"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "reduce(_:_:)"
      ],
      "names": {
        "title": "reduce(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "reduce"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ">("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ", ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns the result of combining the elements of the asynchronous sequence"
          },
          {
            "text": "using the given closure."
          },
          {
            "text": ""
          },
          {
            "text": "Use the `reduce(_:_:)` method to produce a single value from the elements of"
          },
          {
            "text": "an entire sequence. For example, you can use this method on an sequence of"
          },
          {
            "text": "numbers to find their sum or product."
          },
          {
            "text": ""
          },
          {
            "text": "The `nextPartialResult` closure executes sequentially with an accumulating"
          },
          {
            "text": "value initialized to `initialResult` and each element of the sequence."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `4`. The `reduce(_:_:)` method sums the values"
          },
          {
            "text": "received from the asynchronous sequence."
          },
          {
            "text": ""
          },
          {
            "text": "    let sum = await Counter(howHigh: 4)"
          },
          {
            "text": "        .reduce(0) {"
          },
          {
            "text": "            $0 + $1"
          },
          {
            "text": "        }"
          },
          {
            "text": "    print(sum)"
          },
          {
            "text": "    // Prints \"10\""
          },
          {
            "text": ""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - initialResult: The value to use as the initial accumulating value."
          },
          {
            "text": "    The `nextPartialResult` closure receives `initialResult` the first"
          },
          {
            "text": "    time the closure runs."
          },
          {
            "text": "  - nextPartialResult: A closure that combines an accumulating value and"
          },
          {
            "text": "    an element of the asynchronous sequence into a new accumulating value,"
          },
          {
            "text": "    for use in the next call of the `nextPartialResult` closure or"
          },
          {
            "text": "    returned to the caller."
          },
          {
            "text": "- Returns: The final accumulated value. If the sequence has no elements,"
          },
          {
            "text": "  the result is `initialResult`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "initialResult",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "initialResult"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Result"
              }
            ]
          },
          {
            "name": "nextPartialResult",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "nextPartialResult"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Result"
              },
              {
                "kind": "text",
                "spelling": ", "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Result"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "Result",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "reduce"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "initialResult"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "nextPartialResult"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV16errorDescriptionSSSgvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error",
        "errorDescription"
      ],
      "names": {
        "title": "errorDescription",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "errorDescription"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A localized message describing what error occurred."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "errorDescription"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": "? { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV6anchorxvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "anchor"
      ],
      "names": {
        "title": "anchor",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "let"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "anchor"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorType"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The updated anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "let"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "anchor"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this error."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.method",
        "displayName": "Type Method"
      },
      "identifier": {
        "precise": "s:5ARKit14ReferenceImageV04loadB6Images12inGroupNamed6bundleSayACGSS_So8NSBundleCSgtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ReferenceImage",
        "loadReferenceImages(inGroupNamed:bundle:)"
      ],
      "names": {
        "title": "loadReferenceImages(inGroupNamed:bundle:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "loadReferenceImages"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "inGroupNamed"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "externalParam",
            "spelling": "bundle"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bundle",
            "preciseIdentifier": "c:objc(cs)NSBundle"
          },
          {
            "kind": "text",
            "spelling": "?) -> ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ReferenceImage",
            "preciseIdentifier": "s:5ARKit14ReferenceImageV"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Load a group of reference images from a bundle."
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - inGroupNamed: The name of the reference images resource group to add."
          },
          {
            "text": "  - bundle: (Optional) The bundle containing the image file or asset catalog. If nil, search the app’s main bundle."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "inGroupNamed",
            "internalName": "groupName",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "groupName"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "String",
                "preciseIdentifier": "s:SS"
              }
            ]
          },
          {
            "name": "bundle",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "bundle"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bundle",
                "preciseIdentifier": "c:objc(cs)NSBundle"
              },
              {
                "kind": "text",
                "spelling": "?"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ReferenceImage",
            "preciseIdentifier": "s:5ARKit14ReferenceImageV"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "loadReferenceImages"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "inGroupNamed"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "groupName"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "externalParam",
          "spelling": "bundle"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bundle",
          "preciseIdentifier": "c:objc(cs)NSBundle"
        },
        {
          "kind": "text",
          "spelling": "? = nil) -> ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ReferenceImage",
          "preciseIdentifier": "s:5ARKit14ReferenceImageV"
        },
        {
          "kind": "text",
          "spelling": "]"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit20AnchorUpdateSequenceV8IteratorV4nextAA0bC0Vyqd__GSgyYaF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "Iterator",
        "next()"
      ],
      "names": {
        "title": "next()",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "next"
          },
          {
            "kind": "text",
            "spelling": "() "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorUpdateSequence",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorType"
          },
          {
            "kind": "text",
            "spelling": ">."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Iterator",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV8IteratorV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorType"
          },
          {
            "kind": "text",
            "spelling": ">."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV8IteratorV7Elementa"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Asynchronously advances to the next element and returns it, or ends the"
          },
          {
            "text": "sequence if there is no next element."
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: The next element, if it exists, or `nil` to signal the end of"
          },
          {
            "text": "  the sequence."
          }
        ]
      },
      "functionSignature": {
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorUpdateSequence",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorType"
          },
          {
            "kind": "text",
            "spelling": ">."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Iterator",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV8IteratorV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorType"
          },
          {
            "kind": "text",
            "spelling": ">."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV8IteratorV7Elementa"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 0
          },
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 1
          }
        ],
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          },
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "mutating"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "next"
        },
        {
          "kind": "text",
          "spelling": "() "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdateSequence",
          "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": ">."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Iterator",
          "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV8IteratorV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": ">."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element",
          "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV8IteratorV7Elementa"
        },
        {
          "kind": "text",
          "spelling": "?"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit17DataProviderStateO4hash4intoys6HasherVz_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProviderState",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Hashes the essential components of this value by feeding them into the"
          },
          {
            "text": "given hasher."
          },
          {
            "text": ""
          },
          {
            "text": "Implement this method to conform to the `Hashable` protocol. The"
          },
          {
            "text": "components used for hashing must be the same as the components compared"
          },
          {
            "text": "in your type's `==` operator implementation. Call `hasher.combine(_:)`"
          },
          {
            "text": "with each of these components."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: In your implementation of `hash(into:)`,"
          },
          {
            "text": "  don't call `finalize()` on the `hasher` instance provided,"
          },
          {
            "text": "  or replace it with a different instance."
          },
          {
            "text": "  Doing so may become a compile-time error in the future."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter hasher: The hasher to use when combining the components"
          },
          {
            "text": "  of this instance."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO15littleFingerTipyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "littleFingerTip"
      ],
      "names": {
        "title": "HandSkeleton.JointName.littleFingerTip",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "littleFingerTip"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The little finger tip joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "littleFingerTip"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit20HandTrackingProviderC5stateAA04DataD5StateOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandTrackingProvider",
        "state"
      ],
      "names": {
        "title": "state",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "state"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "DataProviderState",
            "preciseIdentifier": "s:5ARKit17DataProviderStateO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The state of this hand tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "state"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "DataProviderState",
          "preciseIdentifier": "s:5ARKit17DataProviderStateO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC12removeAnchor5forIDy10Foundation4UUIDV_tYaKF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "removeAnchor(forID:)"
      ],
      "names": {
        "title": "removeAnchor(forID:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "removeAnchor"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "forID"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "UUID",
            "preciseIdentifier": "s:10Foundation4UUIDV"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Remove an anchor with a given ID from world tracking."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - id: ID of the world anchor to remove."
          },
          {
            "text": ""
          },
          {
            "text": "- Throws: `WorldTrackingProvider.Error`"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "forID",
            "internalName": "id",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "id"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "UUID",
                "preciseIdentifier": "s:10Foundation4UUIDV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "removeAnchor"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "forID"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "id"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO12forearmWristyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "forearmWrist"
      ],
      "names": {
        "title": "HandSkeleton.JointName.forearmWrist",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "forearmWrist"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The wrist joint at the forearm of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "forearmWrist"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV9PrimitiveO10indexCountSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "Primitive",
        "indexCount"
      ],
      "names": {
        "title": "indexCount",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "indexCount"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The number of indices for the `Primitive`."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "indexCount"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO10forearmArmyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "forearmArm"
      ],
      "names": {
        "title": "HandSkeleton.JointName.forearmArm",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "forearmArm"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The forearm joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "forearmArm"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit22PlaneDetectionProviderC22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneDetectionProvider",
        "requiredAuthorizations"
      ],
      "names": {
        "title": "requiredAuthorizations",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "requiredAuthorizations"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The authorization type(s) required by the plane detection provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "requiredAuthorizations"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": "] { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV8GeometryV9meshFacesAA0D7ElementVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Geometry",
        "meshFaces"
      ],
      "names": {
        "title": "meshFaces",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "meshFaces"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "GeometryElement",
            "preciseIdentifier": "s:5ARKit15GeometryElementV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The faces of the plane mesh."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "meshFaces"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "GeometryElement",
          "preciseIdentifier": "s:5ARKit15GeometryElementV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this joint name."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "reduce(_:_:)"
      ],
      "names": {
        "title": "reduce(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "reduce"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ">("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ", ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns the result of combining the elements of the asynchronous sequence"
          },
          {
            "text": "using the given closure."
          },
          {
            "text": ""
          },
          {
            "text": "Use the `reduce(_:_:)` method to produce a single value from the elements of"
          },
          {
            "text": "an entire sequence. For example, you can use this method on an sequence of"
          },
          {
            "text": "numbers to find their sum or product."
          },
          {
            "text": ""
          },
          {
            "text": "The `nextPartialResult` closure executes sequentially with an accumulating"
          },
          {
            "text": "value initialized to `initialResult` and each element of the sequence."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `4`. The `reduce(_:_:)` method sums the values"
          },
          {
            "text": "received from the asynchronous sequence."
          },
          {
            "text": ""
          },
          {
            "text": "    let sum = await Counter(howHigh: 4)"
          },
          {
            "text": "        .reduce(0) {"
          },
          {
            "text": "            $0 + $1"
          },
          {
            "text": "        }"
          },
          {
            "text": "    print(sum)"
          },
          {
            "text": "    // Prints \"10\""
          },
          {
            "text": ""
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - initialResult: The value to use as the initial accumulating value."
          },
          {
            "text": "    The `nextPartialResult` closure receives `initialResult` the first"
          },
          {
            "text": "    time the closure runs."
          },
          {
            "text": "  - nextPartialResult: A closure that combines an accumulating value and"
          },
          {
            "text": "    an element of the asynchronous sequence into a new accumulating value,"
          },
          {
            "text": "    for use in the next call of the `nextPartialResult` closure or"
          },
          {
            "text": "    returned to the caller."
          },
          {
            "text": "- Returns: The final accumulated value. If the sequence has no elements,"
          },
          {
            "text": "  the result is `initialResult`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "initialResult",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "initialResult"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Result"
              }
            ]
          },
          {
            "name": "nextPartialResult",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "nextPartialResult"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Result"
              },
              {
                "kind": "text",
                "spelling": ", "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Result"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "Result",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "reduce"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "initialResult"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "nextPartialResult"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:10Foundation14LocalizedErrorPAAE10helpAnchorSSSgvp::SYNTHESIZED::s:5ARKit21WorldTrackingProviderC5ErrorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "helpAnchor"
      ],
      "names": {
        "title": "helpAnchor",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "helpAnchor"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          },
          {
            "kind": "text",
            "spelling": "?"
          }
        ]
      },
      "docComment": {
        "module": "Foundation",
        "lines": [
          {
            "text": "A localized message providing \"help\" text if the user requests help."
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Foundation",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "helpAnchor"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": "? { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 10
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 2,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 8,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 9,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit21ImageTrackingProviderC22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageTrackingProvider",
        "requiredAuthorizations"
      ],
      "names": {
        "title": "requiredAuthorizations",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "requiredAuthorizations"
          },
          {
            "kind": "text",
            "spelling": ": ["
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationType",
            "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
          },
          {
            "kind": "text",
            "spelling": "]"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The authorization type(s) required by the image tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "requiredAuthorizations"
        },
        {
          "kind": "text",
          "spelling": ": ["
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationType",
          "preciseIdentifier": "s:5ARKit0A7SessionC17AuthorizationTypeO"
        },
        {
          "kind": "text",
          "spelling": "] { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV9PrimitiveO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "Primitive",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of GeometryElement.Primitive"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV8GeometryV8verticesAA0D6SourceVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "Geometry",
        "vertices"
      ],
      "names": {
        "title": "vertices",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "vertices"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "GeometrySource",
            "preciseIdentifier": "s:5ARKit14GeometrySourceV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the vertices of the mesh."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "vertices"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "GeometrySource",
          "preciseIdentifier": "s:5ARKit14GeometrySourceV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC12removeAnchoryyAA0bF0VYaKF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "removeAnchor(_:)"
      ],
      "names": {
        "title": "removeAnchor(_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "removeAnchor"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "WorldAnchor",
            "preciseIdentifier": "s:5ARKit11WorldAnchorV"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Remove an anchor from world tracking."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - worldAnchor: The world anchor to remove."
          },
          {
            "text": ""
          },
          {
            "text": "- Throws: `WorldTrackingProvider.Error`"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "worldAnchor",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "worldAnchor"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "WorldAnchor",
                "preciseIdentifier": "s:5ARKit11WorldAnchorV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "removeAnchor"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "worldAnchor"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "WorldAnchor",
          "preciseIdentifier": "s:5ARKit11WorldAnchorV"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit17DataProviderStateO9hashValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DataProviderState",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The hash value."
          },
          {
            "text": ""
          },
          {
            "text": "Hash values are not guaranteed to be equal across different executions of"
          },
          {
            "text": "your program. Do not save hash values to use during a future execution."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: `hashValue` is deprecated as a `Hashable` requirement. To"
          },
          {
            "text": "  conform to `Hashable`, implement the `hash(into:)` requirement instead."
          },
          {
            "text": "  The compiler provides an implementation for `hashValue` for you."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV5eventAC5EventOyx_Gvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "event"
      ],
      "names": {
        "title": "event",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "let"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "event"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorUpdate",
            "preciseIdentifier": "s:5ARKit12AnchorUpdateV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorType"
          },
          {
            "kind": "text",
            "spelling": ">."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Event",
            "preciseIdentifier": "s:5ARKit12AnchorUpdateV5EventO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The event which caused the anchor to update."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "let"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "event"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdate",
          "preciseIdentifier": "s:5ARKit12AnchorUpdateV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": ">."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Event",
          "preciseIdentifier": "s:5ARKit12AnchorUpdateV5EventO"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_world_anchor",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_world_anchor"
      ],
      "names": {
        "title": "OS_ar_world_anchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_world_anchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_world_anchor"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_world_anchor"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "OS_ar_trackable_anchor",
          "preciseIdentifier": "c:objc(pl)OS_ar_trackable_anchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC19AuthorizationStatusO2eeoiySbAE_AEtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationStatus",
        "==(_:_:)"
      ],
      "names": {
        "title": "==(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "=="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationStatus",
            "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "ARKitSession",
            "preciseIdentifier": "s:5ARKit0A7SessionC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AuthorizationStatus",
            "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Returns a Boolean value indicating whether two values are equal."
          },
          {
            "text": ""
          },
          {
            "text": "Equality is the inverse of inequality. For any values `a` and `b`,"
          },
          {
            "text": "`a == b` implies that `a != b` is `false`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - lhs: A value to compare."
          },
          {
            "text": "  - rhs: Another value to compare."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "a",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "a"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "ARKitSession",
                "preciseIdentifier": "s:5ARKit0A7SessionC"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "AuthorizationStatus",
                "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
              }
            ]
          },
          {
            "name": "b",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "b"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "ARKitSession",
                "preciseIdentifier": "s:5ARKit0A7SessionC"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "AuthorizationStatus",
                "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "=="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "a"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationStatus",
          "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "b"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "ARKitSession",
          "preciseIdentifier": "s:5ARKit0A7SessionC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AuthorizationStatus",
          "preciseIdentifier": "s:5ARKit0A7SessionC19AuthorizationStatusO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO2eeoiySbAG_AGtFZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "Code",
        "==(_:_:)"
      ],
      "names": {
        "title": "==(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "=="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "WorldTrackingProvider",
            "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Error",
            "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Code",
            "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "WorldTrackingProvider",
            "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Error",
            "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Code",
            "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Returns a Boolean value indicating whether two values are equal."
          },
          {
            "text": ""
          },
          {
            "text": "Equality is the inverse of inequality. For any values `a` and `b`,"
          },
          {
            "text": "`a == b` implies that `a != b` is `false`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - lhs: A value to compare."
          },
          {
            "text": "  - rhs: Another value to compare."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "a",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "a"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "WorldTrackingProvider",
                "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Error",
                "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Code",
                "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO"
              }
            ]
          },
          {
            "name": "b",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "b"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "WorldTrackingProvider",
                "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Error",
                "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Code",
                "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "=="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "a"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "WorldTrackingProvider",
          "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Error",
          "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Code",
          "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "b"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "WorldTrackingProvider",
          "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Error",
          "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Code",
          "preciseIdentifier": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO4seatyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "seat"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.seat",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "seat"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "seat"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.type.property",
        "displayName": "Type Property"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC11isSupportedSbvpZ",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "isSupported"
      ],
      "names": {
        "title": "isSupported",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "isSupported"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Determines whether this device supports the scene reconstruction provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "isSupported"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO18indexFingerKnuckleyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "indexFingerKnuckle"
      ],
      "names": {
        "title": "HandSkeleton.JointName.indexFingerKnuckle",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "indexFingerKnuckle"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The index finger knuckle joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "indexFingerKnuckle"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC5ErrorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Error"
      ],
      "names": {
        "title": "ARKitSession.Error",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Error"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Error"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A session error."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Error"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_world_anchors",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_world_anchors"
      ],
      "names": {
        "title": "OS_ar_world_anchors",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_world_anchors"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_world_anchors"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_world_anchors"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO5tableyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "table"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.table",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "table"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "table"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_authorization_result",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_authorization_result"
      ],
      "names": {
        "title": "OS_ar_authorization_result",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_authorization_result"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_authorization_result"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_authorization_result"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "drop(while:)"
      ],
      "names": {
        "title": "drop(while:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "drop"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "while"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncDropWhileSequence",
            "preciseIdentifier": "s:12_Concurrency22AsyncDropWhileSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Omits elements from the base asynchronous sequence until a given closure"
          },
          {
            "text": "returns false, after which it passes through all remaining elements."
          },
          {
            "text": ""
          },
          {
            "text": "Use `drop(while:)` to omit elements from an asynchronous sequence until"
          },
          {
            "text": "the element received meets a condition you specify."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `drop(while:)` method causes the modified"
          },
          {
            "text": "sequence to ignore received values until it encounters one that is"
          },
          {
            "text": "divisible by `3`:"
          },
          {
            "text": ""
          },
          {
            "text": "    let stream = Counter(howHigh: 10)"
          },
          {
            "text": "        .drop { $0 % 3 != 0 }"
          },
          {
            "text": "    for await number in stream {"
          },
          {
            "text": "        print(number, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"3 4 5 6 7 8 9 10 \""
          },
          {
            "text": ""
          },
          {
            "text": "After the predicate returns `false`, the sequence never executes it again,"
          },
          {
            "text": "and from then on the sequence passes through elements from its underlying"
          },
          {
            "text": "sequence as-is."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter predicate: A closure that takes an element as a parameter and"
          },
          {
            "text": "  returns a Boolean value indicating whether to drop the element from the"
          },
          {
            "text": "  modified sequence."
          },
          {
            "text": "- Returns: An asynchronous sequence that skips over values from the"
          },
          {
            "text": "  base sequence until the provided closure returns `false`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "while",
            "internalName": "predicate",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "predicate"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncDropWhileSequence",
            "preciseIdentifier": "s:12_Concurrency22AsyncDropWhileSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "drop"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "while"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "predicate"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncDropWhileSequence",
          "preciseIdentifier": "s:12_Concurrency22AsyncDropWhileSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV9timestampSdvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "timestamp"
      ],
      "names": {
        "title": "timestamp",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "timestamp"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "TimeInterval",
            "preciseIdentifier": "c:@T@NSTimeInterval"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The timestamp of this update."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "timestamp"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "TimeInterval",
          "preciseIdentifier": "c:@T@NSTimeInterval"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.func.op",
        "displayName": "Operator"
      },
      "identifier": {
        "precise": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit11PlaneAnchorV9AlignmentO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Alignment",
        "!=(_:_:)"
      ],
      "names": {
        "title": "!=(_:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "static"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "!="
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "lhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "lhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          },
          {
            "name": "rhs",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "rhs"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "Swift",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "static"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "!="
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "internalParam",
          "spelling": "lhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "internalParam",
          "spelling": "rhs"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO7ceilingyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "ceiling"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.ceiling",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ceiling"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ceiling"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO27indexFingerIntermediateBaseyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "indexFingerIntermediateBase"
      ],
      "names": {
        "title": "HandSkeleton.JointName.indexFingerIntermediateBase",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "indexFingerIntermediateBase"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The index finger intermediate base joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "indexFingerIntermediateBase"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_hand_tracking_provider",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_hand_tracking_provider"
      ],
      "names": {
        "title": "OS_ar_hand_tracking_provider",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_hand_tracking_provider"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_hand_tracking_provider"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_hand_tracking_provider"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "OS_ar_data_provider",
          "preciseIdentifier": "c:objc(pl)OS_ar_data_provider"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV6heightSfvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Geometry",
        "Extent",
        "height"
      ],
      "names": {
        "title": "height",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "height"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Float",
            "preciseIdentifier": "s:Sf"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The height of the plane extent."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "height"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Float",
          "preciseIdentifier": "s:Sf"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit20HandTrackingProviderC13latestAnchorsAA0B6AnchorVSg04leftB0_AG05rightB0tvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandTrackingProvider",
        "latestAnchors"
      ],
      "names": {
        "title": "latestAnchors",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "latestAnchors"
          },
          {
            "kind": "text",
            "spelling": ": (leftHand"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandAnchor",
            "preciseIdentifier": "s:5ARKit10HandAnchorV"
          },
          {
            "kind": "text",
            "spelling": "?, rightHand"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandAnchor",
            "preciseIdentifier": "s:5ARKit10HandAnchorV"
          },
          {
            "kind": "text",
            "spelling": "?)"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the latest left and right hand anchor in a tuple. Anchors will be nil if the hand tracking provider is not running or"
          },
          {
            "text": "if neither hand has been tracked since the last time this variable has been accessed."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "latestAnchors"
        },
        {
          "kind": "text",
          "spelling": ": (leftHand"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandAnchor",
          "preciseIdentifier": "s:5ARKit10HandAnchorV"
        },
        {
          "kind": "text",
          "spelling": "?, rightHand"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandAnchor",
          "preciseIdentifier": "s:5ARKit10HandAnchorV"
        },
        {
          "kind": "text",
          "spelling": "?) { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_plane_detection_provider",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_plane_detection_provider"
      ],
      "names": {
        "title": "OS_ar_plane_detection_provider",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_plane_detection_provider"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_plane_detection_provider"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_plane_detection_provider"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "OS_ar_data_provider",
          "preciseIdentifier": "c:objc(pl)OS_ar_data_provider"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV8GeometryV7normalsAA0D6SourceVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "Geometry",
        "normals"
      ],
      "names": {
        "title": "normals",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "normals"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "GeometrySource",
            "preciseIdentifier": "s:5ARKit14GeometrySourceV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Get the normals of the mesh."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "normals"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "GeometrySource",
          "preciseIdentifier": "s:5ARKit14GeometrySourceV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit20AnchorUpdateSequenceV8IteratorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "Iterator"
      ],
      "names": {
        "title": "AnchorUpdateSequence.Iterator",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Iterator"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Iterator"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "An iterator over a sequence of updated anchors."
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 0
          },
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 1
          }
        ],
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          },
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Iterator"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": "> "
        },
        {
          "kind": "keyword",
          "spelling": "where"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Anchor",
          "preciseIdentifier": "s:5ARKit6AnchorP"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO26indexFingerIntermediateTipyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "indexFingerIntermediateTip"
      ],
      "names": {
        "title": "HandSkeleton.JointName.indexFingerIntermediateTip",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "indexFingerIntermediateTip"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The index finger intermediate tip joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "indexFingerIntermediateTip"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "drop(while:)"
      ],
      "names": {
        "title": "drop(while:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "drop"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "while"
          },
          {
            "kind": "text",
            "spelling": ": ("
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Bool",
            "preciseIdentifier": "s:Sb"
          },
          {
            "kind": "text",
            "spelling": ") -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncDropWhileSequence",
            "preciseIdentifier": "s:12_Concurrency22AsyncDropWhileSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Omits elements from the base asynchronous sequence until a given closure"
          },
          {
            "text": "returns false, after which it passes through all remaining elements."
          },
          {
            "text": ""
          },
          {
            "text": "Use `drop(while:)` to omit elements from an asynchronous sequence until"
          },
          {
            "text": "the element received meets a condition you specify."
          },
          {
            "text": ""
          },
          {
            "text": "In this example, an asynchronous sequence called `Counter` produces `Int`"
          },
          {
            "text": "values from `1` to `10`. The `drop(while:)` method causes the modified"
          },
          {
            "text": "sequence to ignore received values until it encounters one that is"
          },
          {
            "text": "divisible by `3`:"
          },
          {
            "text": ""
          },
          {
            "text": "    let stream = Counter(howHigh: 10)"
          },
          {
            "text": "        .drop { $0 % 3 != 0 }"
          },
          {
            "text": "    for await number in stream {"
          },
          {
            "text": "        print(number, terminator: \" \")"
          },
          {
            "text": "    }"
          },
          {
            "text": "    // Prints \"3 4 5 6 7 8 9 10 \""
          },
          {
            "text": ""
          },
          {
            "text": "After the predicate returns `false`, the sequence never executes it again,"
          },
          {
            "text": "and from then on the sequence passes through elements from its underlying"
          },
          {
            "text": "sequence as-is."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter predicate: A closure that takes an element as a parameter and"
          },
          {
            "text": "  returns a Boolean value indicating whether to drop the element from the"
          },
          {
            "text": "  modified sequence."
          },
          {
            "text": "- Returns: An asynchronous sequence that skips over values from the"
          },
          {
            "text": "  base sequence until the provided closure returns `false`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "while",
            "internalName": "predicate",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "predicate"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Bool",
                "preciseIdentifier": "s:Sb"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AsyncDropWhileSequence",
            "preciseIdentifier": "s:12_Concurrency22AsyncDropWhileSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@preconcurrency"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "drop"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "while"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "predicate"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "@escaping"
        },
        {
          "kind": "text",
          "spelling": " ("
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Bool",
          "preciseIdentifier": "s:Sb"
        },
        {
          "kind": "text",
          "spelling": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AsyncDropWhileSequence",
          "preciseIdentifier": "s:12_Concurrency22AsyncDropWhileSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO5flooryA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "floor"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.floor",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "floor"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "floor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV9PrimitiveO8triangleyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "Primitive",
        "triangle"
      ],
      "names": {
        "title": "GeometryElement.Primitive.triangle",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "triangle"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Three vertices that connect to form a triangle."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "triangle"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO4noneyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "none"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.none",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "none"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "none"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO4wallyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "wall"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.wall",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "wall"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "wall"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_scene_reconstruction_provider",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_scene_reconstruction_provider"
      ],
      "names": {
        "title": "OS_ar_scene_reconstruction_provider",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_scene_reconstruction_provider"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_scene_reconstruction_provider"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_scene_reconstruction_provider"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "OS_ar_data_provider",
          "preciseIdentifier": "c:objc(pl)OS_ar_data_provider"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO14indexFingerTipyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "indexFingerTip"
      ],
      "names": {
        "title": "HandSkeleton.JointName.indexFingerTip",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "indexFingerTip"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The index finger tip joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "indexFingerTip"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO4hash4intoys6HasherVz_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "Code",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Hashes the essential components of this value by feeding them into the"
          },
          {
            "text": "given hasher."
          },
          {
            "text": ""
          },
          {
            "text": "Implement this method to conform to the `Hashable` protocol. The"
          },
          {
            "text": "components used for hashing must be the same as the components compared"
          },
          {
            "text": "in your type's `==` operator implementation. Call `hasher.combine(_:)`"
          },
          {
            "text": "with each of these components."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: In your implementation of `hash(into:)`,"
          },
          {
            "text": "  don't call `finalize()` on the `hasher` instance provided,"
          },
          {
            "text": "  or replace it with a different instance."
          },
          {
            "text": "  Doing so may become a compile-time error in the future."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter hasher: The hasher to use when combining the components"
          },
          {
            "text": "  of this instance."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO9hashValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The hash value."
          },
          {
            "text": ""
          },
          {
            "text": "Hash values are not guaranteed to be equal across different executions of"
          },
          {
            "text": "your program. Do not save hash values to use during a future execution."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: `hashValue` is deprecated as a `Hashable` requirement. To"
          },
          {
            "text": "  conform to `Hashable`, implement the `hash(into:)` requirement instead."
          },
          {
            "text": "  The compiler provides an implementation for `hashValue` for you."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV5widthSfvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Geometry",
        "Extent",
        "width"
      ],
      "names": {
        "title": "width",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "width"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Float",
            "preciseIdentifier": "s:Sf"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The width of the plane extent."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "width"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Float",
          "preciseIdentifier": "s:Sf"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11ImageAnchorV2id10Foundation4UUIDVvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageAnchor",
        "id"
      ],
      "names": {
        "title": "id",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "id"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "UUID",
            "preciseIdentifier": "s:10Foundation4UUIDV"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The unique identifier of this anchor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "id"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "UUID",
          "preciseIdentifier": "s:10Foundation4UUIDV"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit15GeometryElementV9PrimitiveO4lineyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "GeometryElement",
        "Primitive",
        "line"
      ],
      "names": {
        "title": "GeometryElement.Primitive.line",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "line"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Two vertices that connect to form a line."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "line"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of PlaneAnchor.Classification"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO22middleFingerMetacarpalyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "middleFingerMetacarpal"
      ],
      "names": {
        "title": "HandSkeleton.JointName.middleFingerMetacarpal",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "middleFingerMetacarpal"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The middle finger metacarpal joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "middleFingerMetacarpal"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit20AnchorUpdateSequenceV8IteratorV7Elementa",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "Iterator",
        "Element"
      ],
      "names": {
        "title": "AnchorUpdateSequence.Iterator.Element",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Element"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Element"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 0
          },
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 1
          }
        ],
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          },
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdate",
          "preciseIdentifier": "s:5ARKit12AnchorUpdateV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_authorization_results",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_authorization_results"
      ],
      "names": {
        "title": "OS_ar_authorization_results",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_authorization_results"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_authorization_results"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_authorization_results"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO2tvyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "tv"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.tv",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "tv"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "tv"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "Events",
        "reduce(into:_:)"
      ],
      "names": {
        "title": "reduce(into:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "reduce"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ">("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ", ("
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Void",
            "preciseIdentifier": "s:s4Voida"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns the result of combining the elements of the asynchronous sequence"
          },
          {
            "text": "using the given closure, given a mutable initial value."
          },
          {
            "text": ""
          },
          {
            "text": "Use the `reduce(into:_:)` method to produce a single value from the"
          },
          {
            "text": "elements of an entire sequence. For example, you can use this method on a"
          },
          {
            "text": "sequence of numbers to find their sum or product."
          },
          {
            "text": ""
          },
          {
            "text": "The `nextPartialResult` closure executes sequentially with an accumulating"
          },
          {
            "text": "value initialized to `initialResult` and each element of the sequence."
          },
          {
            "text": ""
          },
          {
            "text": "Prefer this method over `reduce(_:_:)` for efficiency when the result is"
          },
          {
            "text": "a copy-on-write type, for example an `Array` or `Dictionary`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - initialResult: The value to use as the initial accumulating value."
          },
          {
            "text": "    The `nextPartialResult` closure receives `initialResult` the first"
          },
          {
            "text": "    time the closure executes."
          },
          {
            "text": "  - nextPartialResult: A closure that combines an accumulating value and"
          },
          {
            "text": "    an element of the asynchronous sequence into a new accumulating value,"
          },
          {
            "text": "    for use in the next call of the `nextPartialResult` closure or"
          },
          {
            "text": "    returned to the caller."
          },
          {
            "text": "- Returns: The final accumulated value. If the sequence has no elements,"
          },
          {
            "text": "  the result is `initialResult`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "initialResult",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "initialResult"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Result"
              }
            ]
          },
          {
            "name": "updateAccumulatingResult",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "updateAccumulatingResult"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "keyword",
                "spelling": "inout"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Result"
              },
              {
                "kind": "text",
                "spelling": ", "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Void",
                "preciseIdentifier": "s:s4Voida"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "Result",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "reduce"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "initialResult"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "updateAccumulatingResult"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Void",
          "preciseIdentifier": "s:s4Voida"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit27SceneReconstructionProviderC4ModeO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "SceneReconstructionProvider",
        "Mode"
      ],
      "names": {
        "title": "SceneReconstructionProvider.Mode",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Mode"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Mode"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Enumeration of all available scene reconstruction modes. A mesh is always generated. These are additional features."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Mode"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO19middleFingerKnuckleyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "middleFingerKnuckle"
      ],
      "names": {
        "title": "HandSkeleton.JointName.middleFingerKnuckle",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "middleFingerKnuckle"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The middle finger knuckle joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "middleFingerKnuckle"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO03addB12AnchorFailedyA2GmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "Code",
        "addWorldAnchorFailed"
      ],
      "names": {
        "title": "WorldTrackingProvider.Error.Code.addWorldAnchorFailed",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "addWorldAnchorFailed"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Adding a world anchor failed."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "addWorldAnchorFailed"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO6windowyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "window"
      ],
      "names": {
        "title": "PlaneAnchor.Classification.window",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "window"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The classification is of type window."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "window"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_plane_detection_configuration",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_plane_detection_configuration"
      ],
      "names": {
        "title": "OS_ar_plane_detection_configuration",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_plane_detection_configuration"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_plane_detection_configuration"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_plane_detection_configuration"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV5JointV4nameAC0D4NameOvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "Joint",
        "name"
      ],
      "names": {
        "title": "name",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "name"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "HandSkeleton",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "JointName",
            "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The name of this joint."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "name"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "HandSkeleton",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "JointName",
          "preciseIdentifier": "s:5ARKit12HandSkeletonV9JointNameO"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO13homeApplianceyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "homeAppliance"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.homeAppliance",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "homeAppliance"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "homeAppliance"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO4dooryA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "door"
      ],
      "names": {
        "title": "PlaneAnchor.Classification.door",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "door"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The classification is of type door."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "door"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO28middleFingerIntermediateBaseyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "middleFingerIntermediateBase"
      ],
      "names": {
        "title": "HandSkeleton.JointName.middleFingerIntermediateBase",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "middleFingerIntermediateBase"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The middle finger intermediate base joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "middleFingerIntermediateBase"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO5tableyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "table"
      ],
      "names": {
        "title": "PlaneAnchor.Classification.table",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "table"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The classification is of type table."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "table"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO23worldAnchorLimitReachedyA2GmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "Code",
        "worldAnchorLimitReached"
      ],
      "names": {
        "title": "WorldTrackingProvider.Error.Code.worldAnchorLimitReached",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "worldAnchorLimitReached"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Adding a world anchor failed  - an upper limit was reached."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "worldAnchorLimitReached"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO06removeB12AnchorFailedyA2GmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "Code",
        "removeWorldAnchorFailed"
      ],
      "names": {
        "title": "WorldTrackingProvider.Error.Code.removeWorldAnchorFailed",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "removeWorldAnchorFailed"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Removing a world anchor failed."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "removeWorldAnchorFailed"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.typealias",
        "displayName": "Type Alias"
      },
      "identifier": {
        "precise": "s:5ARKit20AnchorUpdateSequenceV7Elementa",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "Element"
      ],
      "names": {
        "title": "AnchorUpdateSequence.Element",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Element"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "typealias"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Element"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "The type of element produced by this asynchronous sequence."
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 0
          }
        ],
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "typealias"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": " = "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdate",
          "preciseIdentifier": "s:5ARKit12AnchorUpdateV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "WorldTrackingProvider",
        "Error",
        "Code",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of the code."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_skeleton",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_skeleton"
      ],
      "names": {
        "title": "OS_ar_skeleton",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_skeleton"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_skeleton"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_skeleton"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO27middleFingerIntermediateTipyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "middleFingerIntermediateTip"
      ],
      "names": {
        "title": "HandSkeleton.JointName.middleFingerIntermediateTip",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "middleFingerIntermediateTip"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The middle finger intermediate tip joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "middleFingerIntermediateTip"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO4seatyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "seat"
      ],
      "names": {
        "title": "PlaneAnchor.Classification.seat",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "seat"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The classification is of type seat."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "seat"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO7cabinetyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "cabinet"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.cabinet",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "cabinet"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "cabinet"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "s:5ARKit15TrackableAnchorP",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "TrackableAnchor"
      ],
      "names": {
        "title": "TrackableAnchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "TrackableAnchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "TrackableAnchor"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Protocol for trackable anchors."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "TrackableAnchor"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Anchor",
          "preciseIdentifier": "s:5ARKit6AnchorP"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO15middleFingerTipyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "middleFingerTip"
      ],
      "names": {
        "title": "HandSkeleton.JointName.middleFingerTip",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "middleFingerTip"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The middle finger tip joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "middleFingerTip"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_hand_tracking_configuration",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_hand_tracking_configuration"
      ],
      "names": {
        "title": "OS_ar_hand_tracking_configuration",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_hand_tracking_configuration"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_hand_tracking_configuration"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_hand_tracking_configuration"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC19AuthorizationStatusO4hash4intoys6HasherVz_tF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationStatus",
        "hash(into:)"
      ],
      "names": {
        "title": "hash(into:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hash"
          },
          {
            "kind": "text",
            "spelling": "("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Hasher",
            "preciseIdentifier": "s:s6HasherV"
          },
          {
            "kind": "text",
            "spelling": ")"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "Hashes the essential components of this value by feeding them into the"
          },
          {
            "text": "given hasher."
          },
          {
            "text": ""
          },
          {
            "text": "Implement this method to conform to the `Hashable` protocol. The"
          },
          {
            "text": "components used for hashing must be the same as the components compared"
          },
          {
            "text": "in your type's `==` operator implementation. Call `hasher.combine(_:)`"
          },
          {
            "text": "with each of these components."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: In your implementation of `hash(into:)`,"
          },
          {
            "text": "  don't call `finalize()` on the `hasher` instance provided,"
          },
          {
            "text": "  or replace it with a different instance."
          },
          {
            "text": "  Doing so may become a compile-time error in the future."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameter hasher: The hasher to use when combining the components"
          },
          {
            "text": "  of this instance."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "hasher",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "hasher"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Hasher",
                "preciseIdentifier": "s:s6HasherV"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "text",
            "spelling": "()"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hash"
        },
        {
          "kind": "text",
          "spelling": "("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "hasher"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Hasher",
          "preciseIdentifier": "s:s6HasherV"
        },
        {
          "kind": "text",
          "spelling": ")"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO7ceilingyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "ceiling"
      ],
      "names": {
        "title": "PlaneAnchor.Classification.ceiling",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ceiling"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The classification is of type ceiling."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ceiling"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO3bedyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "bed"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.bed",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "bed"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "bed"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this update."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO6stairsyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "stairs"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.stairs",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "stairs"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "stairs"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:5ARKit20AnchorUpdateSequenceV17makeAsyncIteratorAC0G0Vyx_xGyF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "makeAsyncIterator()"
      ],
      "names": {
        "title": "makeAsyncIterator()",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "makeAsyncIterator"
          },
          {
            "kind": "text",
            "spelling": "() -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorUpdateSequence",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorType"
          },
          {
            "kind": "text",
            "spelling": ">."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Iterator",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV8IteratorV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorType"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Creates the asynchronous iterator that produces elements of this"
          },
          {
            "text": "asynchronous sequence."
          },
          {
            "text": ""
          },
          {
            "text": "- Returns: An instance of the `AsyncIterator` type used to produce"
          },
          {
            "text": "elements of the asynchronous sequence."
          }
        ]
      },
      "functionSignature": {
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorUpdateSequence",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorType"
          },
          {
            "kind": "text",
            "spelling": ">."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Iterator",
            "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV8IteratorV"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "typeIdentifier",
            "spelling": "AnchorType"
          },
          {
            "kind": "text",
            "spelling": ">"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 0
          }
        ],
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "makeAsyncIterator"
        },
        {
          "kind": "text",
          "spelling": "() -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorUpdateSequence",
          "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": ">."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Iterator",
          "preciseIdentifier": "s:5ARKit20AnchorUpdateSequenceV8IteratorV"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "typeIdentifier",
          "spelling": "AnchorType"
        },
        {
          "kind": "text",
          "spelling": ">"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO20ringFingerMetacarpalyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "ringFingerMetacarpal"
      ],
      "names": {
        "title": "HandSkeleton.JointName.ringFingerMetacarpal",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ringFingerMetacarpal"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The ring finger metacarpal joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ringFingerMetacarpal"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_data_provider",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_data_provider"
      ],
      "names": {
        "title": "OS_ar_data_provider",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_data_provider"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_data_provider"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_data_provider"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.method",
        "displayName": "Instance Method"
      },
      "identifier": {
        "precise": "s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdateSequence",
        "reduce(into:_:)"
      ],
      "names": {
        "title": "reduce(into:_:)",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "func"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "reduce"
          },
          {
            "kind": "text",
            "spelling": "<"
          },
          {
            "kind": "genericParameter",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ">("
          },
          {
            "kind": "externalParam",
            "spelling": "into"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ", ("
          },
          {
            "kind": "keyword",
            "spelling": "inout"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          },
          {
            "kind": "text",
            "spelling": ", "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Self"
          },
          {
            "kind": "text",
            "spelling": "."
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Element"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "throws"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Void",
            "preciseIdentifier": "s:s4Voida"
          },
          {
            "kind": "text",
            "spelling": ") "
          },
          {
            "kind": "keyword",
            "spelling": "async"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "keyword",
            "spelling": "rethrows"
          },
          {
            "kind": "text",
            "spelling": " -> "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          }
        ]
      },
      "docComment": {
        "module": "_Concurrency",
        "lines": [
          {
            "text": "Returns the result of combining the elements of the asynchronous sequence"
          },
          {
            "text": "using the given closure, given a mutable initial value."
          },
          {
            "text": ""
          },
          {
            "text": "Use the `reduce(into:_:)` method to produce a single value from the"
          },
          {
            "text": "elements of an entire sequence. For example, you can use this method on a"
          },
          {
            "text": "sequence of numbers to find their sum or product."
          },
          {
            "text": ""
          },
          {
            "text": "The `nextPartialResult` closure executes sequentially with an accumulating"
          },
          {
            "text": "value initialized to `initialResult` and each element of the sequence."
          },
          {
            "text": ""
          },
          {
            "text": "Prefer this method over `reduce(_:_:)` for efficiency when the result is"
          },
          {
            "text": "a copy-on-write type, for example an `Array` or `Dictionary`."
          },
          {
            "text": ""
          },
          {
            "text": "- Parameters:"
          },
          {
            "text": "  - initialResult: The value to use as the initial accumulating value."
          },
          {
            "text": "    The `nextPartialResult` closure receives `initialResult` the first"
          },
          {
            "text": "    time the closure executes."
          },
          {
            "text": "  - nextPartialResult: A closure that combines an accumulating value and"
          },
          {
            "text": "    an element of the asynchronous sequence into a new accumulating value,"
          },
          {
            "text": "    for use in the next call of the `nextPartialResult` closure or"
          },
          {
            "text": "    returned to the caller."
          },
          {
            "text": "- Returns: The final accumulated value. If the sequence has no elements,"
          },
          {
            "text": "  the result is `initialResult`."
          }
        ]
      },
      "functionSignature": {
        "parameters": [
          {
            "name": "into",
            "internalName": "initialResult",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "initialResult"
              },
              {
                "kind": "text",
                "spelling": ": "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Result"
              }
            ]
          },
          {
            "name": "updateAccumulatingResult",
            "declarationFragments": [
              {
                "kind": "identifier",
                "spelling": "updateAccumulatingResult"
              },
              {
                "kind": "text",
                "spelling": ": ("
              },
              {
                "kind": "keyword",
                "spelling": "inout"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Result"
              },
              {
                "kind": "text",
                "spelling": ", "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Self"
              },
              {
                "kind": "text",
                "spelling": "."
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Element"
              },
              {
                "kind": "text",
                "spelling": ") "
              },
              {
                "kind": "keyword",
                "spelling": "async"
              },
              {
                "kind": "text",
                "spelling": " "
              },
              {
                "kind": "keyword",
                "spelling": "throws"
              },
              {
                "kind": "text",
                "spelling": " -> "
              },
              {
                "kind": "typeIdentifier",
                "spelling": "Void",
                "preciseIdentifier": "s:s4Voida"
              }
            ]
          }
        ],
        "returns": [
          {
            "kind": "typeIdentifier",
            "spelling": "Result"
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "Result",
            "index": 0,
            "depth": 1
          }
        ]
      },
      "swiftExtension": {
        "extendedModule": "_Concurrency",
        "typeKind": "swift.protocol"
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "func"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "reduce"
        },
        {
          "kind": "text",
          "spelling": "<"
        },
        {
          "kind": "genericParameter",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ">("
        },
        {
          "kind": "externalParam",
          "spelling": "into"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "initialResult"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "externalParam",
          "spelling": "_"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "internalParam",
          "spelling": "updateAccumulatingResult"
        },
        {
          "kind": "text",
          "spelling": ": ("
        },
        {
          "kind": "keyword",
          "spelling": "inout"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        },
        {
          "kind": "text",
          "spelling": ", "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Self"
        },
        {
          "kind": "text",
          "spelling": "."
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Element"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "throws"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Void",
          "preciseIdentifier": "s:s4Voida"
        },
        {
          "kind": "text",
          "spelling": ") "
        },
        {
          "kind": "keyword",
          "spelling": "async"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "rethrows"
        },
        {
          "kind": "text",
          "spelling": " -> "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Result"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "macOS",
          "introduced": {
            "major": 10,
            "minor": 15
          }
        },
        {
          "domain": "watchOS",
          "introduced": {
            "major": 6,
            "minor": 0
          }
        },
        {
          "domain": "iOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        },
        {
          "domain": "tvOS",
          "introduced": {
            "major": 13,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO4wallyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "wall"
      ],
      "names": {
        "title": "PlaneAnchor.Classification.wall",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "wall"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The classification is of type wall."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "wall"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit22PlaneDetectionProviderC11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneDetectionProvider",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this plane detection provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV5JointV010parentFromD9TransformSo13simd_float4x4avp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "Joint",
        "parentFromJointTransform"
      ],
      "names": {
        "title": "parentFromJointTransform",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "parentFromJointTransform"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "simd_float4x4",
            "preciseIdentifier": "c:@SA@simd_float4x4"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The transform from the joint to the parent joint coordinate system."
          },
          {
            "text": "Note: The root joint's parentFromJointTransform is an identity matrix."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "parentFromJointTransform"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "simd_float4x4",
          "preciseIdentifier": "c:@SA@simd_float4x4"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO4dooryA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "door"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.door",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "door"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "door"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit21ImageTrackingProviderC11descriptionSSvp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ImageTrackingProvider",
        "description"
      ],
      "names": {
        "title": "description",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "description"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "String",
            "preciseIdentifier": "s:SS"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "A textual representation of this image tracking provider."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "final"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "description"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "String",
          "preciseIdentifier": "s:SS"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum",
        "displayName": "Enumeration"
      },
      "identifier": {
        "precise": "s:5ARKit12AnchorUpdateV5EventO",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "AnchorUpdate",
        "Event"
      ],
      "names": {
        "title": "AnchorUpdate.Event",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "Event"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "enum"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "Event"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Event indicating if this anchor was added, updated, or removed."
          }
        ]
      },
      "swiftGenerics": {
        "parameters": [
          {
            "name": "AnchorType",
            "index": 0,
            "depth": 0
          }
        ],
        "constraints": [
          {
            "kind": "conformance",
            "lhs": "AnchorType",
            "rhs": "Anchor",
            "rhsPrecise": "s:5ARKit6AnchorP"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "attribute",
          "spelling": "@frozen"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "keyword",
          "spelling": "enum"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "Event"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit12HandSkeletonV9JointNameO17ringFingerKnuckleyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "HandSkeleton",
        "JointName",
        "ringFingerKnuckle"
      ],
      "names": {
        "title": "HandSkeleton.JointName.ringFingerKnuckle",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "ringFingerKnuckle"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The ring finger knuckle joint of a hand skeleton."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "ringFingerKnuckle"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.protocol",
        "displayName": "Protocol"
      },
      "identifier": {
        "precise": "c:objc(pl)OS_ar_session",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "OS_ar_session"
      ],
      "names": {
        "title": "OS_ar_session",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "OS_ar_session"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "protocol"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "OS_ar_session"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "protocol"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "OS_ar_session"
        },
        {
          "kind": "text",
          "spelling": " : "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "NSObjectProtocol",
          "preciseIdentifier": "c:objc(pl)NSObject"
        }
      ],
      "accessLevel": "public"
    },
    {
      "kind": {
        "identifier": "swift.property",
        "displayName": "Instance Property"
      },
      "identifier": {
        "precise": "s:5ARKit0A7SessionC19AuthorizationStatusO9hashValueSivp",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "ARKitSession",
        "AuthorizationStatus",
        "hashValue"
      ],
      "names": {
        "title": "hashValue",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "var"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "hashValue"
          },
          {
            "kind": "text",
            "spelling": ": "
          },
          {
            "kind": "typeIdentifier",
            "spelling": "Int",
            "preciseIdentifier": "s:Si"
          }
        ]
      },
      "docComment": {
        "module": "Swift",
        "lines": [
          {
            "text": "The hash value."
          },
          {
            "text": ""
          },
          {
            "text": "Hash values are not guaranteed to be equal across different executions of"
          },
          {
            "text": "your program. Do not save hash values to use during a future execution."
          },
          {
            "text": ""
          },
          {
            "text": "- Important: `hashValue` is deprecated as a `Hashable` requirement. To"
          },
          {
            "text": "  conform to `Hashable`, implement the `hash(into:)` requirement instead."
          },
          {
            "text": "  The compiler provides an implementation for `hashValue` for you."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "var"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "hashValue"
        },
        {
          "kind": "text",
          "spelling": ": "
        },
        {
          "kind": "typeIdentifier",
          "spelling": "Int",
          "preciseIdentifier": "s:Si"
        },
        {
          "kind": "text",
          "spelling": " { "
        },
        {
          "kind": "keyword",
          "spelling": "get"
        },
        {
          "kind": "text",
          "spelling": " }"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit11PlaneAnchorV14ClassificationO5flooryA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "PlaneAnchor",
        "Classification",
        "floor"
      ],
      "names": {
        "title": "PlaneAnchor.Classification.floor",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "floor"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "The classification is of type floor."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "floor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.enum.case",
        "displayName": "Case"
      },
      "identifier": {
        "precise": "s:5ARKit10MeshAnchorV0B14ClassificationO6windowyA2EmF",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "MeshAnchor",
        "MeshClassification",
        "window"
      ],
      "names": {
        "title": "MeshAnchor.MeshClassification.window",
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "case"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "window"
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "case"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "window"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    },
    {
      "kind": {
        "identifier": "swift.struct",
        "displayName": "Structure"
      },
      "identifier": {
        "precise": "s:5ARKit12DeviceAnchorV",
        "interfaceLanguage": "swift"
      },
      "pathComponents": [
        "DeviceAnchor"
      ],
      "names": {
        "title": "DeviceAnchor",
        "navigator": [
          {
            "kind": "identifier",
            "spelling": "DeviceAnchor"
          }
        ],
        "subHeading": [
          {
            "kind": "keyword",
            "spelling": "struct"
          },
          {
            "kind": "text",
            "spelling": " "
          },
          {
            "kind": "identifier",
            "spelling": "DeviceAnchor"
          }
        ]
      },
      "docComment": {
        "module": "ARKit",
        "lines": [
          {
            "text": "Represents the Vision device which the user is wearing."
          }
        ]
      },
      "declarationFragments": [
        {
          "kind": "keyword",
          "spelling": "struct"
        },
        {
          "kind": "text",
          "spelling": " "
        },
        {
          "kind": "identifier",
          "spelling": "DeviceAnchor"
        }
      ],
      "accessLevel": "public",
      "availability": [
        {
          "domain": "visionOS",
          "introduced": {
            "major": 1,
            "minor": 0
          }
        }
      ]
    }
  ],
  "relationships": [
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12AnchorUpdateV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_pose",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV4CodeO",
      "target": "s:5ARKit0A7SessionC5ErrorV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC12removeAnchoryyAA0bF0VYaKF",
      "target": "s:5ARKit21WorldTrackingProviderC"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF",
        "displayName": "AsyncSequence.flatMap(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF",
        "displayName": "AsyncSequence.first(where:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF",
        "displayName": "AsyncSequence.first(where:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO",
      "target": "s:5ARKit11PlaneAnchorV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO",
      "target": "s:5ARKit12HandSkeletonV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12AnchorUpdateV5EventO9hashValueSivp",
      "target": "s:5ARKit12AnchorUpdateV5EventO",
      "sourceOrigin": {
        "identifier": "s:SH9hashValueSivp",
        "displayName": "Hashable.hashValue"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF",
        "displayName": "AsyncSequence.flatMap(_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11ImageAnchorV",
      "target": "s:5ARKit6AnchorP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV5JointV06parentD0AESgvp",
      "target": "s:5ARKit12HandSkeletonV5JointV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12AnchorUpdateV5EventO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable",
      "swiftConstraints": [
        {
          "kind": "conformance",
          "lhs": "AnchorType",
          "rhs": "Anchor",
          "rhsPrecise": "s:5ARKit6AnchorP"
        }
      ]
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO",
      "target": "s:5ARKit15GeometryElementV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11ImageAnchorV",
      "target": "s:s12IdentifiableP",
      "targetFallback": "Swift.Identifiable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10MeshAnchorV8GeometryV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC12removeAnchor5forIDy10Foundation4UUIDV_tYaKF",
      "target": "s:5ARKit21WorldTrackingProviderC"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV9AlignmentO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC5ErrorV4CodeO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10HandAnchorV",
      "target": "s:5ARKit15TrackableAnchorP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV18recoverySuggestionSSSgvp",
      "target": "s:5ARKit0A7SessionC5ErrorV",
      "sourceOrigin": {
        "identifier": "s:10Foundation14LocalizedErrorP18recoverySuggestionSSSgvp",
        "displayName": "LocalizedError.recoverySuggestion"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14GeometrySourceV19componentsPerVectorSivp",
      "target": "s:5ARKit14GeometrySourceV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14ReferenceImageV11pixelBuffer12physicalSize11orientationACSo11CVBufferRefa_So6CGSizeVSo26CGImagePropertyOrientationVtcfc",
      "target": "s:5ARKit14ReferenceImageV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14GeometrySourceV6formatSo15MTLVertexFormatVvp",
      "target": "s:5ARKit14GeometrySourceV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV9ChiralityO9hashValueSivp",
      "target": "s:5ARKit10HandAnchorV9ChiralityO",
      "sourceOrigin": {
        "identifier": "s:SH9hashValueSivp",
        "displayName": "Hashable.hashValue"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV5JointV",
      "target": "s:5ARKit12HandSkeletonV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5stateAA04DataD5StateOvp",
      "target": "s:5ARKit21WorldTrackingProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP5stateAA0bC5StateOvp",
        "displayName": "DataProvider.state"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV13bytesPerIndexSivp",
      "target": "s:5ARKit15GeometryElementV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10MeshAnchorV8GeometryV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC17AuthorizationTypeO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV",
      "target": "s:5ARKit0A7SessionC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14GeometrySourceV6offsetSivp",
      "target": "s:5ARKit14GeometrySourceV"
    },
    {
      "kind": "memberOf",
      "source": "s:10Foundation14LocalizedErrorPAAE10helpAnchorSSSgvp::SYNTHESIZED::s:5ARKit0A7SessionC5ErrorV",
      "target": "s:5ARKit0A7SessionC5ErrorV",
      "sourceOrigin": {
        "identifier": "s:10Foundation14LocalizedErrorP10helpAnchorSSSgvp",
        "displayName": "LocalizedError.helpAnchor"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV11descriptionSSvp",
      "target": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit27SceneReconstructionProviderC4ModeO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_reference_images",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable"
    },
    {
      "kind": "memberOf",
      "source": "s:10Foundation14LocalizedErrorPAAE10helpAnchorSSSgvp::SYNTHESIZED::s:5ARKit21WorldTrackingProviderC5ErrorV",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV",
      "sourceOrigin": {
        "identifier": "s:10Foundation14LocalizedErrorP10helpAnchorSSSgvp",
        "displayName": "LocalizedError.helpAnchor"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV9ChiralityO4hash4intoys6HasherVz_tF",
      "target": "s:5ARKit10HandAnchorV9ChiralityO",
      "sourceOrigin": {
        "identifier": "s:SH4hash4intoys6HasherVz_tF",
        "displayName": "Hashable.hash(into:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12AnchorUpdateV5EventO2eeoiySbAEyx_G_AGtFZ",
      "target": "s:5ARKit12AnchorUpdateV5EventO",
      "sourceOrigin": {
        "identifier": "s:SQ2eeoiySbx_xtFZ",
        "displayName": "Equatable.==(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF",
        "displayName": "AsyncSequence.flatMap(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF",
        "displayName": "AsyncSequence.flatMap(_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_reference_image",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14ReferenceImageV12physicalSizeSo6CGSizeVvp",
      "target": "s:5ARKit14ReferenceImageV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12HandSkeletonV9JointNameO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14GeometrySourceV6strideSivp",
      "target": "s:5ARKit14GeometrySourceV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12AnchorUpdateV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC9addAnchoryyAA0bF0VYaKF",
      "target": "s:5ARKit21WorldTrackingProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV5JointV010anchorFromD9TransformSo13simd_float4x4avp",
      "target": "s:5ARKit12HandSkeletonV5JointV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12AnchorUpdateV5EventO4hash4intoys6HasherVz_tF",
      "target": "s:5ARKit12AnchorUpdateV5EventO",
      "sourceOrigin": {
        "identifier": "s:SH4hash4intoys6HasherVz_tF",
        "displayName": "Hashable.hash(into:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF",
        "displayName": "AsyncSequence.prefix(while:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV11descriptionSSvp",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF",
        "displayName": "AsyncSequence.prefix(while:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV5countSivp",
      "target": "s:5ARKit15GeometryElementV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO8rawValueSivp",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO",
      "sourceOrigin": {
        "identifier": "s:SY8rawValue03RawB0Qzvp",
        "displayName": "RawRepresentable.rawValue"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV12dataProviderAA04DataE0_pSgvp",
      "target": "s:5ARKit0A7SessionC5ErrorV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14GeometrySourceV11descriptionSSvp",
      "target": "s:5ARKit14GeometrySourceV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_plane_anchors",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV4codeAE4CodeOvp",
      "target": "s:5ARKit0A7SessionC5ErrorV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV11descriptionSSvp",
      "target": "s:5ARKit10MeshAnchorV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV",
      "target": "s:5ARKit11PlaneAnchorV8GeometryV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12HandSkeletonV5JointV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14GeometrySourceV6bufferSo9MTLBuffer_pvp",
      "target": "s:5ARKit14GeometrySourceV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC5EventO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_image_anchor",
      "target": "c:objc(pl)OS_ar_anchor"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_hand_anchor",
      "target": "c:objc(pl)OS_ar_trackable_anchor"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10HandAnchorV9ChiralityO",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV9AlignmentO4hash4intoys6HasherVz_tF",
      "target": "s:5ARKit11PlaneAnchorV9AlignmentO",
      "sourceOrigin": {
        "identifier": "s:SH4hash4intoys6HasherVz_tF",
        "displayName": "Hashable.hash(into:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO2eeoiySbAG_AGtFZ",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
      "sourceOrigin": {
        "identifier": "s:SQ2eeoiySbx_xtFZ",
        "displayName": "Equatable.==(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV5JointV9isTrackedSbvp",
      "target": "s:5ARKit12HandSkeletonV5JointV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11WorldAnchorV",
      "target": "s:5ARKit15TrackableAnchorP"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21ImageTrackingProviderC",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV5JointV11descriptionSSvp",
      "target": "s:5ARKit12HandSkeletonV5JointV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11ImageAnchorV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV9ChiralityO",
      "target": "s:5ARKit10HandAnchorV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10HandAnchorV9ChiralityO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV9AlignmentO9hashValueSivp",
      "target": "s:5ARKit11PlaneAnchorV9AlignmentO",
      "sourceOrigin": {
        "identifier": "s:SH9hashValueSivp",
        "displayName": "Hashable.hashValue"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO8rawValueAESgSi_tcfc",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO",
      "sourceOrigin": {
        "identifier": "s:SY8rawValuexSg03RawB0Qz_tcfc",
        "displayName": "RawRepresentable.init(rawValue:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO4hash4intoys6HasherVz_tF",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
      "sourceOrigin": {
        "identifier": "s:SH4hash4intoys6HasherVz_tF",
        "displayName": "Hashable.hash(into:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12HandSkeletonV9JointNameO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV9ChiralityO2eeoiySbAE_AEtFZ",
      "target": "s:5ARKit10HandAnchorV9ChiralityO",
      "sourceOrigin": {
        "identifier": "s:SQ2eeoiySbx_xtFZ",
        "displayName": "Equatable.==(_:_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_plane_anchor",
      "target": "c:objc(pl)OS_ar_anchor"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV12meshVerticesAA0D6SourceVvp",
      "target": "s:5ARKit11PlaneAnchorV8GeometryV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO2eeoiySbAE_AEtFZ",
      "target": "s:5ARKit0A7SessionC19AuthorizationStatusO",
      "sourceOrigin": {
        "identifier": "s:SQ2eeoiySbx_xtFZ",
        "displayName": "Equatable.==(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO9hashValueSivp",
      "target": "s:5ARKit0A7SessionC19AuthorizationStatusO",
      "sourceOrigin": {
        "identifier": "s:SH9hashValueSivp",
        "displayName": "Hashable.hashValue"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO11descriptionSSvp",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF",
        "displayName": "AsyncSequence.min(by:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV8geometryAC8GeometryVvp",
      "target": "s:5ARKit11PlaneAnchorV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO06removeB12AnchorFailedyA2GmF",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF",
        "displayName": "AsyncSequence.min(by:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11ImageAnchorV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21ImageTrackingProviderC",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_plane_anchor",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC6EventsV17makeAsyncIteratorAE0F0VyF",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci17makeAsyncIterator0bC0QzyF",
        "displayName": "AsyncSequence.makeAsyncIterator()"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14GeometrySourceV5countSivp",
      "target": "s:5ARKit14GeometrySourceV"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF",
        "displayName": "AsyncSequence.prefix(_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12HandSkeletonV9JointNameO",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF",
        "displayName": "AsyncSequence.prefix(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC6EventsV7Elementa",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci7ElementQa",
        "displayName": "AsyncSequence.Element"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO23worldAnchorLimitReachedyA2GmF",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_world_anchor",
      "target": "c:objc(pl)OS_ar_trackable_anchor"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO4hash4intoys6HasherVz_tF",
      "target": "s:5ARKit0A7SessionC19AuthorizationStatusO",
      "sourceOrigin": {
        "identifier": "s:SH4hash4intoys6HasherVz_tF",
        "displayName": "Hashable.hash(into:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit17DataProviderStateO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO03addB12AnchorFailedyA2GmF",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14ReferenceImageV11descriptionSSvp",
      "target": "s:5ARKit14ReferenceImageV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_scene_reconstruction_configuration",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_mesh_geometry",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12HandSkeletonV5JointV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC5EventO",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV8GeometryV",
      "target": "s:5ARKit10MeshAnchorV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV9ChiralityO11descriptionSSvp",
      "target": "s:5ARKit10HandAnchorV9ChiralityO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV11descriptionSSvp",
      "target": "s:5ARKit11PlaneAnchorV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF",
        "displayName": "AsyncSequence.map(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF",
        "displayName": "AsyncSequence.map(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV9ChiralityO4leftyA2EmF",
      "target": "s:5ARKit10HandAnchorV9ChiralityO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV8geometryAC8GeometryVvp",
      "target": "s:5ARKit10MeshAnchorV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV9AlignmentO2eeoiySbAE_AEtFZ",
      "target": "s:5ARKit11PlaneAnchorV9AlignmentO",
      "sourceOrigin": {
        "identifier": "s:SQ2eeoiySbx_xtFZ",
        "displayName": "Equatable.==(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV9ChiralityO5rightyA2EmF",
      "target": "s:5ARKit10HandAnchorV9ChiralityO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10HandAnchorV9ChiralityO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV11descriptionSSvp",
      "target": "s:5ARKit0A7SessionC5ErrorV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_image_anchor",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV8GeometryV11descriptionSSvp",
      "target": "s:5ARKit10MeshAnchorV8GeometryV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV",
      "target": "s:5ARKit6AnchorP"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit20HandTrackingProviderC",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5EventO11descriptionSSvp",
      "target": "s:5ARKit0A7SessionC5EventO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_authorization_results",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV010originFromC9TransformSo13simd_float4x4avp",
      "target": "s:5ARKit10MeshAnchorV",
      "sourceOrigin": {
        "identifier": "s:5ARKit6AnchorP010originFromB9TransformSo13simd_float4x4avp",
        "displayName": "Anchor.originFromAnchorTransform"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV2IDa",
      "target": "s:5ARKit10MeshAnchorV",
      "sourceOrigin": {
        "identifier": "s:s12IdentifiableP2IDQa",
        "displayName": "Identifiable.ID"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21ImageTrackingProviderC5stateAA04DataD5StateOvp",
      "target": "s:5ARKit21ImageTrackingProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP5stateAA0bC5StateOvp",
        "displayName": "DataProvider.state"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit14GeometrySourceV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV9AlignmentO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_scene_reconstruction_provider",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10MeshAnchorV",
      "target": "s:s12IdentifiableP",
      "targetFallback": "Swift.Identifiable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11ImageAnchorV11descriptionSSvp",
      "target": "s:5ARKit11ImageAnchorV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_world_tracking_provider",
      "target": "c:objc(pl)OS_ar_data_provider"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_hand_tracking_provider",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV9AlignmentO11descriptionSSvp",
      "target": "s:5ARKit11PlaneAnchorV9AlignmentO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF",
        "displayName": "AsyncSequence.compactMap(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF",
        "displayName": "AsyncSequence.compactMap(_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_plane_detection_provider",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12DataProviderP",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV9AlignmentO8verticalyA2EmF",
      "target": "s:5ARKit11PlaneAnchorV9AlignmentO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21ImageTrackingProviderC15referenceImagesACSayAA09ReferenceB0VG_tcfc",
      "target": "s:5ARKit21ImageTrackingProviderC"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit15GeometryElementV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV",
      "target": "s:s12IdentifiableP",
      "targetFallback": "Swift.Identifiable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV",
      "target": "s:5ARKit21WorldTrackingProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV9AlignmentO10horizontalyA2EmF",
      "target": "s:5ARKit11PlaneAnchorV9AlignmentO"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_world_anchors",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10HandAnchorV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_authorization_result",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5EventO24dataProviderStateChangedyAESayAA04DataE0_pG_AA0heF0OAC5ErrorVSgtcAEmF",
      "target": "s:5ARKit0A7SessionC5EventO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10MeshAnchorV",
      "target": "s:5ARKit6AnchorP"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12DataProviderP",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO5plantyA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF",
        "displayName": "AsyncSequence.filter(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF",
        "displayName": "AsyncSequence.filter(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20AnchorUpdateSequenceV13AsyncIteratora",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci13AsyncIteratorQa",
        "displayName": "AsyncSequence.AsyncIterator"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11WorldAnchorV",
      "target": "s:s12IdentifiableP",
      "targetFallback": "Swift.Identifiable"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_session",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_hand_tracking_configuration",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5EventO20authorizationChangedyAeC17AuthorizationTypeO_AC0F6StatusOtcAEmF",
      "target": "s:5ARKit0A7SessionC5EventO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11ImageAnchorV9isTrackedSbvp",
      "target": "s:5ARKit11ImageAnchorV",
      "sourceOrigin": {
        "identifier": "s:5ARKit15TrackableAnchorP9isTrackedSbvp",
        "displayName": "TrackableAnchor.isTracked"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV8GeometryV15classificationsAA0D6SourceVSgvp",
      "target": "s:5ARKit10MeshAnchorV8GeometryV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10HandAnchorV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:Sci",
      "targetFallback": "_Concurrency.AsyncSequence"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO9hashValueSivp",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
      "sourceOrigin": {
        "identifier": "s:SH9hashValueSivp",
        "displayName": "Hashable.hashValue"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_data_provider",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit15GeometryElementV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20AnchorUpdateSequenceV8IteratorV7Elementa",
      "target": "s:5ARKit20AnchorUpdateSequenceV8IteratorV",
      "sourceOrigin": {
        "identifier": "s:ScI7ElementQa",
        "displayName": "AsyncIteratorProtocol.Element"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_image_tracking_provider",
      "target": "c:objc(pl)OS_ar_data_provider"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_skeleton",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit20HandTrackingProviderC",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV8GeometryV5facesAA0D7ElementVvp",
      "target": "s:5ARKit10MeshAnchorV8GeometryV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV2id10Foundation4UUIDVvp",
      "target": "s:5ARKit10MeshAnchorV",
      "sourceOrigin": {
        "identifier": "s:s12IdentifiableP2id2IDQzvp",
        "displayName": "Identifiable.id"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV9AlignmentO",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit14GeometrySourceV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC6EventsV",
      "target": "s:Sci",
      "targetFallback": "_Concurrency.AsyncSequence"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11ImageAnchorV09referenceB0AA09ReferenceB0Vvp",
      "target": "s:5ARKit11ImageAnchorV"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_plane_detection_configuration",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11WorldAnchorV",
      "target": "s:5ARKit6AnchorP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV11descriptionSSvp",
      "target": "s:5ARKit12HandSkeletonV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit27SceneReconstructionProviderC",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit17DataProviderStateO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12AnchorUpdateV5EventO7removedyAEyx_GAGmAA0B0RzlF",
      "target": "s:5ARKit12AnchorUpdateV5EventO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO6windowyA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO12undeterminedyA2EmF",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_hand_anchor",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit22PlaneDetectionProviderC",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO4dooryA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12AnchorUpdateV5EventO11descriptionSSvp",
      "target": "s:5ARKit12AnchorUpdateV5EventO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO20thumbIntermediateTipyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC11isSupportedSbvpZ",
      "target": "s:5ARKit21WorldTrackingProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP11isSupportedSbvpZ",
        "displayName": "DataProvider.isSupported"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO12notAvailableyA2EmF",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO",
      "target": "s:5ARKit0A7SessionC"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21WorldTrackingProviderC",
      "target": "s:5ARKit12DataProviderP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO7unknownyA2EmF",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10MeshAnchorV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO6stairsyA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12AnchorUpdateV5EventO5addedyAEyx_GAGmAA0B0RzlF",
      "target": "s:5ARKit12AnchorUpdateV5EventO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO8thumbTipyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12AnchorUpdateV5EventO7updatedyAEyx_GAGmAA0B0RzlF",
      "target": "s:5ARKit12AnchorUpdateV5EventO"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_skeleton_definition",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV6bufferSo9MTLBuffer_pvp",
      "target": "s:5ARKit15GeometryElementV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO21indexFingerMetacarpalyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC17AuthorizationTypeO",
      "target": "s:5ARKit0A7SessionC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC5modesACSayAC4ModeOG_tcfc",
      "target": "s:5ARKit27SceneReconstructionProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO3bedyA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV16errorDescriptionSSSgvp",
      "target": "s:5ARKit0A7SessionC5ErrorV",
      "sourceOrigin": {
        "identifier": "s:10Foundation14LocalizedErrorP16errorDescriptionSSSgvp",
        "displayName": "LocalizedError.errorDescription"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV",
      "target": "s:5ARKit11PlaneAnchorV"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_world_anchor",
      "target": "c:objc(pl)OS_ar_anchor"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV9AlignmentO",
      "target": "s:5ARKit11PlaneAnchorV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12HandSkeletonV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO7cabinetyA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9allJointsSayAC5JointVGvp",
      "target": "s:5ARKit12HandSkeletonV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO5wristyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11ImageAnchorV20estimatedScaleFactorSfvp",
      "target": "s:5ARKit11ImageAnchorV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit14ReferenceImageV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11WorldAnchorV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO12thumbKnuckleyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO13homeApplianceyA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_geometry_source",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC5stateAA04DataD5StateOvp",
      "target": "s:5ARKit27SceneReconstructionProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP5stateAA0bC5StateOvp",
        "displayName": "DataProvider.state"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO2tvyA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO21thumbIntermediateBaseyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20AnchorUpdateSequenceV8IteratorV4nextAA0bC0Vyqd__GSgyYaF",
      "target": "s:5ARKit20AnchorUpdateSequenceV8IteratorV",
      "sourceOrigin": {
        "identifier": "s:ScI4next7ElementQzSgyYaKF",
        "displayName": "AsyncIteratorProtocol.next()"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
      "target": "s:5ARKit21WorldTrackingProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
        "displayName": "DataProvider.requiredAuthorizations"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit14ReferenceImageV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11WorldAnchorV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11ImageAnchorV",
      "target": "s:5ARKit15TrackableAnchorP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO9hashValueSivp",
      "target": "s:5ARKit15GeometryElementV9PrimitiveO",
      "sourceOrigin": {
        "identifier": "s:SH9hashValueSivp",
        "displayName": "Hashable.hashValue"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV12handSkeletonAA0bE0VSgvp",
      "target": "s:5ARKit10HandAnchorV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12HandSkeletonV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_world_anchor",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV11neutralPoseACvpZ",
      "target": "s:5ARKit12HandSkeletonV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO4noneyA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10HandAnchorV",
      "target": "s:s12IdentifiableP",
      "targetFallback": "Swift.Identifiable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14classificationAC14ClassificationOvp",
      "target": "s:5ARKit11PlaneAnchorV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO4wallyA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14ReferenceImageV7cgimage12physicalSize11orientationACSo10CGImageRefa_So6CGSizeVSo0H19PropertyOrientationVtcfc",
      "target": "s:5ARKit14ReferenceImageV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11ImageAnchorV2IDa",
      "target": "s:5ARKit11ImageAnchorV",
      "sourceOrigin": {
        "identifier": "s:s12IdentifiableP2IDQa",
        "displayName": "Identifiable.ID"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC17queryDeviceAnchor11atTimestampAA0fG0VSgSd_tF",
      "target": "s:5ARKit21WorldTrackingProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO5flooryA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_hand_anchor",
      "target": "c:objc(pl)OS_ar_anchor"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit22PlaneDetectionProviderC",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10HandAnchorV",
      "target": "s:5ARKit6AnchorP"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_image_anchor",
      "target": "c:objc(pl)OS_ar_trackable_anchor"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit17DataProviderStateO",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV5jointyAC5JointVAC0E4NameOF",
      "target": "s:5ARKit12HandSkeletonV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit27SceneReconstructionProviderC",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO7ceilingyA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11ImageAnchorV010originFromC9TransformSo13simd_float4x4avp",
      "target": "s:5ARKit11ImageAnchorV",
      "sourceOrigin": {
        "identifier": "s:5ARKit6AnchorP010originFromB9TransformSo13simd_float4x4avp",
        "displayName": "Anchor.originFromAnchorTransform"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV9alignmentAC9AlignmentOvp",
      "target": "s:5ARKit11PlaneAnchorV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO",
      "target": "s:SY",
      "targetFallback": "Swift.RawRepresentable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO5tableyA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO4seatyA2EmF",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC5modesSayAC4ModeOGvp",
      "target": "s:5ARKit27SceneReconstructionProviderC"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10MeshAnchorV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV13failureReasonSSSgvp",
      "target": "s:5ARKit0A7SessionC5ErrorV",
      "sourceOrigin": {
        "identifier": "s:10Foundation14LocalizedErrorP13failureReasonSSSgvp",
        "displayName": "LocalizedError.failureReason"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderCACycfc",
      "target": "s:5ARKit21WorldTrackingProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV4CodeO11descriptionSSvp",
      "target": "s:5ARKit0A7SessionC5ErrorV4CodeO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit17DataProviderStateO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV4CodeO23dataProviderFailedToRunyA2GmF",
      "target": "s:5ARKit0A7SessionC5ErrorV4CodeO"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_mesh_anchors",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV5JointV4nameAC0D4NameOvp",
      "target": "s:5ARKit12HandSkeletonV5JointV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO27indexFingerIntermediateBaseyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC5ErrorV",
      "target": "s:10Foundation14LocalizedErrorP",
      "targetFallback": "Foundation.LocalizedError"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11WorldAnchorV010originFromC9TransformACSo13simd_float4x4a_tcfc",
      "target": "s:5ARKit11WorldAnchorV"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_geometry_element",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC5ErrorV4CodeO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "requirementOf",
      "source": "s:5ARKit12DataProviderP5stateAA0bC5StateOvp",
      "target": "s:5ARKit12DataProviderP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO4hash4intoys6HasherVz_tF",
      "target": "s:5ARKit15GeometryElementV9PrimitiveO",
      "sourceOrigin": {
        "identifier": "s:SH4hash4intoys6HasherVz_tF",
        "displayName": "Hashable.hash(into:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO18indexFingerKnuckleyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV9AlignmentO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV4CodeO25dataProviderNotAuthorizedyA2GmF",
      "target": "s:5ARKit0A7SessionC5ErrorV4CodeO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV9isTrackedSbvp",
      "target": "s:5ARKit10HandAnchorV",
      "sourceOrigin": {
        "identifier": "s:5ARKit15TrackableAnchorP9isTrackedSbvp",
        "displayName": "TrackableAnchor.isTracked"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV010originFromC9TransformSo13simd_float4x4avp",
      "target": "s:5ARKit10HandAnchorV",
      "sourceOrigin": {
        "identifier": "s:5ARKit6AnchorP010originFromB9TransformSo13simd_float4x4avp",
        "displayName": "Anchor.originFromAnchorTransform"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit22PlaneDetectionProviderC5stateAA04DataD5StateOvp",
      "target": "s:5ARKit22PlaneDetectionProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP5stateAA0bC5StateOvp",
        "displayName": "DataProvider.state"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12AnchorUpdateV5EventO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable",
      "swiftConstraints": [
        {
          "kind": "conformance",
          "lhs": "AnchorType",
          "rhs": "Anchor",
          "rhsPrecise": "s:5ARKit6AnchorP"
        }
      ]
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC17AuthorizationTypeO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit6AnchorP",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21WorldTrackingProviderC",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV9AlignmentO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV8GeometryV8verticesAA0D6SourceVvp",
      "target": "s:5ARKit10MeshAnchorV8GeometryV"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF",
        "displayName": "AsyncSequence.reduce(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF",
        "displayName": "AsyncSequence.reduce(_:_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11WorldAnchorV11descriptionSSvp",
      "target": "s:5ARKit11WorldAnchorV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO22middleFingerMetacarpalyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV2IDa",
      "target": "s:5ARKit10HandAnchorV",
      "sourceOrigin": {
        "identifier": "s:s12IdentifiableP2IDQa",
        "displayName": "Identifiable.ID"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit17DataProviderStateO2eeoiySbAC_ACtFZ",
      "target": "s:5ARKit17DataProviderStateO",
      "sourceOrigin": {
        "identifier": "s:SQ2eeoiySbx_xtFZ",
        "displayName": "Equatable.==(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV2IDa",
      "target": "s:5ARKit11PlaneAnchorV",
      "sourceOrigin": {
        "identifier": "s:s12IdentifiableP2IDQa",
        "displayName": "Identifiable.ID"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO11descriptionSSvp",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit22PlaneDetectionProviderC",
      "target": "s:5ARKit12DataProviderP"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO14indexFingerTipyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV5JointV010parentFromD9TransformSo13simd_float4x4avp",
      "target": "s:5ARKit12HandSkeletonV5JointV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV9chiralityAC9ChiralityOvp",
      "target": "s:5ARKit10HandAnchorV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO2eeoiySbAE_AEtFZ",
      "target": "s:5ARKit15GeometryElementV9PrimitiveO",
      "sourceOrigin": {
        "identifier": "s:SQ2eeoiySbx_xtFZ",
        "displayName": "Equatable.==(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO9hashValueSivp",
      "target": "s:5ARKit12HandSkeletonV9JointNameO",
      "sourceOrigin": {
        "identifier": "s:SH9hashValueSivp",
        "displayName": "Hashable.hashValue"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO26indexFingerIntermediateTipyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO11descriptionSSvp",
      "target": "s:5ARKit15GeometryElementV9PrimitiveO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO6windowyA2EmF",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20HandTrackingProviderC11descriptionSSvp",
      "target": "s:5ARKit20HandTrackingProviderC",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "requirementOf",
      "source": "s:5ARKit12DataProviderP22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
      "target": "s:5ARKit12DataProviderP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV6heightSfvp",
      "target": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC17AuthorizationTypeO12worldSensingyA2EmF",
      "target": "s:5ARKit0A7SessionC17AuthorizationTypeO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO27middleFingerIntermediateTipyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC11descriptionSSvp",
      "target": "s:5ARKit0A7SessionC",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV11descriptionSSvp",
      "target": "s:5ARKit15GeometryElementV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF",
        "displayName": "AsyncSequence.max(by:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit22PlaneDetectionProviderC11isSupportedSbvpZ",
      "target": "s:5ARKit22PlaneDetectionProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP11isSupportedSbvpZ",
        "displayName": "DataProvider.isSupported"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO4dooryA2EmF",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV2id10Foundation4UUIDVvp",
      "target": "s:5ARKit10HandAnchorV",
      "sourceOrigin": {
        "identifier": "s:s12IdentifiableP2id2IDQzvp",
        "displayName": "Identifiable.id"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit6AnchorP",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12AnchorUpdateV5EventO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable",
      "swiftConstraints": [
        {
          "kind": "conformance",
          "lhs": "AnchorType",
          "rhs": "Anchor",
          "rhsPrecise": "s:5ARKit6AnchorP"
        }
      ]
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit20AnchorUpdateSequenceV8IteratorV",
      "target": "s:ScI",
      "targetFallback": "_Concurrency.AsyncIteratorProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC17AuthorizationTypeO12handTrackingyA2EmF",
      "target": "s:5ARKit0A7SessionC17AuthorizationTypeO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12HandSkeletonV9JointNameO",
      "target": "s:SH",
      "targetFallback": "Swift.Hashable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO28middleFingerIntermediateBaseyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO5tableyA2EmF",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC11descriptionSSvp",
      "target": "s:5ARKit27SceneReconstructionProviderC",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC20requestAuthorization3forSDyAC0D4TypeOAC0D6StatusOGSayAGG_tYaF",
      "target": "s:5ARKit0A7SessionC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12AnchorUpdateV5eventAC5EventOyx_Gvp",
      "target": "s:5ARKit12AnchorUpdateV"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF",
        "displayName": "AsyncSequence.max(by:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC5ErrorV",
      "target": "s:s5ErrorP",
      "targetFallback": "Swift.Error"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC17AuthorizationTypeO11descriptionSSvp",
      "target": "s:5ARKit0A7SessionC17AuthorizationTypeO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO4seatyA2EmF",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO19middleFingerKnuckleyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO7ceilingyA2EmF",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit27SceneReconstructionProviderC",
      "target": "s:5ARKit12DataProviderP"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_device_anchor",
      "target": "c:objc(pl)OS_ar_trackable_anchor"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11ImageAnchorV2id10Foundation4UUIDVvp",
      "target": "s:5ARKit11ImageAnchorV",
      "sourceOrigin": {
        "identifier": "s:s12IdentifiableP2id2IDQzvp",
        "displayName": "Identifiable.id"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO17ringFingerKnuckleyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit17DataProviderStateO11descriptionSSvp",
      "target": "s:5ARKit17DataProviderStateO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "requirementOf",
      "source": "s:5ARKit12DataProviderP11isSupportedSbvpZ",
      "target": "s:5ARKit12DataProviderP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO10indexCountSivp",
      "target": "s:5ARKit15GeometryElementV9PrimitiveO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21WorldTrackingProviderC",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV5widthSfvp",
      "target": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit22PlaneDetectionProviderC10alignmentsACSayAA0B6AnchorV9AlignmentOG_tcfc",
      "target": "s:5ARKit22PlaneDetectionProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC11descriptionSSvp",
      "target": "s:5ARKit21WorldTrackingProviderC",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV9primitiveAC9PrimitiveOvp",
      "target": "s:5ARKit15GeometryElementV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit17DataProviderStateO7runningyA2CmF",
      "target": "s:5ARKit17DataProviderStateO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO20ringFingerMetacarpalyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10HandAnchorV9ChiralityO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit27SceneReconstructionProviderC4ModeO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC5ErrorV4CodeO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12AnchorUpdateV6anchorxvp",
      "target": "s:5ARKit12AnchorUpdateV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO4wallyA2EmF",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC17AuthorizationTypeO",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO5flooryA2EmF",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit17DataProviderStateO7stoppedyA2CmF",
      "target": "s:5ARKit17DataProviderStateO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO15middleFingerTipyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC18queryAuthorization3forSDyAC0D4TypeOAC0D6StatusOGSayAGG_tYaF",
      "target": "s:5ARKit0A7SessionC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21ImageTrackingProviderC11descriptionSSvp",
      "target": "s:5ARKit21ImageTrackingProviderC",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit27SceneReconstructionProviderC4ModeO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC13anchorUpdatesAA20AnchorUpdateSequenceVyAA0bG0VGvp",
      "target": "s:5ARKit21WorldTrackingProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit17DataProviderStateO6pausedyA2CmF",
      "target": "s:5ARKit17DataProviderStateO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO13ringFingerTipyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO4lineyA2EmF",
      "target": "s:5ARKit15GeometryElementV9PrimitiveO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC13anchorUpdatesAA20AnchorUpdateSequenceVyAA04MeshG0VGvp",
      "target": "s:5ARKit27SceneReconstructionProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO25ringFingerIntermediateTipyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:5ARKit10MeshAnchorV0B14ClassificationO",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO",
      "sourceOrigin": {
        "identifier": "s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp",
        "displayName": "RawRepresentable.hashValue"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF",
        "displayName": "AsyncSequence.reduce(into:_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11WorldAnchorV9isTrackedSbvp",
      "target": "s:5ARKit11WorldAnchorV",
      "sourceOrigin": {
        "identifier": "s:5ARKit15TrackableAnchorP9isTrackedSbvp",
        "displayName": "TrackableAnchor.isTracked"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12HandSkeletonV9JointNameO",
      "target": "s:s12CaseIterableP",
      "targetFallback": "Swift.CaseIterable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20AnchorUpdateSequenceV17makeAsyncIteratorAC0G0Vyx_xGyF",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci17makeAsyncIterator0bC0QzyF",
        "displayName": "AsyncSequence.makeAsyncIterator()"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10HandAnchorV9ChiralityO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF",
        "displayName": "AsyncSequence.reduce(into:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11WorldAnchorV2IDa",
      "target": "s:5ARKit11WorldAnchorV",
      "sourceOrigin": {
        "identifier": "s:s12IdentifiableP2IDQa",
        "displayName": "Identifiable.ID"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC17AuthorizationTypeO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20HandTrackingProviderC13anchorUpdatesAA20AnchorUpdateSequenceVyAA0bG0VGvp",
      "target": "s:5ARKit20HandTrackingProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit15GeometryElementV9PrimitiveO8triangleyA2EmF",
      "target": "s:5ARKit15GeometryElementV9PrimitiveO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC17AuthorizationTypeO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit17DataProviderStateO11initializedyA2CmF",
      "target": "s:5ARKit17DataProviderStateO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO26ringFingerIntermediateBaseyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV4CodeO9hashValueSivp",
      "target": "s:5ARKit0A7SessionC5ErrorV4CodeO",
      "sourceOrigin": {
        "identifier": "s:SH9hashValueSivp",
        "displayName": "Hashable.hashValue"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:s5ErrorP10FoundationE20localizedDescriptionSSvp::SYNTHESIZED::s:5ARKit21WorldTrackingProviderC5ErrorV",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV",
      "sourceOrigin": {
        "identifier": "s:s5ErrorP10FoundationE20localizedDescriptionSSvp",
        "displayName": "Error.localizedDescription"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO28littleFingerIntermediateBaseyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11WorldAnchorV010originFromC9TransformSo13simd_float4x4avp",
      "target": "s:5ARKit11WorldAnchorV",
      "sourceOrigin": {
        "identifier": "s:5ARKit6AnchorP010originFromB9TransformSo13simd_float4x4avp",
        "displayName": "Anchor.originFromAnchorTransform"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21ImageTrackingProviderC13anchorUpdatesAA20AnchorUpdateSequenceVyAA0bG0VGvp",
      "target": "s:5ARKit21ImageTrackingProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO19littleFingerKnuckleyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit6AnchorP",
      "target": "s:s12IdentifiableP",
      "targetFallback": "Swift.Identifiable"
    },
    {
      "kind": "memberOf",
      "source": "s:s5ErrorP10FoundationE20localizedDescriptionSSvp::SYNTHESIZED::s:5ARKit0A7SessionC5ErrorV",
      "target": "s:5ARKit0A7SessionC5ErrorV",
      "sourceOrigin": {
        "identifier": "s:s5ErrorP10FoundationE20localizedDescriptionSSvp",
        "displayName": "Error.localizedDescription"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC5ErrorV4CodeO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_image_tracking_provider",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_mesh_anchor",
      "target": "c:objc(pl)OS_ar_anchor"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20AnchorUpdateSequenceV7Elementa",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci7ElementQa",
        "displayName": "AsyncSequence.Element"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12AnchorUpdateV9timestampSdvp",
      "target": "s:5ARKit12AnchorUpdateV"
    },
    {
      "kind": "memberOf",
      "source": "s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:5ARKit10MeshAnchorV0B14ClassificationO",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO",
      "sourceOrigin": {
        "identifier": "s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF",
        "displayName": "RawRepresentable.hash(into:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO22littleFingerMetacarpalyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12DeviceAnchorV",
      "target": "s:5ARKit15TrackableAnchorP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
      "target": "s:5ARKit27SceneReconstructionProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
        "displayName": "DataProvider.requiredAuthorizations"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10HandAnchorV11descriptionSSvp",
      "target": "s:5ARKit10HandAnchorV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21ImageTrackingProviderC11isSupportedSbvpZ",
      "target": "s:5ARKit21ImageTrackingProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP11isSupportedSbvpZ",
        "displayName": "DataProvider.isSupported"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO12forearmWristyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO15littleFingerTipyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC6EventsV8IteratorV7Elementa",
      "target": "s:5ARKit0A7SessionC6EventsV8IteratorV",
      "sourceOrigin": {
        "identifier": "s:ScI7ElementQa",
        "displayName": "AsyncIteratorProtocol.Element"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12AnchorUpdateV11descriptionSSvp",
      "target": "s:5ARKit12AnchorUpdateV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV4CodeO2eeoiySbAG_AGtFZ",
      "target": "s:5ARKit0A7SessionC5ErrorV4CodeO",
      "sourceOrigin": {
        "identifier": "s:SQ2eeoiySbx_xtFZ",
        "displayName": "Equatable.==(_:_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_world_tracking_configuration",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20HandTrackingProviderC22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
      "target": "s:5ARKit20HandTrackingProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
        "displayName": "DataProvider.requiredAuthorizations"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_scene_reconstruction_provider",
      "target": "c:objc(pl)OS_ar_data_provider"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO27littleFingerIntermediateTipyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit20HandTrackingProviderC",
      "target": "s:5ARKit12DataProviderP"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_mesh_anchor",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC6EventsV8IteratorV4nextAC5EventOSgyYaF",
      "target": "s:5ARKit0A7SessionC6EventsV8IteratorV",
      "sourceOrigin": {
        "identifier": "s:ScI4next7ElementQzSgyYaKF",
        "displayName": "AsyncIteratorProtocol.next()"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12AnchorUpdateV5EventO",
      "target": "s:5ARKit12AnchorUpdateV"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_world_tracking_provider",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_hand_tracking_provider",
      "target": "c:objc(pl)OS_ar_data_provider"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit17DataProviderStateO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_plane_detection_provider",
      "target": "c:objc(pl)OS_ar_data_provider"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21ImageTrackingProviderC22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
      "target": "s:5ARKit21ImageTrackingProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
        "displayName": "DataProvider.requiredAuthorizations"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF",
        "displayName": "AsyncSequence.drop(while:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF",
        "displayName": "AsyncSequence.drop(while:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_anchor",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5ErrorV4CodeO4hash4intoys6HasherVz_tF",
      "target": "s:5ARKit0A7SessionC5ErrorV4CodeO",
      "sourceOrigin": {
        "identifier": "s:SH4hash4intoys6HasherVz_tF",
        "displayName": "Hashable.hash(into:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO11descriptionSSvp",
      "target": "s:5ARKit12HandSkeletonV9JointNameO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11WorldAnchorV2id10Foundation4UUIDVvp",
      "target": "s:5ARKit11WorldAnchorV",
      "sourceOrigin": {
        "identifier": "s:s12IdentifiableP2id2IDQzvp",
        "displayName": "Identifiable.id"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO10forearmArmyA2EmF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20AnchorUpdateSequenceV8IteratorV",
      "target": "s:5ARKit20AnchorUpdateSequenceV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV010originFromC9TransformSo13simd_float4x4avp",
      "target": "s:5ARKit11PlaneAnchorV",
      "sourceOrigin": {
        "identifier": "s:5ARKit6AnchorP010originFromB9TransformSo13simd_float4x4avp",
        "displayName": "Anchor.originFromAnchorTransform"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV8GeometryV7normalsAA0D6SourceVvp",
      "target": "s:5ARKit10MeshAnchorV8GeometryV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC5EventO",
      "target": "s:5ARKit0A7SessionC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV6anchorAA0B6AnchorVSgvp",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO2eeoiySbAE_AEtFZ",
      "target": "s:5ARKit12HandSkeletonV9JointNameO",
      "sourceOrigin": {
        "identifier": "s:SQ2eeoiySbx_xtFZ",
        "displayName": "Equatable.==(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC6EventsV8IteratorV",
      "target": "s:5ARKit0A7SessionC6EventsV"
    },
    {
      "kind": "requirementOf",
      "source": "s:5ARKit15TrackableAnchorP9isTrackedSbvp",
      "target": "s:5ARKit15TrackableAnchorP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV6extentAE6ExtentVvp",
      "target": "s:5ARKit11PlaneAnchorV8GeometryV"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF",
        "displayName": "AsyncSequence.allSatisfy(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF",
        "displayName": "AsyncSequence.allSatisfy(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC4stopyyF",
      "target": "s:5ARKit0A7SessionC"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_device_anchor",
      "target": "c:objc(pl)OS_ar_anchor"
    },
    {
      "kind": "requirementOf",
      "source": "s:5ARKit6AnchorP2id10Foundation4UUIDVvp",
      "target": "s:5ARKit6AnchorP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20HandTrackingProviderCACycfc",
      "target": "s:5ARKit20HandTrackingProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO4hash4intoys6HasherVz_tF",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO",
      "sourceOrigin": {
        "identifier": "s:SH4hash4intoys6HasherVz_tF",
        "displayName": "Hashable.hash(into:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV11descriptionSSvp",
      "target": "s:5ARKit11PlaneAnchorV8GeometryV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC11isSupportedSbvpZ",
      "target": "s:5ARKit27SceneReconstructionProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP11isSupportedSbvpZ",
        "displayName": "DataProvider.isSupported"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO8RawValuea",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO",
      "sourceOrigin": {
        "identifier": "s:SY8RawValueQa",
        "displayName": "RawRepresentable.RawValue"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO9hashValueSivp",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO",
      "sourceOrigin": {
        "identifier": "s:SH9hashValueSivp",
        "displayName": "Hashable.hashValue"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO4hash4intoys6HasherVz_tF",
      "target": "s:5ARKit12HandSkeletonV9JointNameO",
      "sourceOrigin": {
        "identifier": "s:SH4hash4intoys6HasherVz_tF",
        "displayName": "Hashable.hash(into:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20HandTrackingProviderC11isSupportedSbvpZ",
      "target": "s:5ARKit20HandTrackingProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP11isSupportedSbvpZ",
        "displayName": "DataProvider.isSupported"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF",
        "displayName": "AsyncSequence.map(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF",
        "displayName": "AsyncSequence.map(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC3runyySayAA12DataProvider_pGYaKF",
      "target": "s:5ARKit0A7SessionC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit22PlaneDetectionProviderC11descriptionSSvp",
      "target": "s:5ARKit22PlaneDetectionProviderC",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC6EventsV13AsyncIteratora",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci13AsyncIteratorQa",
        "displayName": "AsyncSequence.AsyncIterator"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_image_anchors",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO8AllCasesa",
      "target": "s:5ARKit12HandSkeletonV9JointNameO",
      "sourceOrigin": {
        "identifier": "s:s12CaseIterableP8AllCasesQa",
        "displayName": "CaseIterable.AllCases"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit15TrackableAnchorP",
      "target": "s:5ARKit6AnchorP"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_data_providers",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF",
        "displayName": "AsyncSequence.dropFirst(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF",
        "displayName": "AsyncSequence.dropFirst(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO7allowedyA2EmF",
      "target": "s:5ARKit0A7SessionC19AuthorizationStatusO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12DeviceAnchorV9isTrackedSbvp",
      "target": "s:5ARKit12DeviceAnchorV",
      "sourceOrigin": {
        "identifier": "s:5ARKit15TrackableAnchorP9isTrackedSbvp",
        "displayName": "TrackableAnchor.isTracked"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO6deniedyA2EmF",
      "target": "s:5ARKit0A7SessionC19AuthorizationStatusO"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF",
        "displayName": "AsyncSequence.compactMap(_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF",
        "displayName": "AsyncSequence.compactMap(_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12DeviceAnchorV",
      "target": "s:s12IdentifiableP",
      "targetFallback": "Swift.Identifiable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO11descriptionSSvp",
      "target": "s:5ARKit0A7SessionC19AuthorizationStatusO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV9meshFacesAA0D7ElementVvp",
      "target": "s:5ARKit11PlaneAnchorV8GeometryV"
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:5ARKit20AnchorUpdateSequenceV",
      "target": "s:5ARKit20AnchorUpdateSequenceV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF",
        "displayName": "AsyncSequence.contains(where:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC6EventsV",
      "sourceOrigin": {
        "identifier": "s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF",
        "displayName": "AsyncSequence.contains(where:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12DeviceAnchorV",
      "target": "s:5ARKit6AnchorP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC4ModeO",
      "target": "s:5ARKit27SceneReconstructionProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4codeAE4CodeOvp",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_image_tracking_configuration",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20HandTrackingProviderC5stateAA04DataD5StateOvp",
      "target": "s:5ARKit20HandTrackingProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP5stateAA0bC5StateOvp",
        "displayName": "DataProvider.state"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_device_anchor",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12HandSkeletonV9JointNameO8allCasesSayAEGvpZ",
      "target": "s:5ARKit12HandSkeletonV9JointNameO",
      "sourceOrigin": {
        "identifier": "s:s12CaseIterableP8allCases03AllD0QzvpZ",
        "displayName": "CaseIterable.allCases"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12DeviceAnchorV11descriptionSSvp",
      "target": "s:5ARKit12DeviceAnchorV",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV14ClassificationO2eeoiySbAE_AEtFZ",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO",
      "sourceOrigin": {
        "identifier": "s:SQ2eeoiySbx_xtFZ",
        "displayName": "Equatable.==(_:_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21ImageTrackingProviderC",
      "target": "s:5ARKit12DataProviderP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC19AuthorizationStatusO13notDeterminedyA2EmF",
      "target": "s:5ARKit0A7SessionC19AuthorizationStatusO"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit15TrackableAnchorP",
      "target": "s:s12IdentifiableP",
      "targetFallback": "Swift.Identifiable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV",
      "target": "s:s5ErrorP",
      "targetFallback": "Swift.Error"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit27SceneReconstructionProviderC4ModeO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_trackable_anchor",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12DeviceAnchorV2IDa",
      "target": "s:5ARKit12DeviceAnchorV",
      "sourceOrigin": {
        "identifier": "s:s12IdentifiableP2IDQa",
        "displayName": "Identifiable.ID"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit15TrackableAnchorP",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC6EventsV8IteratorV",
      "target": "s:ScI",
      "targetFallback": "_Concurrency.AsyncIteratorProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12DeviceAnchorV010originFromC9TransformSo13simd_float4x4avp",
      "target": "s:5ARKit12DeviceAnchorV",
      "sourceOrigin": {
        "identifier": "s:5ARKit6AnchorP010originFromB9TransformSo13simd_float4x4avp",
        "displayName": "Anchor.originFromAnchorTransform"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionCACycfc",
      "target": "s:5ARKit0A7SessionC"
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit12AnchorUpdateV5EventO",
      "target": "s:5ARKit12AnchorUpdateV5EventO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit0A7SessionC19AuthorizationStatusO",
      "target": "s:5ARKit0A7SessionC19AuthorizationStatusO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV16errorDescriptionSSSgvp",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV",
      "sourceOrigin": {
        "identifier": "s:10Foundation14LocalizedErrorP16errorDescriptionSSSgvp",
        "displayName": "LocalizedError.errorDescription"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC5ErrorV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit22PlaneDetectionProviderC22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
      "target": "s:5ARKit22PlaneDetectionProviderC",
      "sourceOrigin": {
        "identifier": "s:5ARKit12DataProviderP22requiredAuthorizationsSayAA0A7SessionC17AuthorizationTypeOGvpZ",
        "displayName": "DataProvider.requiredAuthorizations"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit11PlaneAnchorV9AlignmentO",
      "target": "s:5ARKit11PlaneAnchorV9AlignmentO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14ReferenceImageV4nameSSSgvp",
      "target": "s:5ARKit14ReferenceImageV"
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit27SceneReconstructionProviderC4ModeO",
      "target": "s:5ARKit27SceneReconstructionProviderC4ModeO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
      "target": "s:SQ",
      "targetFallback": "Swift.Equatable"
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit0A7SessionC5ErrorV4CodeO",
      "target": "s:5ARKit0A7SessionC5ErrorV4CodeO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit17DataProviderStateO",
      "target": "s:5ARKit17DataProviderStateO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12DeviceAnchorV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit11PlaneAnchorV14ClassificationO",
      "target": "s:5ARKit11PlaneAnchorV14ClassificationO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit10HandAnchorV9ChiralityO",
      "target": "s:5ARKit10HandAnchorV9ChiralityO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12AnchorUpdateV5EventO",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit15GeometryElementV9PrimitiveO",
      "target": "s:5ARKit15GeometryElementV9PrimitiveO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC4ModeO14classificationyA2EmF",
      "target": "s:5ARKit27SceneReconstructionProviderC4ModeO"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC17AuthorizationTypeO2eeoiySbAE_AEtFZ",
      "target": "s:5ARKit0A7SessionC17AuthorizationTypeO",
      "sourceOrigin": {
        "identifier": "s:SQ2eeoiySbx_xtFZ",
        "displayName": "Equatable.==(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit20HandTrackingProviderC13latestAnchorsAA0B6AnchorVSg04leftB0_AG05rightB0tvp",
      "target": "s:5ARKit20HandTrackingProviderC"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit20AnchorUpdateSequenceV8IteratorV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV010anchorFromE9TransformSo13simd_float4x4avp",
      "target": "s:5ARKit11PlaneAnchorV8GeometryV6ExtentV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC4ModeO11descriptionSSvp",
      "target": "s:5ARKit27SceneReconstructionProviderC4ModeO",
      "sourceOrigin": {
        "identifier": "s:s23CustomStringConvertibleP11descriptionSSvp",
        "displayName": "CustomStringConvertible.description"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV13failureReasonSSSgvp",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV",
      "sourceOrigin": {
        "identifier": "s:10Foundation14LocalizedErrorP13failureReasonSSSgvp",
        "displayName": "LocalizedError.failureReason"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit14ReferenceImageV04loadB6Images12inGroupNamed6bundleSayACGSS_So8NSBundleCSgtFZ",
      "target": "s:5ARKit14ReferenceImageV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit22PlaneDetectionProviderC10alignmentsSayAA0B6AnchorV9AlignmentOGvp",
      "target": "s:5ARKit22PlaneDetectionProviderC"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit0A7SessionC5ErrorV",
      "target": "s:s23CustomStringConvertibleP",
      "targetFallback": "Swift.CustomStringConvertible"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_plane_geometry",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit10MeshAnchorV0B14ClassificationO",
      "target": "s:5ARKit10MeshAnchorV"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC4ModeO4hash4intoys6HasherVz_tF",
      "target": "s:5ARKit27SceneReconstructionProviderC4ModeO",
      "sourceOrigin": {
        "identifier": "s:SH4hash4intoys6HasherVz_tF",
        "displayName": "Hashable.hash(into:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit10MeshAnchorV0B14ClassificationO",
      "target": "s:5ARKit10MeshAnchorV0B14ClassificationO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit12HandSkeletonV9JointNameO",
      "target": "s:5ARKit12HandSkeletonV9JointNameO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit0A7SessionC17AuthorizationTypeO",
      "target": "s:5ARKit0A7SessionC17AuthorizationTypeO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC4ModeO9hashValueSivp",
      "target": "s:5ARKit27SceneReconstructionProviderC4ModeO",
      "sourceOrigin": {
        "identifier": "s:SH9hashValueSivp",
        "displayName": "Hashable.hashValue"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_error",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC6eventsAC6EventsVvp",
      "target": "s:5ARKit0A7SessionC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit17DataProviderStateO9hashValueSivp",
      "target": "s:5ARKit17DataProviderStateO",
      "sourceOrigin": {
        "identifier": "s:SH9hashValueSivp",
        "displayName": "Hashable.hashValue"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV",
      "target": "s:10Foundation14LocalizedErrorP",
      "targetFallback": "Foundation.LocalizedError"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12AnchorUpdateV5EventO",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit12DeviceAnchorV",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit27SceneReconstructionProviderC4ModeO",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_trackable_anchor",
      "target": "c:objc(pl)OS_ar_anchor"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC6EventsV",
      "target": "s:5ARKit0A7SessionC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit11PlaneAnchorV2id10Foundation4UUIDVvp",
      "target": "s:5ARKit11PlaneAnchorV",
      "sourceOrigin": {
        "identifier": "s:s12IdentifiableP2id2IDQzvp",
        "displayName": "Identifiable.id"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit12DeviceAnchorV2id10Foundation4UUIDVvp",
      "target": "s:5ARKit12DeviceAnchorV",
      "sourceOrigin": {
        "identifier": "s:s12IdentifiableP2id2IDQzvp",
        "displayName": "Identifiable.id"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC17AuthorizationTypeO4hash4intoys6HasherVz_tF",
      "target": "s:5ARKit0A7SessionC17AuthorizationTypeO",
      "sourceOrigin": {
        "identifier": "s:SH4hash4intoys6HasherVz_tF",
        "displayName": "Hashable.hash(into:)"
      }
    },
    {
      "kind": "requirementOf",
      "source": "s:5ARKit6AnchorP010originFromB9TransformSo13simd_float4x4avp",
      "target": "s:5ARKit6AnchorP"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit22PlaneDetectionProviderC13anchorUpdatesAA20AnchorUpdateSequenceVyAA0bG0VGvp",
      "target": "s:5ARKit22PlaneDetectionProviderC"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit21WorldTrackingProviderC5ErrorV18recoverySuggestionSSSgvp",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV",
      "sourceOrigin": {
        "identifier": "s:10Foundation14LocalizedErrorP18recoverySuggestionSSSgvp",
        "displayName": "LocalizedError.recoverySuggestion"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit27SceneReconstructionProviderC4ModeO2eeoiySbAE_AEtFZ",
      "target": "s:5ARKit27SceneReconstructionProviderC4ModeO",
      "sourceOrigin": {
        "identifier": "s:SQ2eeoiySbx_xtFZ",
        "displayName": "Equatable.==(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
      "target": "s:5ARKit21WorldTrackingProviderC5ErrorV4CodeO",
      "sourceOrigin": {
        "identifier": "s:SQsE2neoiySbx_xtFZ",
        "displayName": "Equatable.!=(_:_:)"
      }
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit17DataProviderStateO4hash4intoys6HasherVz_tF",
      "target": "s:5ARKit17DataProviderStateO",
      "sourceOrigin": {
        "identifier": "s:SH4hash4intoys6HasherVz_tF",
        "displayName": "Hashable.hash(into:)"
      }
    },
    {
      "kind": "conformsTo",
      "source": "c:objc(pl)OS_ar_plane_extent",
      "target": "c:objc(pl)NSObject",
      "targetFallback": "ObjectiveC.NSObjectProtocol"
    },
    {
      "kind": "memberOf",
      "source": "s:5ARKit0A7SessionC17AuthorizationTypeO9hashValueSivp",
      "target": "s:5ARKit0A7SessionC17AuthorizationTypeO",
      "sourceOrigin": {
        "identifier": "s:SH9hashValueSivp",
        "displayName": "Hashable.hashValue"
      }
    },
    {
      "kind": "conformsTo",
      "source": "s:5ARKit15TrackableAnchorP",
      "target": "s:s8SendableP",
      "targetFallback": "Swift.Sendable"
    }
  ]
}
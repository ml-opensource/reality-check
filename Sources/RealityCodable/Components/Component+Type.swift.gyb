% warning = "This file was automatically generated and should not be edited."
// ${warning}

import Foundation
import RealityKit
% import json
% symbols_path = "../../../../../../RealitySymbols/source/reality-symbols/Sources/RealitySymbols/Extracted"

//MARK: - iOS

% with open(f'{symbols_path}/iOS/Processed/Components.json') as file:
% data = json.load(file)

extension RealityPlatform.iOS {
  public enum ComponentType: CaseIterable {
    % for component in data:
    case ${component["name"][0].lower() + component["name"][1:]}
    %end
  }
}

#if os(iOS)
extension RealityPlatform.iOS.ComponentType {
  public var rawType: RealityKit.Component.Type {
    switch self {
    % for component in data:
    case .${component["name"][0].lower() + component["name"][1:]}:
      return ${component["name"]}.self
    %end
    }
  }
}
#endif

//MARK: - macOS

% with open(f'{symbols_path}/macOS/Processed/Components.json') as file:
% data = json.load(file)

extension RealityPlatform.macOS {
  public enum ComponentType: CaseIterable {
    % for component in data:
    case ${component["name"][0].lower() + component["name"][1:]}
    %end
  }
}

#if os(macOS)
extension RealityPlatform.macOS.ComponentType {
  public var rawType: RealityKit.Component.Type {
    switch self {
    % for component in data:
    case .${component["name"][0].lower() + component["name"][1:]}:
      return ${component["name"]}.self
    %end
    }
  }
}
#endif

//MARK: - visionOS

% with open(f'{symbols_path}/visionOS/Processed/Components.json') as file:
% data = json.load(file)

extension RealityPlatform.visionOS {
  public enum ComponentType: CaseIterable {
    % for component in data:
    case ${component["name"][0].lower() + component["name"][1:]}
    %end
  }
}

#if os(visionOS)
extension RealityPlatform.visionOS.ComponentType {
  public var rawType: RealityKit.Component.Type {
    switch self {
    % for component in data:
    case .${component["name"][0].lower() + component["name"][1:]}:
      return ${component["name"]}.self
    %end
    }
  }
}
#endif

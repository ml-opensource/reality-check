%{
expectedComponents_iOS = [
  "AccessibilityComponent",
  "AnchoringComponent",
  "BodyTrackingComponent",
  "CharacterControllerComponent",
  "CharacterControllerStateComponent",
  "CollisionComponent",
  "DirectionalLightComponent",
  "DirectionalLightComponent.Shadow",
  "ModelComponent",
  "ModelDebugOptionsComponent",
  "PerspectiveCameraComponent",
  "PhysicsBodyComponent",
  "PhysicsMotionComponent",
  "PointLightComponent",
  "SceneUnderstandingComponent",
  "SpotLightComponent",
  "SpotLightComponent.Shadow",
  "SynchronizationComponent",
  "Transform",
]

expectedComponents_macOS = [
  "AccessibilityComponent",
  "AnchoringComponent",
  "CharacterControllerComponent",
  "CharacterControllerStateComponent",
  "CollisionComponent",
  "DirectionalLightComponent",
  "DirectionalLightComponent.Shadow",
  "ModelComponent",
  "ModelDebugOptionsComponent",
  "PerspectiveCameraComponent",
  "PhysicsBodyComponent",
  "PhysicsMotionComponent",
  "PointLightComponent",
  "SpotLightComponent",
  "SpotLightComponent.Shadow",
  "SynchronizationComponent",
  "Transform",
]

expectedComponents_xrOS = [
  "AccessibilityComponent",
  "AdaptiveResolutionComponent",
  "AmbientAudioComponent",
  "AnchoringComponent",
  "AudioMixGroupsComponent",
  "ChannelAudioComponent",
  "CharacterControllerComponent",
  "CharacterControllerStateComponent",
  "CollisionComponent",
  "GroundingShadowComponent",
  "HoverEffectComponent",
  "ImageBasedLightComponent",
  "ImageBasedLightReceiverComponent",
  "InputTargetComponent",
  "ModelComponent",
  "ModelDebugOptionsComponent",
  "ModelSortGroupComponent",
  "OpacityComponent",
  "ParticleEmitterComponent",
  "PerspectiveCameraComponent",
  "PhysicsBodyComponent",
  "PhysicsMotionComponent",
  "PhysicsSimulationComponent",
  "PortalComponent",
  "SceneUnderstandingComponent",
  "SpatialAudioComponent",
  "SynchronizationComponent",
  "TextComponent",
  "Transform",
  "VideoPlayerComponent",
  "WorldComponent",
]
}%
import CustomDump
import RealityKit

#if os(iOS)

// MARK: - iOS

% for component in expectedComponents_iOS:
extension ${component}: CustomDumpReflectable {
  public var customDumpMirror: Mirror {
    .init(reflecting: self)
  }
}
% end

#elseif os(macOS)

// MARK: - macOS

% for component in expectedComponents_macOS:
extension ${component}: CustomDumpReflectable {
  public var customDumpMirror: Mirror {
    .init(reflecting: self)
  }
}
% end

#elseif os(visionOS)

// MARK: - visionOS

% for component in expectedComponents_xrOS:
extension ${component}: CustomDumpReflectable {
  public var customDumpMirror: Mirror {
    .init(reflecting: self)
  }
}
% end

#endif

{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using RealityCheck to inspect a RealityKit‚Äôs ARView hierarchy involves having a reference to an ARView instance running on your iOS device. To control streaming, transmission of updated hierarchies, and visualize the connection state, a visual component overlay called "},{"type":"reference","isActive":true,"identifier":"doc:\/\/RealityCheckConnect\/documentation\/RealityCheckConnect\/RealityCheckConnectView"},{"type":"text","text":" is provided."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/RealityCheckConnect\/documentation\/RealityCheckConnect\/RealityCheckConnectView"},{"type":"text","text":" handles the internal publishing and transmission of data using MultipeerConnectivity. To use this feature, you‚Äôll need to modify your target properties to explicitly include the necessary Bonjour permissions on the "},{"type":"codeVoice","code":"Info.plist"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To get started, add the RealityCheck library using Swift Package Manager (SPM) and import it into the relevant document where you want to use it. For SwiftUI-based projects, Xcode‚Äôs library provides a convenient component for integration."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure to download the latest version of the RealityCheck macOS app from the provided source."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"getting_started_cover"}]},{"anchor":"Integration","level":3,"type":"heading","text":"Integration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Start by including the RealityCheck library in your project. You can do this by downloading it from the official repository or adding it as a dependency using Swift Package Manager directly on Xcode."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can add RealityCheck to a RealityKit project on Xcode by adding it as a package dependency."}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"From the File menu, select Add Packages‚Ä¶"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Enter "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/monstar-lab-oss\/reality-check#getting-started"},{"type":"text","text":" into the package repository URL text field"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Click the Add Package button to confirm"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"getting_started_spm-1"}]},{"type":"orderedList","start":4,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select RealityCheckConnect from the Choose Package Products screen and verify that it‚Äôs being added to the desired Target"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"getting_started_spm-2"},{"type":"text","text":" "},{"type":"image","identifier":"getting_started_spm-3"}]},{"anchor":"Include-necessary-Bonjour-services","level":3,"type":"heading","text":"Include necessary Bonjour services"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Enable network communication between your iOS app and the RealityCheck macOS app by adding the required "},{"type":"codeVoice","code":"NSBonjourServices"},{"type":"text","text":" key to your app‚Äôs Info.plist file."}]},{"type":"codeListing","syntax":"xml","code":["<key>NSBonjourServices<\/key>","<array>","    <string>_reality-check._tcp<\/string>","    <string>_reality-check._udp<\/string>","<\/array>"]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As they‚Äôre used to being discovered by the host, keep the values for the bonjour services unmodified."}]}],"type":"aside","name":"Important"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"getting_started_bonjour"}]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally, when utilizing the local network, users are prompted by the system to grant explicit permission to the app. To customize the messaging of this prompt, your app can include the "},{"type":"codeVoice","code":"NSLocalNetworkUsageDescription"},{"type":"text","text":" key."}]}],"type":"aside","name":"Tip"},{"anchor":"Add-the-connect-component-to-your-view-hierarchy","level":3,"type":"heading","text":"Add the connect component to your view hierarchy"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Incorporate the necessary SwiftUI components provided by the "},{"type":"codeVoice","code":"RealityCheckConnect"},{"type":"text","text":" library into your project‚Äôs view hierarchy. The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/RealityCheckConnect\/documentation\/RealityCheckConnect\/RealityCheckConnectView"},{"type":"text","text":" component handles the connection between your app and the RealityCheck macOS app and allows to control the streaming and ARView hierarchy transmission."}]},{"type":"codeListing","syntax":"swift","code":["import RealityCheckConnect","","struct ContentView: View {  ","  var body: some View {","    ZStack {","      ARViewContainer().edgesIgnoringSafeArea(.all)","      RealityCheckConnectView()","    }","  }","}"]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A ready-to-use component is available in the Xcode library"}]}],"type":"aside","name":"Tip"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"getting_started_library"}]},{"anchor":"Configure-the-component-optional","level":3,"type":"heading","text":"Configure the component (optional)"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By default, the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/RealityCheckConnect\/documentation\/RealityCheckConnect\/RealityCheckConnectView"},{"type":"text","text":" will handle connection and streaming, but things get even better if you pass a reference of your ARView. Using the "},{"type":"codeVoice","code":"RealityCheckConnectView(_: ARView)"},{"type":"text","text":" constructor, will allow RealityCheck macOS app to inspect and display your AR hierarchy, and offer several debugging options."}]},{"type":"codeListing","syntax":"swift","code":["import RealityCheckConnect","","struct ContentView: View {","  let arViewContainer = ARViewContainer()","  ","  var body: some View {","    ZStack {","      arViewContainer.edgesIgnoringSafeArea(.all)","      RealityCheckConnectView(arViewContainer.arView)","    }","  }","}"]},{"anchor":"Connect-to-RealityCheck-macOS-app","level":3,"type":"heading","text":"Connect to RealityCheck macOS app"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once you‚Äôve reached this stage, run your application, and you‚Äôll find it displayed in the ‚Äúinspectable apps‚Äù window of the RealityCheck macOS app. After establishing a connection, you can start or stop streaming at your convenience and send updated versions of your ARView whenever needed. RealityCheck will take care of displaying and inspecting the ARView for you. üññ"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"getting_started_macos_inspectable_apps_window"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/realitycheckconnect\/gettingstarted"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/RealityCheckConnect\/documentation\/RealityCheckConnect\/GettingStarted","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Import the library, add the connect component to your view hierarchy, configure it, declare the neccessary permissions, and establish the connection (with optional streaming) to the RealityCheck macOS app."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Getting Started","role":"article","modules":[{"name":"RealityCheckConnect"}]},"hierarchy":{"paths":[["doc:\/\/RealityCheckConnect\/documentation\/RealityCheckConnect"]]},"references":{"doc://RealityCheckConnect/documentation/RealityCheckConnect/RealityCheckConnectView":{"role":"symbol","title":"RealityCheckConnectView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RealityCheckConnectView"}],"abstract":[{"type":"text","text":"Represents a SwiftUI view for controlling the RealityCheck connection and exchange of  the running AR experience data."}],"identifier":"doc:\/\/RealityCheckConnect\/documentation\/RealityCheckConnect\/RealityCheckConnectView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RealityCheckConnectView"}],"url":"\/documentation\/realitycheckconnect\/realitycheckconnectview"},"getting_started_bonjour":{"alt":"Xcode Info.plist editor with the required NSBonjourServices defined","type":"image","identifier":"getting_started_bonjour","variants":[{"url":"\/images\/getting_started_bonjour.png","traits":["1x","light"]}]},"getting_started_library":{"alt":"The Library interface in Xcode displaying the RealityConnectView SwiftUI component","type":"image","identifier":"getting_started_library","variants":[{"url":"\/images\/getting_started_library.png","traits":["1x","light"]}]},"getting_started_macos_inspectable_apps_window":{"alt":"The RealityCheck macOS app displaying the chooser window with an iOS app that is set up properly.","type":"image","identifier":"getting_started_macos_inspectable_apps_window","variants":[{"url":"\/images\/getting_started_macos_inspectable_apps_window.png","traits":["1x","light"]}]},"getting_started_spm-1":{"alt":"The Swift Package Manager import interface in Xcode","type":"image","identifier":"getting_started_spm-1","variants":[{"url":"\/images\/getting_started_spm-1.png","traits":["1x","light"]}]},"doc://RealityCheckConnect/documentation/RealityCheckConnect":{"role":"collection","title":"RealityCheckConnect","abstract":[{"type":"text","text":"The RealityCheckConnect package provides components for connecting to and managing RealityCheck AR debugging sessions."}],"identifier":"doc:\/\/RealityCheckConnect\/documentation\/RealityCheckConnect","kind":"symbol","type":"topic","url":"\/documentation\/realitycheckconnect"},"getting_started_cover":{"alt":"A MacBook and an iPhone running RealityCheck together","type":"image","identifier":"getting_started_cover","variants":[{"url":"\/images\/getting_started_cover.png","traits":["1x","light"]},{"url":"\/images\/getting_started_cover@2x.png","traits":["2x","light"]},{"url":"\/images\/getting_started_cover@3x.png","traits":["3x","light"]}]},"getting_started_spm-3":{"alt":"The Target Frameworks, Libraries and Embedded Content Xcode interface displaying the included RealityCheckConnect library","type":"image","identifier":"getting_started_spm-3","variants":[{"url":"\/images\/getting_started_spm-3.png","traits":["1x","light"]}]},"https://github.com/monstar-lab-oss/reality-check#getting-started":{"title":"https:\/\/github.com\/monstar-lab-oss\/reality-check","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/monstar-lab-oss\/reality-check"}],"type":"link","identifier":"https:\/\/github.com\/monstar-lab-oss\/reality-check#getting-started","url":"https:\/\/github.com\/monstar-lab-oss\/reality-check#getting-started"},"getting_started_spm-2":{"alt":"The Swift Package Manager import interface in Xcode step 2, displaying the product chooser","type":"image","identifier":"getting_started_spm-2","variants":[{"url":"\/images\/getting_started_spm-2.png","traits":["1x","light"]}]}}}